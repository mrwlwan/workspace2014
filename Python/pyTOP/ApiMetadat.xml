<?xml version="1.0" encoding="UTF-8"?>
<metadata versionNo="20120526">
<structs>
<struct>
<name>WlbItemBatch</name>
<desc>批次库存查询结果记录</desc>
<props>
<prop>
<name>batch_code</name>
<type>String</type>
<level>Basic</level>
<desc>批次编号</desc>
</prop>
<prop>
<name>creator</name>
<type>String</type>
<level>Basic</level>
<desc>创建者</desc>
</prop>
<prop>
<name>defect_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>残次数量</desc>
</prop>
<prop>
<name>due_date</name>
<type>Date</type>
<level>Basic</level>
<desc>到期时间</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>guarantee_period</name>
<type>String</type>
<level>Basic</level>
<desc>保质期</desc>
</prop>
<prop>
<name>guarantee_unit</name>
<type>Number</type>
<level>Basic</level>
<desc>天（单位）</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品批次记录id</desc>
</prop>
<prop>
<name>is_deleted</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除。0：正常 1：删除</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>last_modifier</name>
<type>String</type>
<level>Basic</level>
<desc>最后修改者</desc>
</prop>
<prop>
<name>produce_area</name>
<type>String</type>
<level>Basic</level>
<desc>产地</desc>
</prop>
<prop>
<name>produce_code</name>
<type>String</type>
<level>Basic</level>
<desc>生产编号</desc>
</prop>
<prop>
<name>produce_date</name>
<type>Date</type>
<level>Basic</level>
<desc>生产日期</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
<prop>
<name>receive_date</name>
<type>Date</type>
<level>Basic</level>
<desc>接受日期</desc>
</prop>
<prop>
<name>remarks</name>
<type>String</type>
<level>Basic</level>
<desc>描述</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。item_batch_status_open:开放 item_batch_status_lock:冻结 item_batch_status_invalid:无效</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>存储类型</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
<prop>
<name>version</name>
<type>Number</type>
<level>Basic</level>
<desc>版本</desc>
</prop>
</props>
</struct>
<struct>
<name>UserCredit</name>
<desc>用户信用</desc>
<props>
<prop>
<name>good_num</name>
<type>Number</type>
<level>Basic</level>
<desc>收到的好评总条数。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>信用等级（是根据score生成的），信用等级：淘宝会员在淘宝网上的信用度，分为20个级别，级别如：level = 1 时，表示一心；level = 2 时，表示二心</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<desc>信用总分（“好评”加一分，“中评”不加分，“差评”扣一分。分越高，等级越高）</desc>
</prop>
<prop>
<name>total_num</name>
<type>Number</type>
<level>Basic</level>
<desc>收到的评价总条数。取值范围:大于零的整数</desc>
</prop>
</props>
</struct>
<struct>
<name>Location</name>
<desc>用户地址</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>详细地址，最大256个字节（128个中文）</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>所在城市（中文名称）</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>国家名称</desc>
</prop>
<prop>
<name>district</name>
<type>String</type>
<level>Basic</level>
<desc>区/县（只适用于物流API）</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<desc>所在省份（中文名称）</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>User</name>
<desc>用户</desc>
<props>
<prop>
<name>alipay_account</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝账户</desc>
</prop>
<prop>
<name>alipay_bind</name>
<type>String</type>
<level>Basic</level>
<desc>有无绑定。可选值:bind(绑定),notbind(未绑定)</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝ID</desc>
</prop>
<prop>
<name>auto_repost</name>
<type>String</type>
<level>Basic</level>
<desc>是否受限制。可选值:limited(受限制),unlimited(不受限)</desc>
</prop>
<prop>
<name>avatar</name>
<type>String</type>
<level>Basic</level>
<desc>用户头像地址</desc>
</prop>
<prop>
<name>birthday</name>
<type>Date</type>
<level>Basic</level>
<desc>生日</desc>
</prop>
<prop>
<name>buyer_credit</name>
<type>UserCredit</type>
<level>Object</level>
<desc>买家信用</desc>
</prop>
<prop>
<name>consumer_protection</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否参加消保</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>用户注册时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>email</name>
<type>String</type>
<level>Basic</level>
<desc>联系人email</desc>
</prop>
<prop>
<name>has_more_pic</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否购买多图服务。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>has_shop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户作为卖家是否开过店</desc>
</prop>
<prop>
<name>has_sub_stock</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示用户是否具备修改商品减库存逻辑的权限（一共有拍下减库存和付款减库存两种逻辑） 
值含义： 
1）true：是 
2）false：否。</desc>
</prop>
<prop>
<name>is_golden_seller</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否是金牌卖家</desc>
</prop>
<prop>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否24小时闪电发货(实物类)</desc>
</prop>
<prop>
<name>item_img_num</name>
<type>Number</type>
<level>Basic</level>
<desc>可上传商品图片数量</desc>
</prop>
<prop>
<name>item_img_size</name>
<type>Number</type>
<level>Basic</level>
<desc>单张商品图片最大容量(商品主图大小)。单位:k</desc>
</prop>
<prop>
<name>last_visit</name>
<type>Date</type>
<level>Basic</level>
<desc>最近登陆时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>liangpin</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是无名良品用户，true or  false</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>用户当前居住地公开信息。如：location.city获取其中的city数据</desc>
</prop>
<prop>
<name>magazine_subscribe</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否订阅了淘宝天下杂志</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
<prop>
<name>online_gaming</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否为网游用户，属于隐私信息，需要登陆才能查看自己的。 
目前仅供taobao.user.get使用</desc>
</prop>
<prop>
<name>promoted_type</name>
<type>String</type>
<level>Basic</level>
<desc>有无实名认证。可选值:authentication(实名认证),not authentication(没有认证)</desc>
</prop>
<prop>
<name>prop_img_num</name>
<type>Number</type>
<level>Basic</level>
<desc>可上传属性图片数量</desc>
</prop>
<prop>
<name>prop_img_size</name>
<type>Number</type>
<level>Basic</level>
<desc>单张销售属性图片最大容量（非主图的商品图片和商品属性图片）。单位:k</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>UserCredit</type>
<level>Object</level>
<desc>卖家信用</desc>
</prop>
<prop>
<name>sex</name>
<type>String</type>
<level>Basic</level>
<desc>性别。可选值:m(男),f(女)</desc>
</prop>
<prop>
<name>sign_food_seller_promise</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否签署食品卖家承诺协议</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),inactive(未激活),delete(删除),reeze(冻结),supervise(监管)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>用户类型。可选值:B(B商家),C(C商家)</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<desc>用户字符串ID</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户数字ID</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>String</type>
<level>Basic</level>
<desc>用户参与垂直市场类型。shoes表示鞋城垂直市场用户，3C表示3C垂直市场用户。多个类型之间用","分隔。如：一个用户既是3C用户又是鞋城用户，那么这个字段返回就是"3C,shoes"。如果用户不是垂直市场用户，此字段返回为""。</desc>
</prop>
<prop>
<name>vip_info</name>
<type>String</type>
<level>Basic</level>
<desc>用户的全站vip信息，可取值如下：c(普通会员),asso_vip(荣誉会员)，vip1,vip2,vip3,vip4,vip5,vip6(六个等级的正式vip会员)，共8种取值，其中asso_vip是由vip会员衰退而成，与主站上的vip0对应。</desc>
</prop>
</props>
</struct>
<struct>
<name>UserInfo</name>
<desc>图片空间的用户信息获取，包括订购容量等</desc>
<props>
<prop>
<name>available_space</name>
<type>String</type>
<level>Basic</level>
<desc>用户的可用容量，即订购量与免费量之和</desc>
</prop>
<prop>
<name>free_space</name>
<type>String</type>
<level>Basic</level>
<desc>图片空间的免费容量</desc>
</prop>
<prop>
<name>order_expiry_date</name>
<type>String</type>
<level>Basic</level>
<desc>图片空间的订购有效期</desc>
</prop>
<prop>
<name>order_space</name>
<type>String</type>
<level>Basic</level>
<desc>用户订购的图片空间容量</desc>
</prop>
<prop>
<name>remaining_space</name>
<type>String</type>
<level>Basic</level>
<desc>剩余的图片空间容量</desc>
</prop>
<prop>
<name>used_space</name>
<type>String</type>
<level>Basic</level>
<desc>已使用的图片空间容量</desc>
</prop>
<prop>
<name>water_mark</name>
<type>String</type>
<level>Basic</level>
<desc>用户自定义的水印参数，通过"|"分割开，如果用户没有定义则为"" 
具体水印参数组合方法，用"|"分开，顺序按"是否全局设置|水印文字|是否文字水印优先|透明度|字体|字体大小|字体是否加粗|字体是否斜体|字体是否加下划线|字体颜色|旋转角度|是否带阴影|水印位置|图片水印URL|reference水印相对位置" reference取值有左上（1）/中间（3）/右下（2）,其中的null代表为空</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductImg</name>
<desc>产品图片</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品图片ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
</props>
</struct>
<struct>
<name>Product</name>
<desc>产品结构</desc>
<props>
<prop>
<name>binds</name>
<type>String</type>
<level>Basic</level>
<desc>产品的非关键属性列表.格式:pid:vid;pid:vid.</desc>
</prop>
<prop>
<name>binds_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的非关键属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>cat_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品类目名称</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品类目ID.必须是叶子类目ID</desc>
</prop>
<prop>
<name>collect_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的collect次数（不提供数据，返回0)</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>customer_props</name>
<type>String</type>
<level>Basic</level>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2 例如：“20000:优衣库”，表示“品牌:优衣库”</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>产品的描述.最大25000个字节</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的级别level</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>产品名称</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部产品ID</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>产品对应的图片路径</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>产品的主图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>产品的市场价.单位为元.精确到2位小数;如:200.07</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>product_imgs</name>
<type>ProductImg</type>
<level>Object Array</level>
<desc>产品的子图片.目前最多支持4张。fields中设置为product_imgs.id、product_imgs.url、product_imgs.position 等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>product_prop_imgs</name>
<type>ProductPropImg</type>
<level>Object Array</level>
<desc>产品的属性图片.比如说黄色对应的产品图片,绿色对应的产品图片。fields中设置为product_prop_imgs.id、  
product_prop_imgs.props、product_prop_imgs.url、product_prop_imgs.position等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>产品的关键属性列表.格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>props_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的关键属性字符串列表.比如:品牌:诺基亚;型号:N73(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>sale_props</name>
<type>String</type>
<level>Basic</level>
<desc>产品的销售属性列表.格式:pid:vid;pid:vid</desc>
</prop>
<prop>
<name>sale_props_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的销售属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>当前状态(0 商家确认 1 屏蔽 3 小二确认 2 未确认 -1 删除)</desc>
</prop>
<prop>
<name>tsc</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝标准产品编码</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>Number</type>
<level>Basic</level>
<desc>垂直市场,如：3（3C），4（鞋城）</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundRemindTimeout</name>
<desc>退款超时结构</desc>
<props>
<prop>
<name>exist_timeout</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在超时。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>remind_type</name>
<type>Number</type>
<level>Basic</level>
<desc>提醒的类型（退款详情中提示信息的类型）</desc>
</prop>
<prop>
<name>timeout</name>
<type>Date</type>
<level>Basic</level>
<desc>超时时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<name>ReferenceDetail</name>
<desc>图片的引用详情</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>引用者的地址</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>引用者的名字</desc>
</prop>
<prop>
<name>reference_type</name>
<type>String</type>
<level>Basic</level>
<desc>引用的类型:item,被宝贝引用；decorating，被装修引用；huabao，被画报引用；unreferenced，未被引用</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundMessage</name>
<desc>留言/凭证数据结构</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>留言内容。最大长度: 400个字节</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>留言创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>留言编号</desc>
</prop>
<prop>
<name>message_type</name>
<type>String</type>
<level>Basic</level>
<desc>退款类型：NORMAL（普通留言），RETURN_GOODS_APPROVED（卖家留退货地址时留言）；如果为RETURN_GOODS_APPROVED，则退款留言中有卖家收货地址</desc>
</prop>
<prop>
<name>owner_id</name>
<type>Number</type>
<level>Basic</level>
<desc>留言者编号</desc>
</prop>
<prop>
<name>owner_nick</name>
<type>String</type>
<level>Basic</level>
<desc>留言者昵称</desc>
</prop>
<prop>
<name>owner_role</name>
<type>String</type>
<level>Basic</level>
<desc>留言者身份
1代表买家，2代表卖家，3代表小二</desc>
</prop>
<prop>
<name>pic_urls</name>
<type>PicUrl</type>
<level>Object Array</level>
<desc>凭证附件地址（图片）</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款编号。</desc>
</prop>
</props>
</struct>
<struct>
<name>Order</name>
<desc>订单结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>手工调整金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易商品对应的类目ID</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>订单优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品的字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>is_oversold</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否超卖</desc>
</prop>
<prop>
<name>is_service_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是服务订单，是返回true，否返回false。</desc>
</prop>
<prop>
<name>item_meal_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套餐ID</desc>
</prop>
<prop>
<name>item_meal_name</name>
<type>String</type>
<level>Basic</level>
<desc>套餐的值。如：M8原装电池:便携支架:M8专用座充:莫凡保护袋</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>订单修改时间，目前只有taobao.trade.ordersku.update会返回此字段。</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买数量。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字ID</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单编号</desc>
</prop>
<prop>
<name>outer_iid</name>
<type>String</type>
<level>Basic</level>
<desc>商家外部编码(可与商家外部系统对接)。外部商家自己定义的商品Item的id，可以通过taobao.items.custom.get获取商品的Item的信息</desc>
</prop>
<prop>
<name>outer_sku_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部网店自己定义的Sku编号</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。计算公式如下：payment = price * num + adjust_fee - discount_fee + post_fee(邮费，单笔子订单时子订单实付金额包含邮费，多笔子订单时不包含邮费)；对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片的绝对路径</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最近退款ID</desc>
</prop>
<prop>
<name>refund_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。退款状态。可选值 WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意) WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货) WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货) SELLER_REFUSE_BUYER(卖家拒绝退款) CLOSED(退款关闭) SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>seller_type</name>
<type>String</type>
<level>Basic</level>
<desc>卖家类型，可选值为：B（商城商家），C（普通卖家）</desc>
</prop>
<prop>
<name>sku_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品的最小库存单位Sku的id.可以通过taobao.item.sku.get获取详细的Sku信息</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照详细信息</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照URL</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态（请关注此状态，如果为TRADE_CLOSED_BY_TAOBAO状态，则不要对此订单进行发货，切记啊！）。可选值:  
&lt;ul&gt; 
&lt;li&gt;TRADE_NO_CREATE_PAY(没有创建支付宝交易)  
&lt;li&gt;WAIT_BUYER_PAY(等待买家付款)  
&lt;li&gt;WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)  
&lt;li&gt;WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)  
&lt;li&gt;TRADE_BUYER_SIGNED(买家已签收,货到付款专用)  
&lt;li&gt;TRADE_FINISHED(交易成功)  
&lt;li&gt;TRADE_CLOSED(付款以后用户退款成功，交易自动关闭)  
&lt;li&gt;TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易)</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单超时到期时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>应付金额（商品价格 * 商品数量 + 手工调整金额 - 订单优惠金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>Refund</name>
<desc>退款结构</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>卖家收货地址</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>退款申请时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>退款说明</desc>
</prop>
<prop>
<name>good_return_time</name>
<type>Date</type>
<level>Basic</level>
<desc>退货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>good_status</name>
<type>String</type>
<level>Basic</level>
<desc>货物状态。可选值 
BUYER_NOT_RECEIVED (买家未收到货)  
BUYER_RECEIVED (买家已收到货)  
BUYER_RETURNED_GOODS (买家已退货)</desc>
</prop>
<prop>
<name>has_good_return</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否需要退货。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>申请退款的商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品购买数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>申请退款的商品数字编号</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单号。如果是单笔交易oid会等于tid</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款对应的订单交易状态。 
可选值 
TRADE_NO_CREATE_PAY(没有创建支付宝交易)  
WAIT_BUYER_PAY(等待买家付款)  
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)  
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)  
TRADE_BUYER_SIGNED(买家已签收,货到付款专用)  
TRADE_FINISHED(交易成功)  
TRADE_CLOSED(交易关闭)  
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭)  
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY)  
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)  
取自"http://open.taobao.com/dev/index.php/%E4%BA%A4%E6%98%93%E7%8A%B6%E6%80%81"</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>支付给卖家的金额(交易总金额-退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>退款原因</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>String</type>
<level>Basic</level>
<desc>退还金额(退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款单号</desc>
</prop>
<prop>
<name>refund_remind_timeout</name>
<type>RefundRemindTimeout</type>
<level>Object</level>
<desc>退款超时结构RefundRemindTimeout</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
<prop>
<name>sid</name>
<type>String</type>
<level>Basic</level>
<desc>退货运单号</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。 
可选值 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝交易单号</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易总金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>DiscardInfo</name>
<desc>用户丢失消息的数据结构</desc>
<props>
<prop>
<name>end</name>
<type>Number</type>
<level>Basic</level>
<desc>丢弃消息的结束时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户nick</desc>
</prop>
<prop>
<name>start</name>
<type>Number</type>
<level>Basic</level>
<desc>丢弃消息的开始时间</desc>
</prop>
<prop>
<name>subscribe_key</name>
<type>String</type>
<level>Basic</level>
<desc>非授权消息订阅的关键字，比如按商品编号订阅时，此值为num_iid</desc>
</prop>
<prop>
<name>subscribe_value</name>
<type>String</type>
<level>Basic</level>
<desc>非授权消息订阅的值，比如按商品编号订阅时，此值为商品的具体编号</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>消息类型</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
</props>
</struct>
<struct>
<name>DeliveryTemplate</name>
<desc>运费模板对象</desc>
<props>
<prop>
<name>assumer</name>
<type>Number</type>
<level>Basic</level>
<desc>可选值：0,1  
说明 
0:表示买家承担服务费; 
1:表示卖家承担服务费</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>模板创建时间</desc>
</prop>
<prop>
<name>fee_list</name>
<type>TopFee</type>
<level>Object Array</level>
<desc>运费模板中运费详细信息对象，包含默认运费和指定地区运费</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>模板修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>模板名称，长度不能超过25个字节</desc>
</prop>
<prop>
<name>supports</name>
<type>String</type>
<level>Basic</level>
<desc>物流服务模板支持增值服务列表，多个用分号隔开。cod:货到付款 mops：刷卡付款</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模块ID</desc>
</prop>
<prop>
<name>valuation</name>
<type>Number</type>
<level>Basic</level>
<desc>可选值：0
说明：
0:表示按宝贝件数计算运费</desc>
</prop>
</props>
</struct>
<struct>
<name>Trade</name>
<desc>交易结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手工调整金额，精确到2位小数，单位：元。如：200.07，表示：200元7分。来源于订单价格修改，如果有多笔子订单的时候，这个为0，单笔的话则跟[order].adjust_fee一样</desc>
</prop>
<prop>
<name>alipay_id</name>
<type>Number</type>
<level>Basic</level>
<desc>买家的支付宝id号，在UIC中有记录，买家支付宝的唯一标示，不因为买家更换Email账号而改变。</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>alipay_url</name>
<type>String</type>
<level>Basic</level>
<desc>创建交易接口成功后，返回的支付url</desc>
</prop>
<prop>
<name>alipay_warn_msg</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝下单成功了,但由于某种错误支付宝订单没有创建时返回的信息。taobao.trade.add接口专用</desc>
</prop>
<prop>
<name>available_confirm_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易中剩余的确认收货金额（这个金额会随着子订单确认收货而不断减少，交易成功后会变为零）。精确到2位小数;单位:元。如:200.07，表示:200 元7分</desc>
</prop>
<prop>
<name>buyer_alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>买家支付宝账号</desc>
</prop>
<prop>
<name>buyer_area</name>
<type>String</type>
<level>Basic</level>
<desc>买家下单的地区</desc>
</prop>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>buyer_email</name>
<type>String</type>
<level>Basic</level>
<desc>买家邮件地址</desc>
</prop>
<prop>
<name>buyer_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>买家备注旗帜（与淘宝网上订单的买家备注旗帜对应，只有买家才能查看该字段）</desc>
</prop>
<prop>
<name>buyer_memo</name>
<type>String</type>
<level>Basic</level>
<desc>买家备注（与淘宝网上订单的买家备注对应，只有买家才能查看该字段）</desc>
</prop>
<prop>
<name>buyer_message</name>
<type>String</type>
<level>Basic</level>
<desc>买家留言</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家获得积分,返点的积分。格式:100;单位:个。返点的积分要交易成功之后才能获得。</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否已评价。可选值:true(已评价),false(未评价)</desc>
</prop>
<prop>
<name>can_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家可以通过此字段查询是否当前交易可以评论，can_rate=true可以评价，false则不能评价。</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。</desc>
</prop>
<prop>
<name>cod_status</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款物流状态。
初始状态 NEW_CREATED,
接单成功 ACCEPTED_BY_COMPANY,
接单失败 REJECTED_BY_COMPANY,
接单超时 RECIEVE_TIMEOUT,
揽收成功 TAKEN_IN_SUCCESS,
揽收失败 TAKEN_IN_FAILED,
揽收超时 RECIEVE_TIMEOUT,
签收成功 SIGN_IN,
签收失败 REJECTED_BY_OTHER_SIDE,
订单等待发送给物流公司 WAITING_TO_BE_SENT,
用户取消物流订单 CANCELED</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>consign_time</name>
<type>Date</type>
<level>Basic</level>
<desc>卖家发货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>交易创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>系统优惠金额（如打折，VIP，满就送等），精确到2位小数，单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易结束时间。交易成功时间(更新交易状态为成功的同时更新)/确认收货时间或者交易关闭时间 。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>has_buyer_message</name>
<type>Boolean</type>
<level>Basic</level>
<desc>判断订单是否有买家留言，有买家留言返回true，否则返回false</desc>
</prop>
<prop>
<name>has_post_fee</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否包含邮费。与available_confirm_fee同时使用。可选值:true(包含),false(不包含)</desc>
</prop>
<prop>
<name>has_yfx</name>
<type>Boolean</type>
<level>Basic</level>
<desc>订单中是否包含运费险订单，如果包含运费险订单返回true，不包含运费险订单，返回false</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>invoice_name</name>
<type>String</type>
<level>Basic</level>
<desc>发票抬头</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是3D淘宝交易</desc>
</prop>
<prop>
<name>is_brand_sale</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示是否是品牌特卖订单，如果是返回true，如果不是返回false</desc>
</prop>
<prop>
<name>is_force_wlb</name>
<type>Boolean</type>
<level>Basic</level>
<desc>代表订单是否是强制使用物流宝发货，如果是返回true,如果不是返回false</desc>
</prop>
<prop>
<name>is_lgtype</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否需要物流宝发货的标识，如果为true，则需要可以用物流宝来发货，如果未false，则该订单不能用物流宝发货。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>交易修改时间(用户对订单的任何修改都会更新此字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品购买数量。取值范围：大于零的整数</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字编号</desc>
</prop>
<prop>
<name>orders</name>
<type>Order</type>
<level>Object Array</level>
<desc>订单列表</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss。订单的付款时间即为物流订单的创建时间。</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片绝对途径</desc>
</prop>
<prop>
<name>point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家使用积分。格式:100;单位:个.</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数；单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>promotion</name>
<type>String</type>
<level>Basic</level>
<desc>交易促销详细信息</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<desc>优惠详情</desc>
</prop>
<prop>
<name>real_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家实际使用积分（扣除部分退款使用的积分）。格式:100;单位:个</desc>
</prop>
<prop>
<name>received_payment</name>
<type>String</type>
<level>Basic</level>
<desc>卖家实际收到的支付宝打款金额（由于子订单可以部分确认收货，这个金额会随着子订单的确认收货而不断增加，交易成功后等于买家实付款减去退款金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的详细地址</desc>
</prop>
<prop>
<name>receiver_city</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在城市</desc>
</prop>
<prop>
<name>receiver_district</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在地区</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的电话号码</desc>
</prop>
<prop>
<name>receiver_state</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在省份</desc>
</prop>
<prop>
<name>receiver_zip</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的邮编</desc>
</prop>
<prop>
<name>seller_alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>卖家支付宝账号</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。卖家不承担服务费的订单：未发货的订单获取服务费为0，发货后就能获取到正确值。</desc>
</prop>
<prop>
<name>seller_email</name>
<type>String</type>
<level>Basic</level>
<desc>卖家邮件地址</desc>
</prop>
<prop>
<name>seller_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家备注旗帜（与淘宝网上订单的卖家备注旗帜对应，只有卖家才能查看该字段）</desc>
</prop>
<prop>
<name>seller_memo</name>
<type>String</type>
<level>Basic</level>
<desc>卖家备注（与淘宝网上订单的卖家备注对应，只有卖家才能查看该字段）</desc>
</prop>
<prop>
<name>seller_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手机</desc>
</prop>
<prop>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<desc>卖家姓名</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>seller_phone</name>
<type>String</type>
<level>Basic</level>
<desc>卖家电话</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否已评价。可选值:true(已评价),false(未评价)</desc>
</prop>
<prop>
<name>service_orders</name>
<type>ServiceOrder</type>
<level>Object Array</level>
<desc>服务子订单列表</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>创建交易时的物流方式（交易完成前，物流方式有可能改变，但系统里的这个字段一直不变）。可选值：free(卖家包邮),post(平邮),express(快递),ems(EMS), virtual(虚拟发货)。</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<desc>交易快照详细信息</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>交易快照地址</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>交易状态。可选值: 
    * TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
    * WAIT_BUYER_PAY(等待买家付款) 
    * WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
    * WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
    * TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
    * TRADE_FINISHED(交易成功) 
    * TRADE_CLOSED(付款以后用户退款成功，交易自动关闭) 
    * TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易编号 (父订单的交易编号)</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<desc>超时到期时间。格式:yyyy-MM-dd HH:mm:ss。业务规则： 
前提条件：只有在买家已付款，卖家已发货的情况下才有效 
如果申请了退款，那么超时会落在子订单上；比如说3笔ABC，A申请了，那么返回的是BC的列表, 主定单不存在 
如果没有申请过退款，那么超时会挂在主定单上；比如ABC，返回主定单，ABC的超时和主定单相同</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>交易标题，以店铺名作为此标题的值。注:taobao.trades.get接口返回的Trade中的title是商品名称</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>商品金额（商品价格乘以数量的总金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>trade_from</name>
<type>String</type>
<level>Basic</level>
<desc>交易来源。 
WAP(手机);HITAO(嗨淘);TOP(TOP平台);TAOBAO(普通淘宝);JHS(聚划算) 
一笔订单可能同时有以上多个标记，则以逗号分隔</desc>
</prop>
<prop>
<name>trade_memo</name>
<type>String</type>
<level>Basic</level>
<desc>交易备注。</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据  
可选值  
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
auto_delivery(自动发货)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</prop>
<prop>
<name>yfx_fee</name>
<type>String</type>
<level>Basic</level>
<desc>订单的运费险，单位为元</desc>
</prop>
<prop>
<name>yfx_id</name>
<type>String</type>
<level>Basic</level>
<desc>运费险订单号</desc>
</prop>
</props>
</struct>
<struct>
<name>TopFee</name>
<desc>运费模板中运费信息对象</desc>
<props>
<prop>
<name>add_fee</name>
<type>String</type>
<level>Basic</level>
<desc>增费：输入0.00-999.99（最多包含两位小数） 不能为空不输入运费时必须输入0</desc>
</prop>
<prop>
<name>add_standard</name>
<type>String</type>
<level>Basic</level>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数</desc>
</prop>
<prop>
<name>destination</name>
<type>String</type>
<level>Basic</level>
<desc>邮费子项涉及的地区,多个地区用逗号连接数量串;可以用taobao.areas.get接口获取.或者参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm 例 (110000,310000,320000,330000).就代表邮费子项涉 及(北京,上海,江苏,浙江)四个地区.填写时要注意对照地区代码值,如果填入错误地区代码,将会出现错误信息.</desc>
</prop>
<prop>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<desc>可选值：post:平邮; cod:货到付款; ems:EMS; express:快递公司</desc>
</prop>
<prop>
<name>start_fee</name>
<type>String</type>
<level>Basic</level>
<desc>首费：输入0.01-999.99（最多包含两位小数） 不能为空也不能为0</desc>
</prop>
<prop>
<name>start_standard</name>
<type>String</type>
<level>Basic</level>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数</desc>
</prop>
</props>
</struct>
<struct>
<name>Sku</name>
<desc>Sku结构</desc>
<props>
<prop>
<name>created</name>
<type>String</type>
<level>Basic</level>
<desc>sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>sku所属商品id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<desc>sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>sku所属商品数字id</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家设置的外部id</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>属于这个sku的商品的价格 取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>sku的销售属性组合字符串（颜色，大小，等等，可通过类目API获取某类目下的销售属性）,格式是p1:v1;p2:v2</desc>
</prop>
<prop>
<name>properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>sku所对应的销售属性的中文名字串，格式如：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>属于这个sku的商品的数量，</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>sku的id</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>sku状态。 normal:正常 ；delete:删除</desc>
</prop>
</props>
</struct>
<struct>
<name>Video</name>
<desc>商品视频关联记录</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>视频关联记录创建时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>视频关联记录的id，和商品相对应</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>视频记录关联的商品的数字id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>视频关联记录修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>视频记录所关联的商品的数字id</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>video的url连接地址。淘秀里视频记录里面存储的url地址</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>video的id，对应于视频在淘秀的存储记录</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopScore</name>
<desc>店铺动态评分信息</desc>
<props>
<prop>
<name>delivery_score</name>
<type>String</type>
<level>Basic</level>
<desc>发货速度评分</desc>
</prop>
<prop>
<name>item_score</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述评分</desc>
</prop>
<prop>
<name>service_score</name>
<type>String</type>
<level>Basic</level>
<desc>服务态度评分</desc>
</prop>
</props>
</struct>
<struct>
<name>SellerCat</name>
<desc>店铺内卖家自定义类目</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家自定义类目编号</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>卖家自定义类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目编号，值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>链接图片地址</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>该类目在页面上的排序位置</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>店铺类目类型：可选值：manual_type：手动分类，new_type：新品上价， tree_type：二三级类目树 ，property_type：属性叶子类目树， brand_type：品牌推广</desc>
</prop>
</props>
</struct>
<struct>
<name>PosterPicture</name>
<desc>画报图片结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>相关说明。</desc>
</prop>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<desc>图片ID。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间。</desc>
</prop>
<prop>
<name>poster_id</name>
<type>String</type>
<level>Basic</level>
<desc>画报ID。</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址。</desc>
</prop>
</props>
</struct>
<struct>
<name>LoginLog</name>
<desc>登录日志</desc>
<props>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>用户登录或退出客户端的时间</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>标志用户登录或退出。
0表示登陆，1表示退出。</desc>
</prop>
</props>
</struct>
<struct>
<name>Poster</name>
<desc>画报结构</desc>
<props>
<prop>
<name>channel_id</name>
<type>String</type>
<level>Basic</level>
<desc>画报所属频道id。</desc>
</prop>
<prop>
<name>cover_urls</name>
<type>String</type>
<level>Basic</level>
<desc>封面路径。由逗号(',')分开，最多2个</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间。</desc>
</prop>
<prop>
<name>hits</name>
<type>Number</type>
<level>Basic</level>
<desc>画报的点击总数。</desc>
</prop>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<desc>画报ID。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间。</desc>
</prop>
<prop>
<name>short_title</name>
<type>String</type>
<level>Basic</level>
<desc>图片短标题。</desc>
</prop>
<prop>
<name>tags</name>
<type>String</type>
<level>Basic</level>
<desc>画报相关标签，由逗号(',')分开，最多5个。</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>图片标题。</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>权重。-1 至 10 。10为最高。</desc>
</prop>
</props>
</struct>
<struct>
<name>EvalDetail</name>
<desc>评价详细</desc>
<props>
<prop>
<name>eval_code</name>
<type>Number</type>
<level>Basic</level>
<desc>评价详细： 
1 非常满意 
2 满意 
3 一般 
4 不满意</desc>
</prop>
<prop>
<name>eval_recer</name>
<type>String</type>
<level>Basic</level>
<desc>评价接收者</desc>
</prop>
<prop>
<name>eval_sender</name>
<type>String</type>
<level>Basic</level>
<desc>评价发送者</desc>
</prop>
<prop>
<name>eval_time</name>
<type>Date</type>
<level>Basic</level>
<desc>评价时间</desc>
</prop>
<prop>
<name>send_time</name>
<type>Date</type>
<level>Basic</level>
<desc>评价发送时间</desc>
</prop>
</props>
</struct>
<struct>
<name>StreamWeight</name>
<desc>分流权重</desc>
<props>
<prop>
<name>user</name>
<type>String</type>
<level>Basic</level>
<desc>账号</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>账号对应的权重</desc>
</prop>
</props>
</struct>
<struct>
<name>PosterChannel</name>
<desc>画报频道结构</desc>
<props>
<prop>
<name>cn_name</name>
<type>String</type>
<level>Basic</level>
<desc>频道的中文名称。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>频道的说明。</desc>
</prop>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<desc>频道ID号。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>频道名称。</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝频道链接地址。</desc>
</prop>
<prop>
<name>wapurl</name>
<type>String</type>
<level>Basic</level>
<desc>手机画报对应频道页的链接</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeConfirmFee</name>
<desc>确认收货费用结构</desc>
<props>
<prop>
<name>confirm_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>确认收货的金额(不包含邮费)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>confirm_post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>需确认收货的邮费，当不是最后一笔收货或者没有邮费时是0.00。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>is_last_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是最后一笔订单（只对子订单有效，当其他子订单都是交易完成时，返回true，否则false）</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemImg</name>
<desc>ItemImg结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品图片的id，和商品相对应</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopCat</name>
<desc>店铺类目</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目编号</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该类目是否为父类目。即：该类目是否还有子类目</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目编号，注：此类目指前台类目，值等于0：表示此类目为一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
</props>
</struct>
<struct>
<name>CarriageDetail</name>
<desc>物流公司资费相关信息</desc>
<props>
<prop>
<name>add_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>续费（单位：元）</desc>
</prop>
<prop>
<name>add_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>续重（单位：千克）</desc>
</prop>
<prop>
<name>damage_payment</name>
<type>String</type>
<level>Basic</level>
<desc>破损赔付</desc>
</prop>
<prop>
<name>got_time</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司揽收时间段</desc>
</prop>
<prop>
<name>initial_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>首费（单位：元）</desc>
</prop>
<prop>
<name>initial_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>首重（单位：千克）</desc>
</prop>
<prop>
<name>lost_payment</name>
<type>String</type>
<level>Basic</level>
<desc>丢单赔付</desc>
</prop>
<prop>
<name>way_day</name>
<type>String</type>
<level>Basic</level>
<desc>快件送达所需的时间(单位：天)</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductPropImg</name>
<desc>产品属性图片</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品属性图片ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>属性串(pid:vid),目前只有颜色属性.如:颜色:红色表示为　1627207:28326</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
</props>
</struct>
<struct>
<name>NotifyRefund</name>
<desc>退款通知消息</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>消息所属的用户昵称</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单退款交易编号</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>退款金额</desc>
</prop>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<desc>退款编号</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>退款操作所对应的退款增量消息状态  
可选值：  
RefundSuccess（退款成功）  
RefundClosed（退款关闭）  
RefundCreated（退款创建）  
RefundSellerAgreeAgreement（卖家同意退款协议）  
RefundSellerRefuseAgreement（卖家拒绝退款协议）  
RefundBuyerModifyAgreement（买家修改退款协议）  
RefundBuyerReturnGoods（买家退货给卖家）  
RefundCreateMessage（发表留言）  
RefundBlockMessage（屏蔽留言）  
RefundTimeoutRemind（退款超时提醒）</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>父订单退款交易编号</desc>
</prop>
</props>
</struct>
<struct>
<name>Shop</name>
<desc>店铺信息</desc>
<props>
<prop>
<name>all_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总橱窗数量，对于C卖家返回总橱窗数，对于B卖家返回0（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
<prop>
<name>bulletin</name>
<type>String</type>
<level>Basic</level>
<desc>店铺公告</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺所属的类目编号</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>开店时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>店铺描述</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>店标地址。返回相对路径，可以用"http://logo.taobao.com/shop-logo"来拼接成绝对路径</desc>
</prop>
<prop>
<name>remain_count</name>
<type>Number</type>
<level>Basic</level>
<desc>剩余橱窗数量，对于C卖家返回剩余橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
<prop>
<name>shop_score</name>
<type>ShopScore</type>
<level>Object</level>
<desc>店铺动态评分信息</desc>
</prop>
<prop>
<name>sid</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺编号。shop+sid.taobao.com即店铺地址，如shop123456.taobao.com</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺标题</desc>
</prop>
<prop>
<name>used_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已用的橱窗数量，对于C卖家返回已使用的橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
</props>
</struct>
<struct>
<name>ServiceOrder</name>
<desc>商城虚拟服务子订单数据结构</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>item_oid</name>
<type>Number</type>
<level>Basic</level>
<desc>服务所属的交易订单号。如果服务为一年包换，则item_oid这笔订单享受改服务的保护</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买数量，取值范围为大于0的整数</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>虚拟服务子订单订单号</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>服务图片地址</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>服务价格，精确到小数点后两位：单位:元</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最近退款的id</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>service_detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>服务详情的URL地址</desc>
</prop>
<prop>
<name>service_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务数字id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>服务子订单总费用</desc>
</prop>
</props>
</struct>
<struct>
<name>PropImg</name>
<desc>商品属性图片结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>属性图片的id，和商品相对应</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>图片所对应的属性组合的字符串</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>NotifyTrade</name>
<desc>交易通知消息</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>交易修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>消息所属的用户昵称</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易消息关联的子订单id号。多笔订单父订单操作时oid与tid一致</desc>
</prop>
<prop>
<name>payment</name>
<type>Price</type>
<level>Basic</level>
<desc>买家实付金额</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>交易操作所对应的交易增量消息状态，对应与NotifyTrade的status字段  
 
可选值  
TradeCreate（创建交易）  
TradeModifyFee（修改交易费用）  
TradeCloseAndModifyDetailOrder（关闭或修改子订单）  
TradeClose（关闭交易）  
TradeBuyerPay（买家付款）  
TradeSellerShip（卖家发货）  
TradeDelayConfirmPay（延长收货时间）  
TradePartlyRefund（子订单退款成功）  
TradePartlyConfirmPay（子订单打款成功）  
TradeSuccess（交易成功）  
TradeTimeoutRemind（交易超时提醒）  
TradeRated（交易评价变更）  
TradeMemoModified（交易备注修改）  
TradeLogisticsAddressChanged（修改交易收货地址）  
TradeChanged（修改订单信息（SKU等））</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易编号</desc>
</prop>
<prop>
<name>trade_mark</name>
<type>String</type>
<level>Basic</level>
<desc>交易信息中符合用户订阅的attributes标记的key1name:value1name;key2name:value2name;……标记串。必需在SubscribeMessage的attributes中订阅过的标记，并且交易上有此标记才会返回，否则此字段为空。返回值的keyname和valuename根据用户的自定义的key名称和value值别名返回。</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>交易类型。除了交易超时提醒消息没有类型以外，其他消息都有交易类型。 
 
具体分类有：  
 
可选值  
ec（直冲）  
guarantee_trade（一口价、拍卖）  
auto_delivery（自动发货）  
cod（货到付款）  
independent_shop_trade（旺店标准版交易）  
independent_simple_trade（旺店入门版交易）  
shopex_trade（ShopEX版)  
netcn_trade（淘宝与万网合作版网）  
travel（旅游产品交易）  
fenxiao（分销平台交易）  
game_equipment（网游虚拟交易）</desc>
</prop>
</props>
</struct>
<struct>
<name>Subscription</name>
<desc>订阅类型</desc>
<props>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>增量消息的状态（隶属于主题）。具体选值请见：商品消息状态、退款消息状态、交易消息状态中的说明。</desc>
</prop>
<prop>
<name>topic</name>
<type>String</type>
<level>Basic</level>
<desc>增量消息所属的主题。 
可选值  
trade（交易类型）  
item（商品类型）  
refund（退款类型）</desc>
</prop>
</props>
</struct>
<struct>
<name>Brand</name>
<desc>品牌</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>vid的值</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>品牌的属性id</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<desc>品牌的属性名</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<desc>对应属性的 pid:vid 串中的vid</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemCat</name>
<desc>商品类目结构</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属类目ID</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>Feature对象列表 
目前已有的属性： 
若Attr_key为 udsaleprop，attr_value为1 则允许卖家在改类目新增自定义销售属性,不然为不允许</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该类目是否为父类目(即：该类目是否还有子类目)</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>增量类目：修改时间</desc>
</prop>
<prop>
<name>modified_type</name>
<type>String</type>
<level>Basic</level>
<desc>三种枚举类型：modify，add，delete（增量类目api使用）</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目ID=0时，代表的是一级的类目</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
</props>
</struct>
<struct>
<name>PropValue</name>
<desc>属性值</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否为父类目属性</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间（类目增量专用）</desc>
</prop>
<prop>
<name>modified_type</name>
<type>String</type>
<level>Basic</level>
<desc>三种枚举类型：modify，add，delete (增量类目专用)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性值</desc>
</prop>
<prop>
<name>name_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性值别名</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性 ID</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性值ID</desc>
</prop>
</props>
</struct>
<struct>
<name>NotifyItem</name>
<desc>商品通知消息</desc>
<props>
<prop>
<name>changed_fields</name>
<type>String</type>
<level>Basic</level>
<desc>商品此次操作所变更的字段，以“,”分割，对应于商品Item的字段名称。目前支持title，price，num，item_img，prop_img，location，cid，approve_status， list_time几个字段的更改标记返回，其中“item_img，prop_img”会同时出现表示商品相关图片列表发生了修改</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>increment</name>
<type>Number</type>
<level>Basic</level>
<desc>商品库存的变化量，当商品库存增加时，此值为正数；当商品库存减少时，此值为负数。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字编号</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格，格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品SKU编号</desc>
</prop>
<prop>
<name>sku_num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品SKU库存</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>商品操作所对应的商品增量消息状态。 
可选值  
ItemAdd（新增商品）  
ItemUpshelf（上架商品）  
ItemDownshelf（下架商品）  
ItemDelete（删除商品）  
ItemUpdate（更新商品）  
ItemRecommendDelete（取消橱窗推荐商品）  
ItemRecommendAdd（橱窗推荐商品）  
ItemZeroStock（商品卖空） 
ItemPunishDelete（小二删除商品） 
ItemPunishDownshelf（小二下架商品） 
ItemPunishCc（小二CC商品） 
ItemSkuZeroStock（商品SKU卖空） 
ItemStockChanged（修改商品库存）</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题,不能超过60字节</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItemBatchInventory</name>
<desc>商品的库存信息和批次信息</desc>
<props>
<prop>
<name>item_batch</name>
<type>WlbItemBatch</type>
<level>Object Array</level>
<desc>批次库存查询结果</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>item_inventorys</name>
<type>WlbItemInventory</type>
<level>Object Array</level>
<desc>商品库存查询结果</desc>
</prop>
<prop>
<name>total_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品在所有仓库的可销库存总数</desc>
</prop>
</props>
</struct>
<struct>
<name>Item</name>
<desc>Item(商品)结构</desc>
<props>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<desc>售后服务ID,该字段仅在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>approve_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品上传后的状态。onsale出售中，instock库中</desc>
</prop>
<prop>
<name>auction_point</name>
<type>Number</type>
<level>Basic</level>
<desc>商城返点比例，为5的倍数，最低0.5%</desc>
</prop>
<prop>
<name>auto_fill</name>
<type>String</type>
<level>Basic</level>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： 
time_card(点卡软件代充) 
fee_card(话费软件代充)</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属的叶子类目 id</desc>
</prop>
<prop>
<name>cod_postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货到付款运费模板ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>Item的发布时间，目前仅供taobao.item.add和taobao.item.get可用</desc>
</prop>
<prop>
<name>delist_time</name>
<type>Date</type>
<level>Basic</level>
<desc>下架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述, 字数要大于5个字符，小于25000个字符</desc>
</prop>
<prop>
<name>detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品url</desc>
</prop>
<prop>
<name>ems_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>ems费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>express_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>快递费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<desc>运费承担方式,seller（卖家承担），buyer(买家承担）</desc>
</prop>
<prop>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>支持会员打折,true/false</desc>
</prop>
<prop>
<name>has_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有发票,true/false</desc>
</prop>
<prop>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<desc>橱窗推荐,true/false</desc>
</prop>
<prop>
<name>has_warranty</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有保修,true/false</desc>
</prop>
<prop>
<name>increment</name>
<type>String</type>
<level>Basic</level>
<desc>加价幅度。如果为0，代表系统代理幅度。 
在竞拍中，为了超越上一个出价，会员需要在当前出价上增加金额，这个金额就是加价幅度。卖家在发布宝贝的时候可以自定义加价幅度，也可以让系统自动代理加价。系统自动代理加价的加价幅度随着当前出价金额的增加而增加，我们建议会员使用系统自动代理加价，并请买家在出价前看清楚加价幅度的具体金额。另外需要注意是，此功能只适用于拍卖的商品。 
以下是系统自动代理加价幅度表： 
当前价（加价幅度 ） 
1-40（ 1 ）、41-100（ 2 ）、101-200（5 ）、201-500 （10）、501-1001（15）、001-2000（25）、2001-5000（50）、5001-10000（100） 
10001以上         200</desc>
</prop>
<prop>
<name>inner_shop_auction_template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户内店宝贝装修模板id</desc>
</prop>
<prop>
<name>input_pids</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</prop>
<prop>
<name>input_str</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5”，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过 3999字节。</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是3D淘宝的商品</desc>
</prop>
<prop>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否在外部网店显示</desc>
</prop>
<prop>
<name>is_fenxiao</name>
<type>Number</type>
<level>Basic</level>
<desc>非分销商品：0，代销：1，经销：2</desc>
</prop>
<prop>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否24小时闪电发货</desc>
</prop>
<prop>
<name>is_prepay</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否为先行赔付 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否在淘宝显示</desc>
</prop>
<prop>
<name>is_timing</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否定时上架商品</desc>
</prop>
<prop>
<name>is_virtual</name>
<type>Boolean</type>
<level>Basic</level>
<desc>虚拟商品的状态字段</desc>
</prop>
<prop>
<name>is_xinpin</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标示商品是否为新品。 
值含义：true-是，false-否。</desc>
</prop>
<prop>
<name>item_imgs</name>
<type>ItemImg</type>
<level>Object Array</level>
<desc>商品图片列表(包括主图)。fields中只设置item_img可以返回ItemImg结构体中所有字段，如果设置为item_img.id、item_img.url、item_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>list_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>商品所在地</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字id</desc>
</prop>
<prop>
<name>one_station</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否淘1站商品</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家外部编码(可与商家外部系统对接)</desc>
</prop>
<prop>
<name>outer_shop_auction_template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户外店装修模板id</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品主图片地址</desc>
</prop>
<prop>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>平邮费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝所属的运费模板ID，如果没有返回则说明没有使用运费模板</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格，格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝所属产品的id(可能为空). 该字段可以通过taobao.products.search 得到</desc>
</prop>
<prop>
<name>promoted_service</name>
<type>String</type>
<level>Basic</level>
<desc>消保类型，多个类型以,分割。可取以下值：
2：假一赔三；4：7天无理由退换货；taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>prop_imgs</name>
<type>PropImg</type>
<level>Object Array</level>
<desc>商品属性图片列表。fields中只设置prop_img可以返回PropImg结构体中所有字段，如果设置为prop_img.id、prop_img.url、prop_img.properties、prop_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性值别名,比如颜色的自定义名称</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性 格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>props_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性名称。标识着props内容里面的pid和vid所对应的名称。格式为：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属卖家的信用等级数，1表示1心，2表示2心……，只有调用商品搜索:taobao.items.get和taobao.items.search的时候才能返回</desc>
</prop>
<prop>
<name>second_kill</name>
<type>String</type>
<level>Basic</level>
<desc>秒杀商品类型。打上秒杀标记的商品，用户只能下架并不能再上架，其他任何编辑或删除操作都不能进行。如果用户想取消秒杀标记，需要联系小二进行操作。如果秒杀结束需要自由编辑请联系活动负责人（小二）去掉秒杀标记。可选类型 
web_only(只能通过web网络秒杀) 
wap_only(只能通过wap网络秒杀) 
web_and_wap(既能通过web秒杀也能通过wap秒杀)</desc>
</prop>
<prop>
<name>sell_promise</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否承诺退换货服务!</desc>
</prop>
<prop>
<name>seller_cids</name>
<type>String</type>
<level>Basic</level>
<desc>商品所属的店铺内卖家自定义类目列表</desc>
</prop>
<prop>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>&lt;a href="http://open.taobao.com/dev/index.php/Sku"&gt;Sku&lt;/a&gt;列表。fields中只设置sku可以返回Sku结构体中所有字段，如果设置为sku.sku_id、sku.properties、sku.quantity等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品新旧程度(全新:new，闲置:unused，二手：second)</desc>
</prop>
<prop>
<name>sub_stock</name>
<type>Number</type>
<level>Basic</level>
<desc>标识商品减库存的方式 
值含义：1-拍下减库存，2-付款减库存。</desc>
</prop>
<prop>
<name>template_id</name>
<type>String</type>
<level>Basic</level>
<desc>页面模板id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题,不能超过60字节</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>商品类型(fixed:一口价;auction:拍卖)注：取消团购</desc>
</prop>
<prop>
<name>valid_thru</name>
<type>Number</type>
<level>Basic</level>
<desc>有效期,7或者14（默认是14天）</desc>
</prop>
<prop>
<name>videos</name>
<type>Video</type>
<level>Object Array</level>
<desc>商品视频列表(目前只支持单个视频关联)。fields中只设置video可以返回Video结构体中所有字段，如果设置为video.id、video.video_id、 
video.url等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>violation</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否违规，违规：true , 不违规：false</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<desc>对应搜索商品列表页的最近成交量,只有调用商品搜索:taobao.items.get和taobao.items.search的时候才能返回</desc>
</prop>
<prop>
<name>wap_desc</name>
<type>String</type>
<level>Basic</level>
<desc>不带html标签的desc文本信息，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>wap_detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>适合wap应用的商品详情url ，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>ww_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品所属的商家的旺旺在线状况， 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItemInventory</name>
<desc>物流宝商品库存</desc>
<props>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>lock_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>锁定库存数量</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>库存数量</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>SELLALBE 可销售库存 
DEFECTIVE 残次 
JISHUN 机损 
XIANGSHUN 箱损 
FREEZE 冻结库存 
ONROAD 在途库存</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemCategory</name>
<desc>商品查询分类结果</desc>
<props>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分类ID</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
</props>
</struct>
<struct>
<name>Range</name>
<desc>营销工具的范围类！</desc>
<props>
<prop>
<name>participate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>营销范围参与者id。即MarketingRangeDO中的participateId。</desc>
</prop>
<prop>
<name>participate_type</name>
<type>Number</type>
<level>Basic</level>
<desc>营销范围参与者类型。MarketingRangeDO中的participateType。(1:商品;2:店铺;3:seller;4:sku;5:category;6:shopCategory)</desc>
</prop>
</props>
</struct>
<struct>
<name>SellerAuthorize</name>
<desc>授权</desc>
<props>
<prop>
<name>brands</name>
<type>Brand</type>
<level>Object Array</level>
<desc>品牌列表</desc>
</prop>
<prop>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>类目列表</desc>
</prop>
<prop>
<name>xinpin_item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>被授权的新品类目列表</desc>
</prop>
</props>
</struct>
<struct>
<name>BuyerCouponDetail</name>
<desc>买家持有优惠券信息</desc>
<props>
<prop>
<name>condition</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券使用条件，订单满多少分才能用这个优惠券，501就是满501分能使用。注意：返回的是“分”，不是“元”</desc>
</prop>
<prop>
<name>coupon_number</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券编号</desc>
</prop>
<prop>
<name>denomination</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券的面值，返回的是“分”，不是“元”，500代表500分相当于5元</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠券有效期</desc>
</prop>
<prop>
<name>receiver</name>
<type>String</type>
<level>Basic</level>
<desc>已转送状态下，收到优惠券的淘宝昵称</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>source</name>
<type>String</type>
<level>Basic</level>
<desc>优惠券来源，卖家或赠送人的淘宝昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>unused：未使用，using：使用中,used,已经使用，overdue：已经过期，transfered：已经转发</desc>
</prop>
</props>
</struct>
<struct>
<name>Msg</name>
<desc>聊天消息内容</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>消息内容</desc>
</prop>
<prop>
<name>direction</name>
<type>Number</type>
<level>Basic</level>
<desc>direction=0为from_id发送消息给to_id，direction=1为to_id发送消息给from_id</desc>
</prop>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>消息日期</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemProp</name>
<desc>商品属性</desc>
<props>
<prop>
<name>child_template</name>
<type>String</type>
<level>Basic</level>
<desc>子属性的模板（卖家自行输入属性时需要用到）</desc>
</prop>
<prop>
<name>is_allow_alias</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否允许别名。可选值：true（是），false（否）</desc>
</prop>
<prop>
<name>is_color_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否颜色属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_enum_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是可枚举属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_input_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否)。&lt;b&gt;对于品牌和型号属性（包括子属性）：如果用户是C卖家，则可自定义属性；如果是B卖家，则不可自定义属性，而必须要授权的属性。&lt;/b&gt;</desc>
</prop>
<prop>
<name>is_item_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否商品属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_key_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_sale_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>属性修改时间（增量类目专用）</desc>
</prop>
<prop>
<name>modified_type</name>
<type>String</type>
<level>Basic</level>
<desc>三种枚举类型：modify，add，delete（增量类目专用）</desc>
</prop>
<prop>
<name>multi</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否可以多选。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>must</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否为必选属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名</desc>
</prop>
<prop>
<name>parent_pid</name>
<type>Number</type>
<level>Basic</level>
<desc>上级属性ID</desc>
</prop>
<prop>
<name>parent_vid</name>
<type>Number</type>
<level>Basic</level>
<desc>上级属性值ID</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性 ID 例：品牌的PID=20000</desc>
</prop>
<prop>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<desc/>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号。取值范围:大于零的整排列序号。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>属性值类型。可选值：input(输入)、optional（枚举）multiCheck （多选）</desc>
</prop>
</props>
</struct>
<struct>
<name>Picture</name>
<desc>图片</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片的创建时间</desc>
</prop>
<prop>
<name>deleted</name>
<type>String</type>
<level>Basic</level>
<desc>图片是否删除的标记</desc>
</prop>
<prop>
<name>md5</name>
<type>String</type>
<level>Basic</level>
<desc>图片在后台处理之后的md5值 
当md5值为32位长度的字符串时为图片搬家后的文件md5验证码 
md5值为长整数时为图片替换后的时间戳</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>图片的修改时间</desc>
</prop>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片ID</desc>
</prop>
<prop>
<name>picture_path</name>
<type>String</type>
<level>Basic</level>
<desc>返回的是绝对路径如：http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg</desc>
</prop>
<prop>
<name>pixel</name>
<type>String</type>
<level>Basic</level>
<desc>图片相素,格式:长x宽，如450x150</desc>
</prop>
<prop>
<name>referenced</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片是否被引用</desc>
</prop>
<prop>
<name>sizes</name>
<type>Number</type>
<level>Basic</level>
<desc>图片大小,bite单位</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>图片状态,unfroze代表没有被冻结，froze代表被冻结,pass代表排查通过</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>图片标题</desc>
</prop>
<prop>
<name>uid</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
</props>
</struct>
<struct>
<name>Area</name>
<desc>地址区域结构</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>标准行政区域代码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20120105_402777427.htm</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>地域名称.如北京市,杭州市,西湖区,每一个area_id 都代表了一个具体的地区.</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父节点区域标识.如北京市的area_id是110100,朝阳区是北京市的一个区,所以朝阳区的parent_id就是北京市的area_id.</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>区域类型.area区域 1:country/国家;2:province/省/自治区/直辖市;3:city/地区(省下面的地级市);4:district/县/市(县级市)/区;abroad:海外. 比如北京市的area_type = 2,朝阳区是北京市的一个区,所以朝阳区的area_type = 4.</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>具体一个地区的邮编</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsCompany</name>
<desc>物流公司基础数据结构</desc>
<props>
<prop>
<name>code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流公司标识</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司简称</desc>
</prop>
<prop>
<name>reg_mail_no</name>
<type>String</type>
<level>Basic</level>
<desc>运单号验证正则表达式</desc>
</prop>
</props>
</struct>
<struct>
<name>Shipping</name>
<desc>物流数据结构</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>运单创建时间</desc>
</prop>
<prop>
<name>delivery_end</name>
<type>Date</type>
<level>Basic</level>
<desc>预约取货结束时间</desc>
</prop>
<prop>
<name>delivery_start</name>
<type>Date</type>
<level>Basic</level>
<desc>预约取货开始时间</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<desc>谁承担运费.可选值:buyer(买家承担),seller(卖家承担运费).</desc>
</prop>
<prop>
<name>is_quick_cod_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标示为是否快捷COD订单</desc>
</prop>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回发货是否成功。</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>货物名称</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>收件人地址信息(在传输请求参数Fields字段时，必须使用“receiver_location”才能返回此字段)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>运单修改时间</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单编号</desc>
</prop>
<prop>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<desc>运单号.具体一个物流公司的运单号码.</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收件人手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>收件人姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收件人电话</desc>
</prop>
<prop>
<name>seller_confirm</name>
<type>String</type>
<level>Basic</level>
<desc>卖家是否确认发货.可选值:yes(是),no(否).</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单状态,可选值: 
CREATED(订单已创建)  
RECREATED(订单重新创建)  
CANCELLED(订单已取消)  
CLOSED(订单关闭)  
SENDING(等候发送给物流公司)  
ACCEPTING(已发送给物流公司,等待接单)  
ACCEPTED(物流公司已接单)  
REJECTED(物流公司不接单)  
PICK_UP(物流公司揽收成功)  
PICK_UP_FAILED(物流公司揽收失败)  
LOST(物流公司丢单)  
REJECTED_BY_RECEIVER(对方拒签)  
ACCEPTED_BY_RECEIVER(对方已签收)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易ID</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeRate</name>
<desc>评价列表</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>评价内容,最大长度:500个汉字</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>评价创建时间,格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格,精确到2位小数;单位:元.如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>评价者昵称</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单ID</desc>
</prop>
<prop>
<name>rated_nick</name>
<type>String</type>
<level>Basic</level>
<desc>被评价者昵称</desc>
</prop>
<prop>
<name>reply</name>
<type>String</type>
<level>Basic</level>
<desc>评价解释,最大长度:500个汉字</desc>
</prop>
<prop>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
</prop>
<prop>
<name>role</name>
<type>String</type>
<level>Basic</level>
<desc>评价者角色.可选值:seller(卖家),buyer(买家)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易ID</desc>
</prop>
<prop>
<name>valid_score</name>
<type>Boolean</type>
<level>Basic</level>
<desc>评价信息是否用于记分， 
可取值：true(参与记分)和false(不参与记分)</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoSku</name>
<desc>分销产品SKU</desc>
<props>
<prop>
<name>cost_price</name>
<type>String</type>
<level>Basic</level>
<desc>代销采购价，单位：元</desc>
</prop>
<prop>
<name>dealer_cost_price</name>
<type>String</type>
<level>Basic</level>
<desc>经销采购价</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>SkuID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>名称</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>sku的销售属性组合字符串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充。</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>库存</desc>
</prop>
<prop>
<name>standard_price</name>
<type>String</type>
<level>Basic</level>
<desc>市场价</desc>
</prop>
</props>
</struct>
<struct>
<name>TaobaokeReportMember</name>
<desc>淘宝客报表成员</desc>
<props>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<desc>应用授权码</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>所购买商品的类目ID</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>所购买商品的类目名称</desc>
</prop>
<prop>
<name>commission</name>
<type>Price</type>
<level>Basic</level>
<desc>用户获得的佣金</desc>
</prop>
<prop>
<name>commission_rate</name>
<type>String</type>
<level>Basic</level>
<desc>佣金比率。比如：0.01代表1%</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品字符串ID(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品成交数量</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<desc>推广渠道</desc>
</prop>
<prop>
<name>pay_price</name>
<type>Price</type>
<level>Basic</level>
<desc>成交价格</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>成交时间</desc>
</prop>
<prop>
<name>real_pay_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>实际支付金额</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺名称</desc>
</prop>
<prop>
<name>trade_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝交易号</desc>
</prop>
</props>
</struct>
<struct>
<name>Permission</name>
<desc>权限信息</desc>
<props>
<prop>
<name>is_authorize</name>
<type>Number</type>
<level>Basic</level>
<desc>1 :允许授权  2：不允许授权 6：不允许授权但默认已有权限</desc>
</prop>
<prop>
<name>parent_code</name>
<type>String</type>
<level>Basic</level>
<desc>父权限code</desc>
</prop>
<prop>
<name>permission_code</name>
<type>String</type>
<level>Basic</level>
<desc>注册到权限中心的code值</desc>
</prop>
<prop>
<name>permission_name</name>
<type>String</type>
<level>Basic</level>
<desc>权限名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Receiver</name>
<desc>收货人详细信息</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的详细地址信息</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的城市</desc>
</prop>
<prop>
<name>district</name>
<type>String</type>
<level>Basic</level>
<desc>区/县</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<desc>移动电话。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>收货人全名。</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>固定电话。</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<desc>收货人所在省份</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>LoginUser</name>
<desc>登录分销用户信息</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>入驻时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>会员NICK</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销用户ID</desc>
</prop>
<prop>
<name>user_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销用户类型(1:分销商，2:供应商)</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemSearch</name>
<desc>商品搜索</desc>
<props>
<prop>
<name>item_categories</name>
<type>ItemCategory</type>
<level>Object Array</level>
<desc>商品搜索分类</desc>
</prop>
<prop>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>商品列表</desc>
</prop>
</props>
</struct>
<struct>
<name>TaobaokeReport</name>
<desc>淘宝客报表</desc>
<props>
<prop>
<name>taobaoke_report_members</name>
<type>TaobaokeReportMember</type>
<level>Object Array</level>
<desc>淘宝客报表成员列表</desc>
</prop>
<prop>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的结果的总条数</desc>
</prop>
</props>
</struct>
<struct>
<name>PurchaseOrder</name>
<desc>采购单及子采购单信息</desc>
<props>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号。</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家nick，供应商查询不会返回买家昵称，分销商查询才会返回。</desc>
</prop>
<prop>
<name>consign_time</name>
<type>Date</type>
<level>Basic</level>
<desc>物流发货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>采购单创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>distributor_from</name>
<type>String</type>
<level>Basic</level>
<desc>分销商来源网站（taobao）。</desc>
</prop>
<prop>
<name>distributor_payment</name>
<type>Price</type>
<level>Basic</level>
<desc>分销商实付金额。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>distributor_username</name>
<type>String</type>
<level>Basic</level>
<desc>分销商在来源网站的帐号名。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易结束时间</desc>
</prop>
<prop>
<name>fenxiao_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销流水号，分销平台产生的主键</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商交易ID 非采购单ID，如果改发货状态 是需要该ID，ID在用户未付款前为0，付款后有具体值（发货时使用该ID）</desc>
</prop>
<prop>
<name>isv_custom_key</name>
<type>String</type>
<level>Basic Array</level>
<desc>自定义key</desc>
</prop>
<prop>
<name>isv_custom_value</name>
<type>String</type>
<level>Basic Array</level>
<desc>自定义值</desc>
</prop>
<prop>
<name>logistics_company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司</desc>
</prop>
<prop>
<name>logistics_id</name>
<type>String</type>
<level>Basic</level>
<desc>运单号</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>采购单留言。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>交易修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>pay_type</name>
<type>String</type>
<level>Basic</level>
<desc>支付方式：ALIPAY_SURETY（支付宝担保交易）、ALIPAY_CHAIN（分账交易）、TRANSFER（线下转账）、PREPAY（预存款）、IMMEDIATELY（即时到账）</desc>
</prop>
<prop>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>采购单邮费。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>receiver</name>
<type>Receiver</type>
<level>Object</level>
<desc>买家详细的信息。</desc>
</prop>
<prop>
<name>shipping</name>
<type>String</type>
<level>Basic</level>
<desc>配送方式，FAST(快速)、EMS、ORDINARY(平邮)、SELLER(卖家包邮)</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照URL</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>采购单交易状态。可选值：&lt;br&gt; 
WAIT_BUYER_PAY(等待付款)&lt;br&gt; 
WAIT_SELLER_SEND_GOODS(已付款，待发货）&lt;br&gt; 
WAIT_BUYER_CONFIRM_GOODS(已付款，已发货)&lt;br&gt; 
TRADE_FINISHED(交易成功)&lt;br&gt; 
TRADE_CLOSED(交易关闭)&lt;br&gt; 
WAIT_BUYER_CONFIRM_GOODS_ACOUNTED(已付款（已分账），已发货。只对代销分账支持)&lt;br&gt; 
WAIT_SELLER_SEND_GOODS_ACOUNTED(已付款（已分账），待发货。只对代销分账支持)</desc>
</prop>
<prop>
<name>sub_purchase_orders</name>
<type>SubPurchaseOrder</type>
<level>Object Array</level>
<desc>子订单的详细信息列表。</desc>
</prop>
<prop>
<name>supplier_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>返回供应商备注旗帜 
vlaue在1-5之间。非1-5之间，都采用1作为默认。 1:红色 2:黄色 3:绿色 4:蓝色 5:粉红色</desc>
</prop>
<prop>
<name>supplier_from</name>
<type>String</type>
<level>Basic</level>
<desc>供应商来源网站, values: taobao, alibaba</desc>
</prop>
<prop>
<name>supplier_memo</name>
<type>String</type>
<level>Basic</level>
<desc>供应商备注</desc>
</prop>
<prop>
<name>supplier_username</name>
<type>String</type>
<level>Basic</level>
<desc>供应商在来源网站的帐号名。</desc>
</prop>
<prop>
<name>tc_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主订单ID （经销不显示）</desc>
</prop>
<prop>
<name>total_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>采购单总额（不含邮费,精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式：AGENT（代销）、DEALER（经销）</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoProduct</name>
<desc>分销产品</desc>
<props>
<prop>
<name>alarm_number</name>
<type>Number</type>
<level>Basic</level>
<desc>警戒库存</desc>
</prop>
<prop>
<name>category_id</name>
<type>String</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>所在地：市</desc>
</prop>
<prop>
<name>cost_price</name>
<type>Price</type>
<level>Basic</level>
<desc>采购价格，单位：元。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>dealer_cost_price</name>
<type>Price</type>
<level>Basic</level>
<desc>经销采购价</desc>
</prop>
<prop>
<name>desc_path</name>
<type>String</type>
<level>Basic</level>
<desc>产品描述路径，通过http请求获取</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>产品描述的内容</desc>
</prop>
<prop>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣ID（新增参数）</desc>
</prop>
<prop>
<name>have_guarantee</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有保修，可选值：false（否）、true（是）</desc>
</prop>
<prop>
<name>have_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有发票，可选值：false（否）、true（是）</desc>
</prop>
<prop>
<name>input_properties</name>
<type>String</type>
<level>Basic</level>
<desc>自定义属性，格式为pid:value;pid:value</desc>
</prop>
<prop>
<name>is_authz</name>
<type>String</type>
<level>Basic</level>
<desc>查询产品列表时，查询入参增加is_authz:yes|no  
yes:需要授权  
no:不需要授权</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>导入的商品ID</desc>
</prop>
<prop>
<name>items_count</name>
<type>Number</type>
<level>Basic</level>
<desc>下载人数</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>产品名称</desc>
</prop>
<prop>
<name>orders_count</name>
<type>Number</type>
<level>Basic</level>
<desc>累计采购次数</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码</desc>
</prop>
<prop>
<name>pictures</name>
<type>String</type>
<level>Basic</level>
<desc>产品图片路径</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>postage_ems</name>
<type>Price</type>
<level>Basic</level>
<desc>ems费用，单位：元</desc>
</prop>
<prop>
<name>postage_fast</name>
<type>Price</type>
<level>Basic</level>
<desc>快递费用，单位：元</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>运费模板ID</desc>
</prop>
<prop>
<name>postage_ordinary</name>
<type>Price</type>
<level>Basic</level>
<desc>平邮费用，单位：元</desc>
</prop>
<prop>
<name>postage_type</name>
<type>String</type>
<level>Basic</level>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）</desc>
</prop>
<prop>
<name>productcat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品线ID</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>产品属性，格式为pid:vid;pid:vid</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性别名，格式为pid:vid:alias;pid:vid:alias</desc>
</prop>
<prop>
<name>prov</name>
<type>String</type>
<level>Basic</level>
<desc>所在地：省</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>产品库存</desc>
</prop>
<prop>
<name>retail_price_high</name>
<type>Price</type>
<level>Basic</level>
<desc>最高零售价，单位：分。</desc>
</prop>
<prop>
<name>retail_price_low</name>
<type>Price</type>
<level>Basic</level>
<desc>最低零售价，单位：分。</desc>
</prop>
<prop>
<name>skus</name>
<type>FenxiaoSku</type>
<level>Object Array</level>
<desc>sku列表</desc>
</prop>
<prop>
<name>standard_price</name>
<type>Price</type>
<level>Basic</level>
<desc>市场价格，单位：元。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>发布状态，可选值：up（上架）、down（下架）</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）、ALL（代销和经销都做）</desc>
</prop>
<prop>
<name>upshelf_time</name>
<type>Date</type>
<level>Basic</level>
<desc>铺货时间</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserInfo</name>
<desc>子账号基本信息</desc>
<props>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>子账号姓名</desc>
</prop>
<prop>
<name>is_online</name>
<type>Number</type>
<level>Basic</level>
<desc>是否参与分流 1不参与 2参与</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>子账号用户名</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号所属的主账号的唯一标识</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>主账号昵称</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号当前状态 1正常 -1删除  2冻结</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号Id</desc>
</prop>
</props>
</struct>
<struct>
<name>TaobaokeItem</name>
<desc>淘宝客商品</desc>
<props>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<desc>推广点击url</desc>
</prop>
<prop>
<name>commission</name>
<type>Price</type>
<level>Basic</level>
<desc>淘宝客佣金</desc>
</prop>
<prop>
<name>commission_num</name>
<type>String</type>
<level>Basic</level>
<desc>累计成交量.注：返回的数据是30天内累计推广量</desc>
</prop>
<prop>
<name>commission_rate</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝客佣金比率，比如：1234.00代表12.34%</desc>
</prop>
<prop>
<name>commission_volume</name>
<type>Price</type>
<level>Basic</level>
<desc>累计总支出佣金量</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝客商品id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>item_location</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在地</desc>
</prop>
<prop>
<name>keyword_click_url</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝客关键词搜索URL</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝客商品数字id</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>图片url</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>seller_credit_score</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家信用等级</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家id</desc>
</prop>
<prop>
<name>shop_click_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在店铺的推广点击url</desc>
</prop>
<prop>
<name>taobaoke_cat_click_url</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝客类目推广URL</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品title 宝贝名称</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<desc>30天内交易量</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaAudioReaderMyAlbum</name>
<desc>我购买的有声读物专辑</desc>
<props>
<prop>
<name>copyright</name>
<type>String</type>
<level>Basic</level>
<desc>版权所属</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>专辑ID</desc>
</prop>
<prop>
<name>last_updated</name>
<type>String</type>
<level>Basic</level>
<desc>最后更新日期</desc>
</prop>
<prop>
<name>my_track_count</name>
<type>Number</type>
<level>Basic</level>
<desc>专辑内已购买的单曲总数</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>专辑封面图片url</desc>
</prop>
<prop>
<name>serial_id</name>
<type>Number</type>
<level>Basic</level>
<desc>购买专辑的序列ID</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>专辑状态</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>专辑名称</desc>
</prop>
<prop>
<name>track_count</name>
<type>Number</type>
<level>Basic</level>
<desc>专辑内的单曲总数</desc>
</prop>
</props>
</struct>
<struct>
<name>TaobaokeShop</name>
<desc>淘宝客店铺</desc>
<props>
<prop>
<name>auction_count</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺内商品总数</desc>
</prop>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺推广URL</desc>
</prop>
<prop>
<name>commission_rate</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝客店铺佣金比率</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>String</type>
<level>Basic</level>
<desc>店铺掌柜信用等级</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shop_id</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺id</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺名称</desc>
</prop>
<prop>
<name>shop_type</name>
<type>String</type>
<level>Basic</level>
<desc>店铺类型 B=商城卖家 C=普通卖家</desc>
</prop>
<prop>
<name>total_auction</name>
<type>String</type>
<level>Basic</level>
<desc>累计推广量</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺用户id</desc>
</prop>
</props>
</struct>
<struct>
<name>SubPurchaseOrder</name>
<desc>子采购单详细信息</desc>
<props>
<prop>
<name>auction_price</name>
<type>Price</type>
<level>Basic</level>
<desc>代销采购单对应下游200订单的商品零售价（单位是元）</desc>
</prop>
<prop>
<name>buyer_payment</name>
<type>Price</type>
<level>Basic</level>
<desc>买家实付金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间。格式 yyyy-MM-dd HH:mm:ss 。</desc>
</prop>
<prop>
<name>distributor_payment</name>
<type>Price</type>
<level>Basic</level>
<desc>分销商实付金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>fenxiao_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销平台的子采购单主键</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>子采购单id，淘宝交易主键，采购单未付款时为0.（即将废掉）</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销平台上商品id</desc>
</prop>
<prop>
<name>item_outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>分销平台上商品商家编码。</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品购买数量。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>old_sku_properties</name>
<type>String</type>
<level>Basic</level>
<desc>老的SKU属性值。如: 颜色:红色:别名;尺码:L:别名</desc>
</prop>
<prop>
<name>order_200_status</name>
<type>String</type>
<level>Basic</level>
<desc>代销采购单对应下游200订单状态。 
可选值： 
WAIT_SELLER_SEND_GOODS(已付款，待发货) 
WAIT_BUYER_CONFIRM_GOODS(已付款，已发货) 
TRADE_CLOSED(已退款成功) 
TRADE_REFUNDING(退款中) 
TRADE_FINISHED(交易成功) 
TRADE_CLOSED_BY_TAOBAO(交易关闭)</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>单个商品价格。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>退款金额</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的SKU id。该字段即将被废弃，所以值可能不准确，建议使用sku_outer_id，sku_properties这两个值</desc>
</prop>
<prop>
<name>sku_outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>SKU商家编码。</desc>
</prop>
<prop>
<name>sku_properties</name>
<type>String</type>
<level>Basic</level>
<desc>SKU属性值。如: 颜色:红色:别名;尺码:L:别名</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>快照地址。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>交易状态。可选值：&lt;br&gt; 
WAIT_BUYER_PAY(等待付款)&lt;br&gt; 
WAIT_CONFIRM(付款信息待确认)&lt;br&gt; 
WAIT_CONFIRM_WAIT_SEND_GOODS(付款信息待确认，待发货)&lt;br&gt; 
WAIT_CONFIRM_SEND_GOODS(付款信息待确认，已发货)&lt;br&gt; 
WAIT_CONFIRM_GOODS_CONFIRM(付款信息待确认，已收货)&lt;br&gt; 
WAIT_SELLER_SEND_GOODS(已付款，待发货)&lt;br&gt; 
WAIT_BUYER_CONFIRM_GOODS(已付款，已发货)&lt;br&gt; 
CONFIRM_WAIT_SEND_GOODS(付款信息已确认，待发货)&lt;br&gt; 
CONFIRM_SEND_GOODS(付款信息已确认，已发货)&lt;br&gt; 
TRADE_REFUNDED(已退款)&lt;br&gt; 
TRADE_REFUNDING(退款中)&lt;br&gt; 
TRADE_FINISHED(交易成功)&lt;br&gt; 
TRADE_CLOSED(交易关闭)&lt;br&gt;</desc>
</prop>
<prop>
<name>tc_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>TC订单ID（经销不显示）</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题。</desc>
</prop>
<prop>
<name>total_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>分销商应付金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductCat</name>
<desc>产品线</desc>
<props>
<prop>
<name>cost_percent_agent</name>
<type>String</type>
<level>Basic</level>
<desc>代销采购价百分比</desc>
</prop>
<prop>
<name>cost_percent_dealer</name>
<type>String</type>
<level>Basic</level>
<desc>经销采购价百分比</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品线ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>产品线名称</desc>
</prop>
<prop>
<name>product_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品数量</desc>
</prop>
<prop>
<name>retail_high_percent</name>
<type>String</type>
<level>Basic</level>
<desc>最高零食价百分比</desc>
</prop>
<prop>
<name>retail_low_percent</name>
<type>String</type>
<level>Basic</level>
<desc>最低零售价百分比</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaRootDirectory</name>
<desc>文档目录根目录</desc>
<props>
<prop>
<name>kids</name>
<type>TaohuaDirectory</type>
<level>Object Array</level>
<desc>子目录</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>目录名称</desc>
</prop>
<prop>
<name>page</name>
<type>Number</type>
<level>Basic</level>
<desc>页码</desc>
</prop>
</props>
</struct>
<struct>
<name>Feature</name>
<desc>类目属性</desc>
<props>
<prop>
<name>attr_key</name>
<type>String</type>
<level>Basic</level>
<desc>属性键</desc>
</prop>
<prop>
<name>attr_value</name>
<type>String</type>
<level>Basic</level>
<desc>属性值</desc>
</prop>
</props>
</struct>
<struct>
<name>AppCustomer</name>
<desc>开通增量消息服务的应用用户</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>isv为用户开通增量消息服务的时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间，开通、用户的session生效或失效都会更改这个时间。</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>开通用户的淘宝昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>应用用户开通增量消息服务的状态：有两个返回值valid_session和invalid_session。valid_session表示已开通且seesion有效；invalid_session已开通但session失效，此时，无法接收该用户的消息。</desc>
</prop>
<prop>
<name>subscriptions</name>
<type>Subscription</type>
<level>Object Array</level>
<desc>应用为用户开通的消息类型。只有用户开通的消息在应用所订阅的消息类别集合内时，应用才能收到相应的消息。例如：应用订阅添加商品，用户开通了添加商品和删除商品，此时应用只能收到添加商品的消息，收不到删除商品的消息。</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic Array</level>
<desc>用户使用的功能。get表示增量api取消息功能；notify表示主动通知功能；syn表示同步数据到ISV数据库功能。</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户编号</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaDirectory</name>
<desc>文档目录</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>目录名称</desc>
</prop>
<prop>
<name>page</name>
<type>Number</type>
<level>Basic</level>
<desc>页码</desc>
</prop>
<prop>
<name>rel</name>
<type>String</type>
<level>Basic</level>
<desc>子类目类型</desc>
</prop>
</props>
</struct>
<struct>
<name>HuabaoChannel</name>
<desc>画报频道数据结构</desc>
<props>
<prop>
<name>channel_name</name>
<type>String</type>
<level>Basic</level>
<desc>频道名称</desc>
</prop>
<prop>
<name>channel_url</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝频道连接</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>频道描述</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>画报频道ID</desc>
</prop>
<prop>
<name>name_en</name>
<type>String</type>
<level>Basic</level>
<desc>频道英文名称</desc>
</prop>
</props>
</struct>
<struct>
<name>HuabaoPicture</name>
<desc>画报图片结构</desc>
<props>
<prop>
<name>create_date</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间</desc>
</prop>
<prop>
<name>modified_date</name>
<type>Date</type>
<level>Basic</level>
<desc>图片修改时间</desc>
</prop>
<prop>
<name>pic_id</name>
<type>String</type>
<level>Basic</level>
<desc>图片ID</desc>
</prop>
<prop>
<name>pic_note</name>
<type>String</type>
<level>Basic</level>
<desc>图片说明</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>图片URL</desc>
</prop>
<prop>
<name>poster_id</name>
<type>Number</type>
<level>Basic</level>
<desc>画报ID</desc>
</prop>
</props>
</struct>
<struct>
<name>PictureCategory</name>
<desc>图片分类</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片类目的创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>图片分类的修改时间</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>一级分类的parent_id为0 
二级分类的则为其父分类的picture_category_id</desc>
</prop>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_category_name</name>
<type>String</type>
<level>Basic</level>
<desc>图片分类名</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类排序</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>图片分类型别，sys-fixture代表店铺装修分类(系统分类)，sys-auction代表宝贝图片分类(系统分类)，user-define代表用户自定义分类</desc>
</prop>
</props>
</struct>
<struct>
<name>Distributor</name>
<desc>分销API返回数据结构</desc>
<props>
<prop>
<name>alipay_account</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的支付宝帐户</desc>
</prop>
<prop>
<name>appraise</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商的淘宝卖家评价</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商店铺主营类目</desc>
</prop>
<prop>
<name>contact_person</name>
<type>String</type>
<level>Basic</level>
<desc>联系人</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>分销商创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商Id</desc>
</prop>
<prop>
<name>distributor_name</name>
<type>String</type>
<level>Basic</level>
<desc>分销商姓名</desc>
</prop>
<prop>
<name>email</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的email</desc>
</prop>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的真实姓名，认证姓名</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺等级</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的手机号</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的电话</desc>
</prop>
<prop>
<name>shop_web_link</name>
<type>String</type>
<level>Basic</level>
<desc>分销商的网店链接</desc>
</prop>
<prop>
<name>starts</name>
<type>Date</type>
<level>Basic</level>
<desc>分销商卖家的开店时间</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商ID</desc>
</prop>
</props>
</struct>
<struct>
<name>GroupDomain</name>
<desc>分组简单定义</desc>
<props>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分组ID</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>分组名称</desc>
</prop>
</props>
</struct>
<struct>
<name>BasicMember</name>
<desc>表示会员关系的基本信息字段，用于会员列表的基本查询</desc>
<props>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最后一次交易的订单号</desc>
</prop>
<prop>
<name>buyer_id</name>
<type>Number</type>
<level>Basic</level>
<desc>买家会员ID</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>会员昵称</desc>
</prop>
<prop>
<name>close_trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易关闭金额</desc>
</prop>
<prop>
<name>close_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易关闭的笔数</desc>
</prop>
<prop>
<name>grade</name>
<type>Number</type>
<level>Basic</level>
<desc>会员等级，0：无会员等级，1：普通会员，2：高级会员，3：VIP会员， 4：至尊VIP会员</desc>
</prop>
<prop>
<name>group_ids</name>
<type>String</type>
<level>Basic</level>
<desc>分组的id集合字符串</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买的宝贝件数</desc>
</prop>
<prop>
<name>last_trade_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后交易的日期</desc>
</prop>
<prop>
<name>relation_source</name>
<type>Number</type>
<level>Basic</level>
<desc>关系来源，1交易成功，2未交易成功</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>显示会员的状态，normal正常，delete被买家删除，blacklist黑名单</desc>
</prop>
<prop>
<name>trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易的金额</desc>
</prop>
<prop>
<name>trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易成功的次数</desc>
</prop>
</props>
</struct>
<struct>
<name>GradePromotion</name>
<desc>卖家设置的等级优惠信息</desc>
<props>
<prop>
<name>cur_grade</name>
<type>String</type>
<level>Basic</level>
<desc>买家会员级别    1：普通会员 2：高级会员 3：VIP会员 4：至尊VIP</desc>
</prop>
<prop>
<name>cur_grade_name</name>
<type>String</type>
<level>Basic</level>
<desc>普通会员 、高级会员、VIP会员、至尊VIP</desc>
</prop>
<prop>
<name>discount</name>
<type>Number</type>
<level>Basic</level>
<desc>会员级别折扣率没有小数，990代表9.9折</desc>
</prop>
<prop>
<name>next_upgrade_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>升级到下一个级别的需要的交易额，单位：分</desc>
</prop>
<prop>
<name>next_upgrade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>升级到下一个级别的需要的交易量</desc>
</prop>
</props>
</struct>
<struct>
<name>RuleData</name>
<desc>规则相关信息</desc>
<props>
<prop>
<name>end_trade_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易结束时间</desc>
</prop>
<prop>
<name>grade</name>
<type>Number</type>
<level>Basic</level>
<desc>会员等级</desc>
</prop>
<prop>
<name>grouplist</name>
<type>GroupDomain</type>
<level>Object Array</level>
<desc>分组信息，包括分组id与分组名称</desc>
</prop>
<prop>
<name>max_avg_price</name>
<type>Price</type>
<level>Basic</level>
<desc>最大平均客单价</desc>
</prop>
<prop>
<name>max_close_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>最大交易关闭次数</desc>
</prop>
<prop>
<name>max_item_count</name>
<type>Number</type>
<level>Basic</level>
<desc>最大宝贝件数</desc>
</prop>
<prop>
<name>max_trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>最大交易额</desc>
</prop>
<prop>
<name>max_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>最大交易笔数</desc>
</prop>
<prop>
<name>min_avg_price</name>
<type>Price</type>
<level>Basic</level>
<desc>最小平均客单价</desc>
</prop>
<prop>
<name>min_close_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>最小交易关闭次数</desc>
</prop>
<prop>
<name>min_item_count</name>
<type>Number</type>
<level>Basic</level>
<desc>最少宝贝件数</desc>
</prop>
<prop>
<name>min_trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>最小交易额</desc>
</prop>
<prop>
<name>min_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>最小交易笔数</desc>
</prop>
<prop>
<name>province</name>
<type>Number</type>
<level>Basic</level>
<desc>省份的代码，北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35</desc>
</prop>
<prop>
<name>relation_source</name>
<type>Number</type>
<level>Basic</level>
<desc>客户关系来源</desc>
</prop>
<prop>
<name>rule_id</name>
<type>Number</type>
<level>Basic</level>
<desc>规则ID</desc>
</prop>
<prop>
<name>rule_name</name>
<type>String</type>
<level>Basic</level>
<desc>规则名称</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
<prop>
<name>start_trade_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易的开始时间</desc>
</prop>
</props>
</struct>
<struct>
<name>TaobaokeItemDetail</name>
<desc>淘宝客商品详情</desc>
<props>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品推广URL</desc>
</prop>
<prop>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品详细信息. fields中需要设置Item下的字段,如设置:iid,detail_url等; 只设置item_detail,则不返回的Item下的所有信息.</desc>
</prop>
<prop>
<name>seller_credit_score</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属卖家的信用等级</desc>
</prop>
<prop>
<name>shop_click_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在的店铺的推广URL</desc>
</prop>
</props>
</struct>
<struct>
<name>CrmMember</name>
<desc>会员信息对象</desc>
<props>
<prop>
<name>avg_price</name>
<type>Price</type>
<level>Basic</level>
<desc>平均客单价.</desc>
</prop>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最后一次交易的订单号</desc>
</prop>
<prop>
<name>buyer_id</name>
<type>Number</type>
<level>Basic</level>
<desc>会员买家id</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>城市</desc>
</prop>
<prop>
<name>close_trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易关闭的金额</desc>
</prop>
<prop>
<name>close_trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易关闭的的笔数</desc>
</prop>
<prop>
<name>grade</name>
<type>Number</type>
<level>Basic</level>
<desc>会员等级，1：普通会员，2：高级会员，3：VIP会员， 4：至尊VIP会员</desc>
</prop>
<prop>
<name>group_ids</name>
<type>String</type>
<level>Basic</level>
<desc>会员拥有的所有分组</desc>
</prop>
<prop>
<name>item_close_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易关闭的宝贝件数</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买的宝贝件数</desc>
</prop>
<prop>
<name>last_trade_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后交易时间</desc>
</prop>
<prop>
<name>province</name>
<type>Number</type>
<level>Basic</level>
<desc>北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35</desc>
</prop>
<prop>
<name>relation_source</name>
<type>Number</type>
<level>Basic</level>
<desc>关系来源，1交易成功，2未成交</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>显示会员的状态，normal正常，delete被买家删除，blacklist黑名单</desc>
</prop>
<prop>
<name>trade_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>交易成功的金额</desc>
</prop>
<prop>
<name>trade_count</name>
<type>Number</type>
<level>Basic</level>
<desc>交易成功笔数</desc>
</prop>
</props>
</struct>
<struct>
<name>Group</name>
<desc>描述分组的数据结构</desc>
<props>
<prop>
<name>group_create</name>
<type>Date</type>
<level>Basic</level>
<desc>分组的创建时间</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分组的id</desc>
</prop>
<prop>
<name>group_modify</name>
<type>Date</type>
<level>Basic</level>
<desc>分组的修改时间</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>分组的名称</desc>
</prop>
<prop>
<name>member_count</name>
<type>Number</type>
<level>Basic</level>
<desc>分组所拥有的会员数量,如果返回值为-1，表示当前服务忙。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>分组的状态，1表示正常</desc>
</prop>
</props>
</struct>
<struct>
<name>HuabaoAuctionInfo</name>
<desc>画报商品数据结构</desc>
<props>
<prop>
<name>auction_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>auction_note</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述</desc>
</prop>
<prop>
<name>auction_position</name>
<type>String</type>
<level>Basic</level>
<desc>商品位置坐标,形式为："x:y",x坐标,y坐标</desc>
</prop>
<prop>
<name>auction_price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>auction_short_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品短标题</desc>
</prop>
<prop>
<name>auction_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>auction_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品链接</desc>
</prop>
<prop>
<name>pic_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品图片ID</desc>
</prop>
<prop>
<name>poster_id</name>
<type>Number</type>
<level>Basic</level>
<desc>画报ID</desc>
</prop>
</props>
</struct>
<struct>
<name>Huabao</name>
<desc>画报数据结构</desc>
<props>
<prop>
<name>channel_id</name>
<type>Number</type>
<level>Basic</level>
<desc>画报所属频道ID</desc>
</prop>
<prop>
<name>cover_pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>画报封面地址</desc>
</prop>
<prop>
<name>create_date</name>
<type>Date</type>
<level>Basic</level>
<desc>画报创建时间</desc>
</prop>
<prop>
<name>hits</name>
<type>Number</type>
<level>Basic</level>
<desc>画报点击数</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>画报ID</desc>
</prop>
<prop>
<name>modified_date</name>
<type>Date</type>
<level>Basic</level>
<desc>画报修改时间</desc>
</prop>
<prop>
<name>tag</name>
<type>String</type>
<level>Basic</level>
<desc>画报标签</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>图片标题</desc>
</prop>
<prop>
<name>title_short</name>
<type>String</type>
<level>Basic</level>
<desc>画报短标题</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>画报权重0-10</desc>
</prop>
</props>
</struct>
<struct>
<name>WaitingTimesOnDay</name>
<desc>客户等待（客服）平均时长列表</desc>
<props>
<prop>
<name>waiting_date</name>
<type>Date</type>
<level>Basic</level>
<desc>等待时长（统计）日期</desc>
</prop>
<prop>
<name>waiting_time_by_ids</name>
<type>WaitingTimeById</type>
<level>Object Array</level>
<desc>等待时长列表</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbAuthorization</name>
<desc>授权关系</desc>
<props>
<prop>
<name>authorize_end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>授权结束时间</desc>
</prop>
<prop>
<name>authorize_id</name>
<type>Number</type>
<level>Basic</level>
<desc>授权ID</desc>
</prop>
<prop>
<name>authorize_start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>授权开始时间</desc>
</prop>
<prop>
<name>consign_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销人用户ID</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>授权商品ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>授权名称</desc>
</prop>
<prop>
<name>owner_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货主用户ID</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>授权数量</desc>
</prop>
<prop>
<name>rule_code</name>
<type>String</type>
<level>Basic</level>
<desc>授权编码</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态： 
VALID -- 1 有效 
INVALIDATION -- 2 失效</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbMessage</name>
<desc>通道消息</desc>
<props>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>消息通道ID</desc>
</prop>
<prop>
<name>msg_code</name>
<type>String</type>
<level>Basic</level>
<desc>通知消息编码： STOCK_IN_NOT_CONSISTENT---入库单不一致 CANCEL_ORDER_SUCCESS---取消订单成功 CANCEL_ORDER_FAILURE---取消订单失败 INVENTORY_CHECK---盘点   INVENTORY_CHECK---盘点消息  ORDER_REJECT--wms拒单  ORDER_CONFIRMED--订单处理成功 WMS_FAILED--wms处理失败</desc>
</prop>
<prop>
<name>msg_content</name>
<type>String</type>
<level>Basic</level>
<desc>通知内容：msg_code为STOCK_IN_NOT_CONSISTENT时,msg_content为:orderCode:code;orderItemId:111;itemId:123;planQuantity:10;relQuantity:6; 
msg_code为CANCEL_ORDER_SUCCESS及其它时,msg_content为：orderCode:code;
msg_code为CANCEL_ORDER_SUCCESS及其它时,msg_content为：orderCode:code; msg_code为INVENTORY_CHECK时，msg_content为orderCode:code;</desc>
</prop>
<prop>
<name>msg_description</name>
<type>String</type>
<level>Basic</level>
<desc>消息描述</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>消息状态： 不需要确认：NO_NEED_CONFIRM 已确认：CONFIRMED 待确认：TO_BE_CONFIRM</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
</props>
</struct>
<struct>
<name>NonReplyStatOnDay</name>
<desc>未回复统计列表(按天)</desc>
<props>
<prop>
<name>nonreply_date</name>
<type>Date</type>
<level>Basic</level>
<desc>（某天的）未回复统计</desc>
</prop>
<prop>
<name>nonreply_stat_by_ids</name>
<type>NonreplyStatById</type>
<level>Object Array</level>
<desc>未回复统计列表</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbConsignMent</name>
<desc>物流宝代销关系</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销关系id</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销商用户前台宝贝id</desc>
</prop>
<prop>
<name>number</name>
<type>Number</type>
<level>Basic</level>
<desc>代销数量</desc>
</prop>
<prop>
<name>tgt_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商商品id</desc>
</prop>
<prop>
<name>tgt_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商用户id</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销商用户id</desc>
</prop>
</props>
</struct>
<struct>
<name>StaffEvalStatOnDay</name>
<desc>客服评价统计列表(按天)</desc>
<props>
<prop>
<name>eval_date</name>
<type>Date</type>
<level>Basic</level>
<desc>评价产生的日期</desc>
</prop>
<prop>
<name>staff_eval_stat_by_ids</name>
<type>StaffEvalStatById</type>
<level>Object Array</level>
<desc>客服评价统计列表</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbReplenish</name>
<desc>物流宝补货统计对象</desc>
<props>
<prop>
<name>estimate_value</name>
<type>String</type>
<level>Basic</level>
<desc>根据历史统计值计算出来的预期值 
WarnByLast3Days=1; ByLast3Days=3; 
ByLast10Days=10; 
ByLast30Days=30; 
ByLast90Days=90 
WarnByLast3Days为按照过去3天的发出的件数来统计的达到安全库存的天数；其它4项分别为按照过去3、10、30、90天发出的商品件数，现有库存可以维持的天数</desc>
</prop>
<prop>
<name>history_value</name>
<type>String</type>
<level>Basic</level>
<desc>订单历史统计值 
Last3DaysTotal=3; Last10DaysTotal=10; 
Last30DaysTotal=30; Last90DaysTotal=90 
分别为过去3、10、30、90天发出的商品件数</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>retrieval_count</name>
<type>Number</type>
<level>Basic</level>
<desc>补货周期（单位：天）</desc>
</prop>
<prop>
<name>sell_count</name>
<type>Number</type>
<level>Basic</level>
<desc>可销售库存数</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>transport_count</name>
<type>Number</type>
<level>Basic</level>
<desc>在途库存数</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户id</desc>
</prop>
<prop>
<name>warn_count</name>
<type>Number</type>
<level>Basic</level>
<desc>安全库存</desc>
</prop>
</props>
</struct>
<struct>
<name>OnlineTimesOnDay</name>
<desc>某天的客服在线时长列表</desc>
<props>
<prop>
<name>online_date</name>
<type>Date</type>
<level>Basic</level>
<desc>在线日期</desc>
</prop>
<prop>
<name>online_time_by_ids</name>
<type>OnlineTimeById</type>
<level>Object Array</level>
<desc>在线时长列表</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbProcessStatus</name>
<desc>物流宝订单流转信息对象</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>状态内容</desc>
</prop>
<prop>
<name>operate_time</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</prop>
<prop>
<name>operater</name>
<type>String</type>
<level>Basic</level>
<desc>操作人</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单编码</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>status_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单操作状态：WMS_ACCEPT;WMS_PRINT;WMS_PICK;WMS_CHECK;WMS_PACKAGE;WMS_CONSIGN;WMS_CANCEL;WMS_UNKNOWN;WMS_CONFIRMED 
TMS_ACCEPT;TMS_STATION_IN;TMS_STATION_OUT;TMS_SIGN;TMS_REJECT;TMS_CANCEL;TMS_UNKNOW;SYS_UNKNOWN</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>store_tp_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库合作公司编码</desc>
</prop>
<prop>
<name>tms_order_code</name>
<type>String</type>
<level>Basic</level>
<desc>tms合作公司订单编码</desc>
</prop>
<prop>
<name>tms_tp_code</name>
<type>String</type>
<level>Basic</level>
<desc>tms合作公司编码</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbOrderItem</name>
<desc>物流宝订单商品</desc>
<props>
<prop>
<name>batch_remark</name>
<type>String</type>
<level>Basic</level>
<desc>批次号备注</desc>
</prop>
<prop>
<name>confirm_status</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单确认状态： 
NO_NEED_CONFIRM--不需要确认 
WAIT_CONFIRM--待确认 
CONFIRMED--已确认</desc>
</prop>
<prop>
<name>ext_entity_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部实体id</desc>
</prop>
<prop>
<name>ext_entity_type</name>
<type>String</type>
<level>Basic</level>
<desc>外部实体类型</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单商品id</desc>
</prop>
<prop>
<name>inventory_type</name>
<type>String</type>
<level>Basic</level>
<desc>INVENTORY_TYPE_SELL 可销库存 
INVENTORY_TYPE_IMPERFECTIONS 残次库存 
INVENTORY_TYPE_FREEZE 冻结库存 
INVENTORY_TYPE_ON_PASSAGE 在途库存</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品编码</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝订单商品的物流宝商品id</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品名称</desc>
</prop>
<prop>
<name>item_price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单编码</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝订单id</desc>
</prop>
<prop>
<name>order_sub_2code</name>
<type>String</type>
<level>Basic</level>
<desc>子交易号</desc>
</prop>
<prop>
<name>order_sub_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>order_sub_type</name>
<type>String</type>
<level>Basic</level>
<desc>(1)其它: OTHER (2)淘宝交易: TAOBAO (3)调拨: ALLOCATION (4)盘点:CHECK (5)销售采购:PRUCHASE(6)其它交易：OTHER_TRADE</desc>
</prop>
<prop>
<name>picture_url</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品图片url</desc>
</prop>
<prop>
<name>plan_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>计划数量</desc>
</prop>
<prop>
<name>provider_tp_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货主id</desc>
</prop>
<prop>
<name>provider_tp_nick</name>
<type>String</type>
<level>Basic</level>
<desc>货主nick</desc>
</prop>
<prop>
<name>publish_version</name>
<type>Number</type>
<level>Basic</level>
<desc>商品发布版本号</desc>
</prop>
<prop>
<name>real_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>实际数量</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品备注</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单商品用户id</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>订单商品用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbOrder</name>
<desc>物流宝订单对象</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家nick</desc>
</prop>
<prop>
<name>cancel_order_status</name>
<type>Number</type>
<level>Basic</level>
<desc>订单取消状态： 
1-取消中；  
2-取消失败； 
3-取消完成</desc>
</prop>
<prop>
<name>confirm_status</name>
<type>String</type>
<level>Basic</level>
<desc>确认状态： 
(1)不需要确认：NO_NEED_CONFIRM 
(2)等待确认：WAIT_CONFIRM 
(3)已确认:CONFIRMED</desc>
</prop>
<prop>
<name>expect_end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>计划送达结束时间</desc>
</prop>
<prop>
<name>expect_start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>计划送达开始时间</desc>
</prop>
<prop>
<name>invoice_info</name>
<type>String</type>
<level>Basic</level>
<desc>发票信息</desc>
</prop>
<prop>
<name>item_kinds_count</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝订单中的商品种类数量</desc>
</prop>
<prop>
<name>operate_type</name>
<type>String</type>
<level>Basic</level>
<desc>出库或者入库，IN表示入库，OUT表示出库</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单编码</desc>
</prop>
<prop>
<name>order_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>第1位:COD,2:限时配送,3:预售,4:需要发票,5:已投诉,第6位:合单,第7位:拆单 第8位：EXCHANGE-换货， 第9位:VISIT-上门 ， 第10位: MODIFYTRANSPORT-是否可改配送方式，第11位：是否物流代理确认发货</desc>
</prop>
<prop>
<name>order_source</name>
<type>String</type>
<level>Basic</level>
<desc>订单来源: 
产生物流订单的原因，比如: 
 
订单来源:1:TAOBAO;2:EXT;3:ERP;4:WMS</desc>
</prop>
<prop>
<name>order_source_code</name>
<type>String</type>
<level>Basic</level>
<desc>对应创建物流宝订单top接口中的的out_biz_code字段，主要是用来去重用</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>物流状态， 
订单已创建：0 
订单已取消: -1 
订单关闭:-3 
下发中: 10 
已下发: 11 
接收方拒签 :-100 
已发货:100 
签收成功:200</desc>
</prop>
<prop>
<name>order_status_reason</name>
<type>String</type>
<level>Basic</level>
<desc>卖家取消,仓库取消标识</desc>
</prop>
<prop>
<name>order_sub_type</name>
<type>String</type>
<level>Basic</level>
<desc>(1)其它:    OTHER 
(2)淘宝交易: TAOBAO 
(3)301:调拨: ALLOCATION 
(4)401:盘点:CHECK 
(5)501:销售采购:PRUCHASE</desc>
</prop>
<prop>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<desc>1:正常订单: NARMAL 
2:退货订单: RETURN 
3:换货订单: CHANGE</desc>
</prop>
<prop>
<name>prev_order_code</name>
<type>String</type>
<level>Basic</level>
<desc>原订单编码</desc>
</prop>
<prop>
<name>real_kinds_count</name>
<type>Number</type>
<level>Basic</level>
<desc>实际入库的种类数量</desc>
</prop>
<prop>
<name>receivable_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>应收金额</desc>
</prop>
<prop>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<desc>收件人具体地址</desc>
</prop>
<prop>
<name>receiver_area</name>
<type>String</type>
<level>Basic</level>
<desc>区或者县</desc>
</prop>
<prop>
<name>receiver_city</name>
<type>String</type>
<level>Basic</level>
<desc>收件人城市</desc>
</prop>
<prop>
<name>receiver_mail</name>
<type>String</type>
<level>Basic</level>
<desc>接收人电子邮箱</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>接收人手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>接收人姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>接收人固定电话</desc>
</prop>
<prop>
<name>receiver_province</name>
<type>String</type>
<level>Basic</level>
<desc>收件人省份</desc>
</prop>
<prop>
<name>receiver_wangwang</name>
<type>String</type>
<level>Basic</level>
<desc>接收人旺旺</desc>
</prop>
<prop>
<name>receiver_zip_code</name>
<type>String</type>
<level>Basic</level>
<desc>收件人邮编</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>订单备注</desc>
</prop>
<prop>
<name>schedule_day</name>
<type>String</type>
<level>Basic</level>
<desc>发货日期: 
(1)1 为工作日 
(2)2 为节假日</desc>
</prop>
<prop>
<name>schedule_end</name>
<type>String</type>
<level>Basic</level>
<desc>配送结束时间通常是HH:MM格式</desc>
</prop>
<prop>
<name>schedule_speed</name>
<type>Number</type>
<level>Basic</level>
<desc>发货速度  ， 
101-当日达， 
102-次晨达， 
103-次日达</desc>
</prop>
<prop>
<name>schedule_start</name>
<type>String</type>
<level>Basic</level>
<desc>配送开始时间通常是HH:MM格式</desc>
</prop>
<prop>
<name>sender_address</name>
<type>String</type>
<level>Basic</level>
<desc>发件人地址</desc>
</prop>
<prop>
<name>sender_area</name>
<type>String</type>
<level>Basic</level>
<desc>发件人所在区</desc>
</prop>
<prop>
<name>sender_city</name>
<type>String</type>
<level>Basic</level>
<desc>发件人城市</desc>
</prop>
<prop>
<name>sender_email</name>
<type>String</type>
<level>Basic</level>
<desc>发件人电子邮箱</desc>
</prop>
<prop>
<name>sender_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>发件人移动电话</desc>
</prop>
<prop>
<name>sender_name</name>
<type>String</type>
<level>Basic</level>
<desc>发件人姓名</desc>
</prop>
<prop>
<name>sender_phone</name>
<type>String</type>
<level>Basic</level>
<desc>发件人联系电话</desc>
</prop>
<prop>
<name>sender_province</name>
<type>String</type>
<level>Basic</level>
<desc>发件人所在省份</desc>
</prop>
<prop>
<name>sender_zip_code</name>
<type>String</type>
<level>Basic</level>
<desc>发件人邮编</desc>
</prop>
<prop>
<name>service_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>cod服务费</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>物流运输方式： 
MAIL-平邮 
EXPRESS-快递 
EMS-EMS 
OTHER-其他</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>tms_tp_code</name>
<type>String</type>
<level>Basic</level>
<desc>发货物流公司编码，STO,YTO,EMS等</desc>
</prop>
<prop>
<name>total_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>订单总价</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家NICK</desc>
</prop>
</props>
</struct>
<struct>
<name>Task</name>
<desc>批量异步任务结果</desc>
<props>
<prop>
<name>check_code</name>
<type>String</type>
<level>Basic</level>
<desc>下载文件的MD5校验码，通过此校验码可以检查下载的文件是否是完整的。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>任务创建时间</desc>
</prop>
<prop>
<name>download_url</name>
<type>String</type>
<level>Basic</level>
<desc>大任务结果下载地址。当创建的认任务是大数据量的任务时，获取结果会返回此字段，同时subtasks列表会为空。
通过这个地址可以下载到结果的结构体，格式同普通任务下载的一样。
每次获取到的地址只能下载一次。下载的文件加上后缀名.zip打开。</desc>
</prop>
<prop>
<name>method</name>
<type>String</type>
<level>Basic</level>
<desc>此任务是由哪个api产生的</desc>
</prop>
<prop>
<name>schedule</name>
<type>Date</type>
<level>Basic</level>
<desc>定时类型任务的执行时间点</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>异步任务处理状态。new（还未开始处理），doing（处理中），done（处理结束）。</desc>
</prop>
<prop>
<name>subtasks</name>
<type>Subtask</type>
<level>Object Array</level>
<desc>子任务处理结果，如果任务还没有处理完，返回的结果列表为空。如果任务处理完毕，返回子任务结果列表</desc>
</prop>
<prop>
<name>task_id</name>
<type>Number</type>
<level>Basic</level>
<desc>异步任务id。创建异步任务时返回的任务id号</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbSellerSubscription</name>
<desc>卖家定购的服务</desc>
<props>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>定购有效结束日期</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>定购ID</desc>
</prop>
<prop>
<name>is_own_service</name>
<type>Number</type>
<level>Basic</level>
<desc>判断该仓库是否是实体仓，还是虚拟仓，null是实体仓，10:代表虚拟仓</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父定购ID 
可通过该字段来得之服务上下级关系。 
例定购了仓储服务，下又有TMS服务。 
该字段保存仓储服务ID。</desc>
</prop>
<prop>
<name>provider_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务商ID</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>service_alias</name>
<type>String</type>
<level>Basic</level>
<desc>自有仓的别名，当当前订购记录为自有仓时才会有值</desc>
</prop>
<prop>
<name>service_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务编码</desc>
</prop>
<prop>
<name>service_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务ID</desc>
</prop>
<prop>
<name>service_name</name>
<type>String</type>
<level>Basic</level>
<desc>服务名</desc>
</prop>
<prop>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<desc>服务类型， 
STORE 1-仓储、 
TMS 2-TMS、 
PACKAGE 3-包装服务 
SUPPLIER 4-供货 
INSTALL 5-安装 
COMPLEX_SERVICE 100-综合服务</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>定购有效开始日期</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态 
AUDITING 1-待审核 
CANCEL 2-撤销 
CHECKED 3-审核通过 
FAILED 4-审核未通过 
SYNCHRONIZING 5-同步中</desc>
</prop>
<prop>
<name>subscriber_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>定购用户ID</desc>
</prop>
<prop>
<name>subscriber_user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>定购用户NICK</desc>
</prop>
<prop>
<name>wlb_partner_address</name>
<type>WlbPartnerAddress</type>
<level>Object</level>
<desc>联系人地址信息</desc>
</prop>
<prop>
<name>wlb_partner_contact</name>
<type>WlbPartnerContact</type>
<level>Object</level>
<desc>联系人联系详情</desc>
</prop>
</props>
</struct>
<struct>
<name>PicUrl</name>
<desc>图片链接</desc>
<props>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItemInventoryLog</name>
<desc>库存变更记录</desc>
<props>
<prop>
<name>batch_code</name>
<type>String</type>
<level>Basic</level>
<desc>批次号</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建日期</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>库存变更ID</desc>
</prop>
<prop>
<name>invent_type</name>
<type>String</type>
<level>Basic</level>
<desc>VENDIBLE  1-可销售; 
FREEZE  201-冻结库存; 
ONWAY  301-在途库存; 
DEFECT  101-残存品; 
ENGINE_DAMAGE 102-机损; 
BOX_DAMAGE 103-箱损</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>op_type</name>
<type>String</type>
<level>Basic</level>
<desc>库存操作作类型 
CHU_KU 1-出库 
RU_KU 2-入库 
FREEZE 3-冻结 
THAW 4-解冻 
CHECK_FREEZE 5-冻结确认 
CHANGE_KU 6-库存类型变更</desc>
</prop>
<prop>
<name>op_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>库存操作者ID</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>order_item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单商品ID</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>处理数量变化值</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>result_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>结果值</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
</props>
</struct>
<struct>
<name>OutEntityItem</name>
<desc>外部商品实体</desc>
<props>
<prop>
<name>entity_id</name>
<type>String</type>
<level>Basic</level>
<desc>entity_type对应的实体类型的id： 
当entity_type为IC_ITEM时，entity_id为ic的商品id</desc>
</prop>
<prop>
<name>entity_type</name>
<type>String</type>
<level>Basic</level>
<desc>外部实体类型： 
IC_ITEM--ic商品 
IC_SKU--ic销售单元</desc>
</prop>
</props>
</struct>
<struct>
<name>Subtask</name>
<desc>批量异步任务的子任务结果</desc>
<props>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）</desc>
</prop>
<prop>
<name>sub_task_request</name>
<type>String</type>
<level>Basic</level>
<desc>子任务的有效请求参数，以json格式进行key:value的组合</desc>
</prop>
<prop>
<name>sub_task_result</name>
<type>String</type>
<level>Basic</level>
<desc>子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbOrderScheduleRule</name>
<desc>订单调度规则</desc>
<props>
<prop>
<name>area_ids</name>
<type>String</type>
<level>Basic</level>
<desc>收货地址范围: 6位数的地址ID，用逗号分隔。如“140400,230500”。同一个卖家的订单调度规则中，设置的收货地址范围不能重复。</desc>
</prop>
<prop>
<name>backup_store_id</name>
<type>Number</type>
<level>Basic</level>
<desc>备用配送中心ID</desc>
</prop>
<prop>
<name>default_store_id</name>
<type>Number</type>
<level>Basic</level>
<desc>默认配送中心ID</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单调度规则ID</desc>
</prop>
<prop>
<name>options</name>
<type>String</type>
<level>Basic</level>
<desc>发货规则的额外规则设置： 允许组合，用逗号隔开. 
REMARK_STOP--有订单留言不自动下发; 
COD_STOP--货到付款订单不自动下发; 
CHECK_WAREHOUSE_DELIVER--检查仓库的配送范围</desc>
</prop>
<prop>
<name>presell_store_id</name>
<type>Number</type>
<level>Basic</level>
<desc>预售配送中心ID（预留，暂未使用）</desc>
</prop>
<prop>
<name>rule_id</name>
<type>Number</type>
<level>Basic</level>
<desc>wlb_base_rule表的ID</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商家userId</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品userNick</desc>
</prop>
</props>
</struct>
<struct>
<name>ReplyStatOnDay</name>
<desc>(某天)回复统计列表</desc>
<props>
<prop>
<name>reply_date</name>
<type>Date</type>
<level>Basic</level>
<desc>某天（的回复统计）</desc>
</prop>
<prop>
<name>reply_stat_by_ids</name>
<type>ReplyStatById</type>
<level>Object Array</level>
<desc>客服回复统计</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbTmsOrder</name>
<desc>物流订单运单信息</desc>
<props>
<prop>
<name>code</name>
<type>String</type>
<level>Basic</level>
<desc>运单号</desc>
</prop>
<prop>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司编码</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单编号</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流订单的所有者ID,货主</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleUserSubscribe</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<desc>订购关系到期时间</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleBizOrder</name>
<desc>应用订单信息</desc>
<props>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<desc>应用名称</desc>
</prop>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>biz_type</name>
<type>Number</type>
<level>Basic</level>
<desc>订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到）</desc>
</prop>
<prop>
<name>create</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间（订购时间）</desc>
</prop>
<prop>
<name>fee</name>
<type>String</type>
<level>Basic</level>
<desc>原价（单位为分）</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>order_cycle</name>
<type>String</type>
<level>Basic</level>
<desc>订购周期</desc>
</prop>
<prop>
<name>order_cycle_end</name>
<type>Date</type>
<level>Basic</level>
<desc>订购周期结束时间</desc>
</prop>
<prop>
<name>order_cycle_start</name>
<type>Date</type>
<level>Basic</level>
<desc>订购周期开始时间</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单号</desc>
</prop>
<prop>
<name>prom_fee</name>
<type>String</type>
<level>Basic</level>
<desc>优惠（单位为分）</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>String</type>
<level>Basic</level>
<desc>退款（单位为分；升级时，系统会将升级前老版本按照剩余订购天数退还剩余金额）</desc>
</prop>
<prop>
<name>total_pay_fee</name>
<type>String</type>
<level>Basic</level>
<desc>实付（单位为分）</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoGrade</name>
<desc>分销商等级</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>记录创建时间</desc>
</prop>
<prop>
<name>grade_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主键</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>记录最后修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>分销商等级名称</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionDetail</name>
<desc>交易的优惠信息详情</desc>
<props>
<prop>
<name>discount_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>优惠金额（免运费、限时打折时为空）,单位：元</desc>
</prop>
<prop>
<name>gift_item_id</name>
<type>String</type>
<level>Basic</level>
<desc>赠品的宝贝id</desc>
</prop>
<prop>
<name>gift_item_name</name>
<type>String</type>
<level>Basic</level>
<desc>满就送商品时，所送商品的名称</desc>
</prop>
<prop>
<name>gift_item_num</name>
<type>String</type>
<level>Basic</level>
<desc>满就送礼物的礼物数量</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>交易的主订单或子订单号</desc>
</prop>
<prop>
<name>promotion_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠活动的描述</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>优惠id，(由营销工具id、优惠活动id和优惠详情id组成，结构为：营销工具id-优惠活动id_优惠详情id，如mjs-123024_211143）</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠信息的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>KfcSearchResult</name>
<desc>KFC 关键词过滤匹配结果</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>过滤后的文本： 
当匹配到B等级的词时，文本中的关键词被替换为*号，content即为关键词替换后的文本； 
其他情况，content始终为null</desc>
</prop>
<prop>
<name>level</name>
<type>String</type>
<level>Basic</level>
<desc>匹配到的关键词的等级，值为null，或为A、B、C、D。 
当匹配不到关键词时，值为null，否则值为A、B、C、D中的一个。 
A、B、C、D等级按严重程度从高至低排列。</desc>
</prop>
<prop>
<name>matched</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否匹配到关键词,匹配到则为true.</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbPartnerContact</name>
<desc>联系人联系详情</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>仓库联系人姓名</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>联系电话</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbPartnerAddress</name>
<desc>联系人地址信息</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>详细地址</desc>
</prop>
<prop>
<name>borough</name>
<type>String</type>
<level>Basic</level>
<desc>区</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>市</desc>
</prop>
<prop>
<name>province</name>
<type>String</type>
<level>Basic</level>
<desc>省</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>邮编</desc>
</prop>
</props>
</struct>
<struct>
<name>Meal</name>
<desc>搭配套餐类。</desc>
<props>
<prop>
<name>item_list</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐商品列表。item_id为商品的id;item_show_name为商品显示名。因最多允许5个商品进行搭配，所以查询最多有5个，以json格式传出。</desc>
</prop>
<prop>
<name>meal_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套餐id。</desc>
</prop>
<prop>
<name>meal_memo</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐描述！</desc>
</prop>
<prop>
<name>meal_name</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐名称。</desc>
</prop>
<prop>
<name>meal_price</name>
<type>Price</type>
<level>Basic</level>
<desc>套餐一口价(单位是：分)</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>普通运费模板id。若这个字段为空或0时，运费是卖家负责;若这个字段不为空，说明运费模板存在，运费是买家负责。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。</desc>
</prop>
</props>
</struct>
<struct>
<name>PosterGoodsInfo</name>
<desc>与对应画报相关联的商品的信息</desc>
<props>
<prop>
<name>note</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述信息</desc>
</prop>
<prop>
<name>num_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>pic_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片id</desc>
</prop>
<prop>
<name>poster_id</name>
<type>Number</type>
<level>Basic</level>
<desc>画报id</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>short_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品短标题</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>手机上相应购买地址</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleSub</name>
<desc>应用订购信息</desc>
<props>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<desc>应用名称</desc>
</prop>
<prop>
<name>autosub</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否自动续费</desc>
</prop>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<desc>订购关系到期时间</desc>
</prop>
<prop>
<name>expire_notice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否到期提醒</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态，1=有效 2=过期</desc>
</prop>
</props>
</struct>
<struct>
<name>GroupMember</name>
<desc>组及其成员列表</desc>
<props>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>组编号</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>组名称</desc>
</prop>
<prop>
<name>member_list</name>
<type>String</type>
<level>Basic</level>
<desc>组成员列表，逗号分隔</desc>
</prop>
</props>
</struct>
<struct>
<name>Room</name>
<desc>Room（酒店商品）结构。各字段详细说明可参考接口定义，如：商品发布接口。</desc>
<props>
<prop>
<name>area</name>
<type>String</type>
<level>Basic</level>
<desc>面积</desc>
</prop>
<prop>
<name>bbn</name>
<type>String</type>
<level>Basic</level>
<desc>宽带服务</desc>
</prop>
<prop>
<name>bed_type</name>
<type>String</type>
<level>Basic</level>
<desc>床型</desc>
</prop>
<prop>
<name>breakfast</name>
<type>String</type>
<level>Basic</level>
<desc>早餐</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>deposit</name>
<type>Number</type>
<level>Basic</level>
<desc>订金</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述</desc>
</prop>
<prop>
<name>fee</name>
<type>Number</type>
<level>Basic</level>
<desc>手续费</desc>
</prop>
<prop>
<name>gid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店商品id</desc>
</prop>
<prop>
<name>guide</name>
<type>String</type>
<level>Basic</level>
<desc>购买须知</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店信息</desc>
</prop>
<prop>
<name>iid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝商品id</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>payment_type</name>
<type>String</type>
<level>Basic</level>
<desc>支付类型</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>酒店商品图片Url。多个url用逗号隔开</desc>
</prop>
<prop>
<name>price_type</name>
<type>String</type>
<level>Basic</level>
<desc>价格类型</desc>
</prop>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<desc>房型id</desc>
</prop>
<prop>
<name>room_quotas</name>
<type>String</type>
<level>Basic</level>
<desc>房态信息。JSON格式串</desc>
</prop>
<prop>
<name>room_type</name>
<type>RoomType</type>
<level>Object</level>
<desc>房型信息</desc>
</prop>
<prop>
<name>service</name>
<type>String</type>
<level>Basic</level>
<desc>设施服务。JSON格式串</desc>
</prop>
<prop>
<name>size</name>
<type>String</type>
<level>Basic</level>
<desc>床宽</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态。1：上架。2：下架。3：删除</desc>
</prop>
<prop>
<name>storey</name>
<type>String</type>
<level>Basic</level>
<desc>楼层</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>酒店商品名称</desc>
</prop>
</props>
</struct>
<struct>
<name>HotelOrder</name>
<desc>HotelOrder（酒店订单）结构。各字段详细说明可参考接口定义。注意：trade_status，refund_status，logistics_status不是严格准确的，请以交易API，物流API等得到的订单状态、物流状态为准确依据。</desc>
<props>
<prop>
<name>alipay_trade_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，22位字符</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家淘宝账号</desc>
</prop>
<prop>
<name>checkin_date</name>
<type>Date</type>
<level>Basic</level>
<desc>入住时间</desc>
</prop>
<prop>
<name>checkout_date</name>
<type>Date</type>
<level>Basic</level>
<desc>离店时间</desc>
</prop>
<prop>
<name>contact_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人姓名</desc>
</prop>
<prop>
<name>contact_phone</name>
<type>String</type>
<level>Basic</level>
<desc>联系人电话</desc>
</prop>
<prop>
<name>contact_phone_bak</name>
<type>String</type>
<level>Basic</level>
<desc>备用联系人电话</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>结束时间</desc>
</prop>
<prop>
<name>gid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>guests</name>
<type>OrderGuest</type>
<level>Object Array</level>
<desc>入住人信息</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>logistics_status</name>
<type>String</type>
<level>Basic</level>
<desc>物流状态。STATUS_UNCONSIGNED：未发货 -&gt; 等待卖家发货。STATUS_CONSIGNED：已发货 -&gt; 等待买家确认收货。STATUS_DELIVERED：已收货 -&gt; 交易成功。STATUS_REVERT：已经退货 -&gt; 交易失败。STATUS_DELIVERED_PART：部分发货 -&gt; 交易成功。STATUS_NO_OUT_ORDER：还未创建物流订单</desc>
</prop>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>买家留言</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>订单修改时间</desc>
</prop>
<prop>
<name>nights</name>
<type>Number</type>
<level>Basic</level>
<desc>天数</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店订单id</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间</desc>
</prop>
<prop>
<name>payment</name>
<type>Number</type>
<level>Basic</level>
<desc>实付款（分）</desc>
</prop>
<prop>
<name>refund_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。STATUS_WAIT_SELLER_AGREE：买家已经申请退款，等待卖家同意。STATUS_WAIT_BUYER_RETURN_GOODS：卖家已经同意退款，等待买家退货。STATUS_WAIT_SELLER_CONFIRM_GOODS：买家已经退货，等待卖家确认收货。STATUS_CLOSED：退款关闭。STATUS_SUCCESS：退款成功。STATUS_SELLER_REFUSE_BUYER：卖家拒绝退款。STATUS_WAIT_OUT_PAY_SYSTEM_REFUND：等待外部交易系统退款。STATUS_NO_REFUND：没有申请退款。STATUS_ACTIVE_REFUND：有活动退款。STATUS_END_REFUND：退款结束。</desc>
</prop>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<desc>房型id</desc>
</prop>
<prop>
<name>room_number</name>
<type>Number</type>
<level>Basic</level>
<desc>房间数</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家淘宝账号</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝订单id</desc>
</prop>
<prop>
<name>total_room_price</name>
<type>Number</type>
<level>Basic</level>
<desc>总房价（分）</desc>
</prop>
<prop>
<name>trade_status</name>
<type>String</type>
<level>Basic</level>
<desc>交易状态。WAIT_BUYER_PAY：未冻结/未付款 -&gt; 等待买家付款。WAIT_SELLER_SEND_GOODS：已冻结/已付款 -&gt; 等待卖家发货。TRADE_CLOSED：已退款 -&gt; 交易关闭。TRADE_FINISHED：已转交易 -&gt; 交易成功。TRADE_NO_CREATE_PAY：没有创建支付宝交易。TRADE_CLOSED_BY_TAOBAO：交易被淘宝关闭</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>支付类型。A：全额支付。B：灵活支付－手续费。C：灵活支付－订金。D：灵活支付－手续费/间夜</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaAudioReaderTrack</name>
<desc>有声读物单曲信息</desc>
<props>
<prop>
<name>duration</name>
<type>String</type>
<level>Basic</level>
<desc>单曲时长</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>单曲ID</desc>
</prop>
<prop>
<name>last_updated</name>
<type>String</type>
<level>Basic</level>
<desc>单曲更新日期</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>单曲价格</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>单曲名称</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaAudioReaderAlbumSummary</name>
<desc>有声读物专辑摘要</desc>
<props>
<prop>
<name>copyright</name>
<type>String</type>
<level>Basic</level>
<desc>版权所属</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>专辑ID</desc>
</prop>
<prop>
<name>last_updated</name>
<type>String</type>
<level>Basic</level>
<desc>最后更新日期</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>专辑封面图片url</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>价格</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>商品状态</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>专辑名称</desc>
</prop>
<prop>
<name>track_count</name>
<type>Number</type>
<level>Basic</level>
<desc>集数</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaAudioReaderAlbum</name>
<desc>有声读物专辑信息</desc>
<props>
<prop>
<name>artist_name</name>
<type>String</type>
<level>Basic</level>
<desc>播音员名称</desc>
</prop>
<prop>
<name>bit_rate</name>
<type>String</type>
<level>Basic</level>
<desc>码流</desc>
</prop>
<prop>
<name>copyright</name>
<type>String</type>
<level>Basic</level>
<desc>版权所属</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>专辑简介</desc>
</prop>
<prop>
<name>duration</name>
<type>String</type>
<level>Basic</level>
<desc>时长</desc>
</prop>
<prop>
<name>format</name>
<type>String</type>
<level>Basic</level>
<desc>格式</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>专辑ID</desc>
</prop>
<prop>
<name>last_updated</name>
<type>String</type>
<level>Basic</level>
<desc>专辑最后更新日期</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>专辑封面图片url</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>价格</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>专辑状态</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>专辑名称</desc>
</prop>
<prop>
<name>track_count</name>
<type>Number</type>
<level>Basic</level>
<desc>集数</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemTemplate</name>
<desc>宝贝详情页面信息</desc>
<props>
<prop>
<name>shop_type</name>
<type>Number</type>
<level>Basic</level>
<desc>用于区分宝贝模板属于内店和外店</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝模板的id</desc>
</prop>
<prop>
<name>template_name</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝详情模板的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Hotel</name>
<desc>Hotel（酒店）结构。各字段详细说明可参考接口定义，如：酒店发布接口。</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>酒店地址</desc>
</prop>
<prop>
<name>alias_name</name>
<type>String</type>
<level>Basic</level>
<desc>某个卖家发布的酒店的别名</desc>
</prop>
<prop>
<name>city</name>
<type>Number</type>
<level>Basic</level>
<desc>城市编码</desc>
</prop>
<prop>
<name>city_str</name>
<type>String</type>
<level>Basic</level>
<desc>城市中文名称</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>国家编码</desc>
</prop>
<prop>
<name>country_str</name>
<type>String</type>
<level>Basic</level>
<desc>国家中文名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>decorate_time</name>
<type>String</type>
<level>Basic</level>
<desc>装修时间</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>酒店介绍</desc>
</prop>
<prop>
<name>district</name>
<type>Number</type>
<level>Basic</level>
<desc>区域编码</desc>
</prop>
<prop>
<name>district_str</name>
<type>String</type>
<level>Basic</level>
<desc>区域中文名称</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>level</name>
<type>String</type>
<level>Basic</level>
<desc>酒店级别</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>酒店名称</desc>
</prop>
<prop>
<name>opening_time</name>
<type>String</type>
<level>Basic</level>
<desc>开业时间</desc>
</prop>
<prop>
<name>orientation</name>
<type>String</type>
<level>Basic</level>
<desc>酒店定位</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>酒店图片url</desc>
</prop>
<prop>
<name>province</name>
<type>Number</type>
<level>Basic</level>
<desc>省份编码</desc>
</prop>
<prop>
<name>province_str</name>
<type>String</type>
<level>Basic</level>
<desc>省份中文名称</desc>
</prop>
<prop>
<name>room_types</name>
<type>RoomType</type>
<level>Object Array</level>
<desc>房型列表</desc>
</prop>
<prop>
<name>rooms</name>
<type>Number</type>
<level>Basic</level>
<desc>房间数</desc>
</prop>
<prop>
<name>service</name>
<type>String</type>
<level>Basic</level>
<desc>交通距离与设施服务。JSON格式串。</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态。0：待审核，1：正常（审核通过），2：审核否决，3：停售</desc>
</prop>
<prop>
<name>storeys</name>
<type>Number</type>
<level>Basic</level>
<desc>楼层数</desc>
</prop>
<prop>
<name>tel</name>
<type>String</type>
<level>Basic</level>
<desc>酒店电话</desc>
</prop>
</props>
</struct>
<struct>
<name>FenxiaoItemRecord</name>
<desc>分销商品下载记录</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>下载时间</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商ID</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）</desc>
</prop>
</props>
</struct>
<struct>
<name>Cooperation</name>
<desc>合作分销关系</desc>
<props>
<prop>
<name>auth_payway</name>
<type>String</type>
<level>Basic Array</level>
<desc>供应商授权的支付方式：ALIPAY(支付宝)、OFFPREPAY(预付款)、OFFTRANSFER(转帐)、OFFSETTLEMENT(后期结算)</desc>
</prop>
<prop>
<name>cooperate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>合作关系ID</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<desc>分销商ID</desc>
</prop>
<prop>
<name>distributor_nick</name>
<type>String</type>
<level>Basic</level>
<desc>分销商nick</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>合作终止时间</desc>
</prop>
<prop>
<name>grade_id</name>
<type>Number</type>
<level>Basic</level>
<desc>等级ID</desc>
</prop>
<prop>
<name>product_line</name>
<type>String</type>
<level>Basic</level>
<desc>授权产品线</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>合作起始时间</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>NORMAL END ENDING</desc>
</prop>
<prop>
<name>supplier_id</name>
<type>Number</type>
<level>Basic</level>
<desc>供应商ID</desc>
</prop>
<prop>
<name>supplier_nick</name>
<type>String</type>
<level>Basic</level>
<desc>供应商NICK</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<desc>分销方式： AGENT(代销) 、DEALER(经销)</desc>
</prop>
</props>
</struct>
<struct>
<name>LimitDiscount</name>
<desc>限时打折</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折结束时间。</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>该限时打折宝贝数量。</desc>
</prop>
<prop>
<name>limit_discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>限时打折ID。</desc>
</prop>
<prop>
<name>limit_discount_name</name>
<type>String</type>
<level>Basic</level>
<desc>限时打折名称。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折开始时间。</desc>
</prop>
</props>
</struct>
<struct>
<name>RoomType</name>
<desc>RoomType（房型）结构。各字段详细说明可参考接口定义，如：房型发布接口。</desc>
<props>
<prop>
<name>alias_name</name>
<type>String</type>
<level>Basic</level>
<desc>某卖家提供的房型别名</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>房型名称</desc>
</prop>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<desc>房型id</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态。0：待审核，1：正常（审核通过），2：审核否决，3：停售</desc>
</prop>
</props>
</struct>
<struct>
<name>AddressResult</name>
<desc>地址库返回数据信息</desc>
<props>
<prop>
<name>addr</name>
<type>String</type>
<level>Basic</level>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</prop>
<prop>
<name>area_id</name>
<type>Number</type>
<level>Basic</level>
<desc>区域ID</desc>
</prop>
<prop>
<name>cancel_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认退货地址</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>市</desc>
</prop>
<prop>
<name>contact_id</name>
<type>Number</type>
<level>Basic</level>
<desc>地址库ID</desc>
</prop>
<prop>
<name>contact_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人姓名</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>区、县</desc>
</prop>
<prop>
<name>get_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认取货地址</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<desc>手机号码，手机与电话必需有一个  
手机号码不能超过20位</desc>
</prop>
<prop>
<name>modify_date</name>
<type>Date</type>
<level>Basic</level>
<desc>修改日期时间</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>电话号码,手机与电话必需有一个</desc>
</prop>
<prop>
<name>province</name>
<type>String</type>
<level>Basic</level>
<desc>省</desc>
</prop>
<prop>
<name>seller_company</name>
<type>String</type>
<level>Basic</level>
<desc>公司名称,</desc>
</prop>
<prop>
<name>send_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认发货地址</desc>
</prop>
<prop>
<name>zip_code</name>
<type>String</type>
<level>Basic</level>
<desc>地区邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>OrderGuest</name>
<desc>酒店订单入住人结构。</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>入住人姓名</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店订单id</desc>
</prop>
<prop>
<name>person_pos</name>
<type>Number</type>
<level>Basic</level>
<desc>入住人序号</desc>
</prop>
<prop>
<name>room_pos</name>
<type>Number</type>
<level>Basic</level>
<desc>房间序号</desc>
</prop>
<prop>
<name>tel</name>
<type>String</type>
<level>Basic</level>
<desc>入住人电话</desc>
</prop>
</props>
</struct>
<struct>
<name>RoomImage</name>
<desc>RoomImage（酒店图片）结构。各字段详细说明可参考接口定义，如：商品图片上传接口。</desc>
<props>
<prop>
<name>all_images</name>
<type>String</type>
<level>Basic</level>
<desc>商品所有图片的url，用”,”隔开。即，当前该商品的所有图片地址。</desc>
</prop>
<prop>
<name>gid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店商品id</desc>
</prop>
<prop>
<name>image</name>
<type>String</type>
<level>Basic</level>
<desc>图片url。当前接口操作的图片url。调用上传图片接口时，代表上传图片后得到的图片url。调用删除图片接口时，代表被删除掉的图片url。</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片位置，可选值：1,2,3,4,5。代表图片的位置，如：2，代表第二张图片。</desc>
</prop>
</props>
</struct>
<struct>
<name>LimitDiscountDetail</name>
<desc>限时打折详情</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折结束时间。</desc>
</prop>
<prop>
<name>item_discount</name>
<type>Price</type>
<level>Basic</level>
<desc>该商品限时折扣</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的id(数字类型)</desc>
</prop>
<prop>
<name>limit_discount_name</name>
<type>String</type>
<level>Basic</level>
<desc>限时打折名称</desc>
</prop>
<prop>
<name>limit_num</name>
<type>Number</type>
<level>Basic</level>
<desc>每人限购数量，1、2、5、10000(不限)。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折开始时间。</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaSearchItems</name>
<desc>淘花商品列表</desc>
<props>
<prop>
<name>cate_paths</name>
<type>TaohuaCategory</type>
<level>Object Array</level>
<desc>淘花类目路径数据结构</desc>
</prop>
<prop>
<name>cate_stats</name>
<type>TaohuaCateStat</type>
<level>Object Array</level>
<desc>搜索引擎根据搜索条件中的上一级类目统计出的子类目列表</desc>
</prop>
<prop>
<name>taohua_search_items</name>
<type>TaohuaSearchItem</type>
<level>Object Array</level>
<desc>淘花搜索商品对象列表数据结构</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索出来的商品总数</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaItemPVPair</name>
<desc>商品属性值配对数据结构</desc>
<props>
<prop>
<name>taohua_cate_prop</name>
<type>TaohuaCateProp</type>
<level>Object</level>
<desc>淘花类目属性数据结构</desc>
</prop>
<prop>
<name>taohua_cate_prop_values</name>
<type>TaohuaCatePropValue</type>
<level>Object Array</level>
<desc>淘花类目属性值数据结构</desc>
</prop>
</props>
</struct>
<struct>
<name>Role</name>
<desc>子账号角色</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>角色描述</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>所拥有权限</desc>
</prop>
<prop>
<name>role_id</name>
<type>Number</type>
<level>Basic</level>
<desc>角色id</desc>
</prop>
<prop>
<name>role_name</name>
<type>String</type>
<level>Basic</level>
<desc>角色名</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家Id</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaSearchItem</name>
<desc>淘花搜索商品对象数据结构</desc>
<props>
<prop>
<name>author</name>
<type>String</type>
<level>Basic</level>
<desc>描述图书作者</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述信息</desc>
</prop>
<prop>
<name>doc_pages</name>
<type>Number</type>
<level>Basic</level>
<desc>文档总页数</desc>
</prop>
<prop>
<name>favorite</name>
<type>Number</type>
<level>Basic</level>
<desc>描述用户对某一商品的喜欢程度，值越大，则表示越喜欢</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片链接</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格，单位：分</desc>
</prop>
<prop>
<name>publish_date</name>
<type>String</type>
<level>Basic</level>
<desc>描述图书出版日期</desc>
</prop>
<prop>
<name>publisher</name>
<type>String</type>
<level>Basic</level>
<desc>描述商品的出版社信息</desc>
</prop>
<prop>
<name>root_cate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>根类目ID</desc>
</prop>
<prop>
<name>sell_count</name>
<type>Number</type>
<level>Basic</level>
<desc>销量</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘花卖家的编号，注意：不是淘宝会员的编号。</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家的淘宝nick</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品所属店铺名称</desc>
</prop>
<prop>
<name>size</name>
<type>String</type>
<level>Basic</level>
<desc>文件大小，单位:byte</desc>
</prop>
<prop>
<name>suffix</name>
<type>String</type>
<level>Basic</level>
<desc>文档后缀名</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>two_level_name</name>
<type>String</type>
<level>Basic</level>
<desc>二级类目的名称</desc>
</prop>
<prop>
<name>view_count</name>
<type>Number</type>
<level>Basic</level>
<desc>浏览量</desc>
</prop>
</props>
</struct>
<struct>
<name>TransitStepInfo</name>
<desc>物流跟踪信息的一条</desc>
<props>
<prop>
<name>status_desc</name>
<type>String</type>
<level>Basic</level>
<desc>状态描述</desc>
</prop>
<prop>
<name>status_time</name>
<type>String</type>
<level>Basic</level>
<desc>状态发生的时间</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserPermission</name>
<desc>子账号所拥有的权限对象(直接赋予的权限和通过角色赋予的权限的总和对象)</desc>
<props>
<prop>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>子账号被直接赋予的权限点列表</desc>
</prop>
<prop>
<name>roles</name>
<type>Role</type>
<level>Object Array</level>
<desc>子账号被赋予的角色信息(Role)列表。列表中的角色对象只有role_id，role_name，permissions信息</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaOrder</name>
<desc>淘花订单对象数据结构</desc>
<props>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单编号</desc>
</prop>
<prop>
<name>pay_status</name>
<type>String</type>
<level>Basic</level>
<desc>1、wait_pay:等待买家付款、 
2、timeout_close: 系统超时关闭、 　 
3、pay_suc:交易成功、　　　　　　 
4、uncreate_trade:没有创建外部交易（支付宝交易）、　 　　            
 　　　　　 
5、micropay_trade_close: 交易被淘宝微支付关闭、　 　　           　　　　　　　6、alipay_trade_close:交易被支付宝关闭、　 　　</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片链接</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionInShop</name>
<desc>店铺级优惠信息</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠活动名称</desc>
</prop>
<prop>
<name>promotion_detail_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠详情描述。</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>idValue值</desc>
</prop>
</props>
</struct>
<struct>
<name>OrderAmount</name>
<desc>子订单的帐务数据结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手工调整的子订单的优惠金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的系统优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>子交易订单中购买商品的数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单对应的商品数字id</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子交易订单编号</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。计算公式如下：payment = price * num + adjust_fee - discount_fee + post_fee(邮费，单笔子订单时子订单实付金额包含邮费，多笔子订单时不包含邮费)；对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的系统优惠的名称，对应于discount_fee的名称</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单对应的商品的sku_id</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionDisplayTop</name>
<desc>优惠信息对象</desc>
<props>
<prop>
<name>promotion_in_item</name>
<type>PromotionInItem</type>
<level>Object Array</level>
<desc>单品级优惠信息</desc>
</prop>
<prop>
<name>promotion_in_shop</name>
<type>PromotionInShop</type>
<level>Object Array</level>
<desc>店铺级优惠信息</desc>
</prop>
</props>
</struct>
<struct>
<name>Check</name>
<desc>判断是否是粉丝返回的结果集</desc>
<props>
<prop>
<name>check</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是粉丝</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaItem</name>
<desc>淘花商品数据结构</desc>
<props>
<prop>
<name>author</name>
<type>String</type>
<level>Basic</level>
<desc>描述图书作者信息</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述信息</desc>
</prop>
<prop>
<name>favorite</name>
<type>Number</type>
<level>Basic</level>
<desc>描述用户喜欢值</desc>
</prop>
<prop>
<name>file_type</name>
<type>String</type>
<level>Basic</level>
<desc>文件类型</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>leaf_cate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>叶子类目的ID</desc>
</prop>
<prop>
<name>leaf_cate_name</name>
<type>String</type>
<level>Basic</level>
<desc>叶子类目的名称</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片链接</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格属性</desc>
</prop>
<prop>
<name>publish_date</name>
<type>String</type>
<level>Basic</level>
<desc>描述出版日期</desc>
</prop>
<prop>
<name>publisher</name>
<type>String</type>
<level>Basic</level>
<desc>描述商品出版社属性</desc>
</prop>
<prop>
<name>root_cate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>根类目ID</desc>
</prop>
<prop>
<name>root_cate_name</name>
<type>String</type>
<level>Basic</level>
<desc>根类目名称</desc>
</prop>
<prop>
<name>size</name>
<type>String</type>
<level>Basic</level>
<desc>文件大小，单位byte</desc>
</prop>
<prop>
<name>status_name</name>
<type>String</type>
<level>Basic</level>
<desc>从未上架 never_put_shelves, 
上架put_shelves, 
小二下架down_shevles, 
删除delete, 
用户下架down_shevles_by_seller</desc>
</prop>
<prop>
<name>taohua_item_pv_pairs</name>
<type>TaohuaItemPVPair</type>
<level>Object Array</level>
<desc>淘花商品的属性值对数据结构</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionInItem</name>
<desc>单品级优惠信息</desc>
<props>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠描述</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠结束时间</desc>
</prop>
<prop>
<name>item_promo_price</name>
<type>Price</type>
<level>Basic</level>
<desc>优惠折后价格</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠展示名称</desc>
</prop>
<prop>
<name>other_need</name>
<type>String</type>
<level>Basic</level>
<desc>需要支付附加物，显示为+xxx。如：+20淘金币</desc>
</prop>
<prop>
<name>other_send</name>
<type>String</type>
<level>Basic</level>
<desc>赠送东西。如：送10商城积分</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>idValue的值</desc>
</prop>
<prop>
<name>sku_id_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>sku价格对应的id（保证二者顺序相同）</desc>
</prop>
<prop>
<name>sku_price_list</name>
<type>Price</type>
<level>Basic Array</level>
<desc>sku价格列表</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠开始时间</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaOrders</name>
<desc>淘花订单列表</desc>
<props>
<prop>
<name>taohua_orders</name>
<type>TaohuaOrder</type>
<level>Object Array</level>
<desc>淘花用户已买到订单列表数据结构</desc>
</prop>
<prop>
<name>total_order</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的订单列表的总数</desc>
</prop>
</props>
</struct>
<struct>
<name>FavoriteItem</name>
<desc>推荐的关联商品</desc>
<props>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>item_pictrue</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片地址</desc>
</prop>
<prop>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品的详情页面地址</desc>
</prop>
<prop>
<name>promotion_price</name>
<type>Price</type>
<level>Basic</level>
<desc>促销价格</desc>
</prop>
<prop>
<name>sell_count</name>
<type>Number</type>
<level>Basic</level>
<desc>商品销售次数</desc>
</prop>
</props>
</struct>
<struct>
<name>FavoriteShop</name>
<desc>推荐关联店铺信息</desc>
<props>
<prop>
<name>rate</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺卖家信用</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shop_id</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺ID</desc>
</prop>
<prop>
<name>shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺ID</desc>
</prop>
<prop>
<name>shop_pic</name>
<type>String</type>
<level>Basic</level>
<desc>店铺LOGO图片</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺首页链接</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopPositionData</name>
<desc>聚划算应用，展示本地化服务类商品的分店地理信息的对象</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>店铺的地址</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>卖家店铺所在的城市</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝商品的数字id，对应了商品线的一个商品对象标识</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>卖家店铺的手机联系号码</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家的账户数字id</desc>
</prop>
<prop>
<name>shop_position_id</name>
<type>Number</type>
<level>Basic</level>
<desc>标识了一个唯一的地址位置对象，具有独立的坐标和交通信息</desc>
</prop>
<prop>
<name>store_name</name>
<type>String</type>
<level>Basic</level>
<desc>描述店铺的名称</desc>
</prop>
<prop>
<name>traffic</name>
<type>String</type>
<level>Basic</level>
<desc>店铺的一些交通提示信息</desc>
</prop>
<prop>
<name>x</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺所在的经度，放大100000倍</desc>
</prop>
<prop>
<name>y</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺所在的纬度，放大100000倍</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeAmount</name>
<desc>交易订单的帐务信息详情</desc>
<props>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家获得积分,返点的积分。格式:100;单位:个</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>交易创建时间</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易成功时间(更新交易状态为成功的同时更新)/确认收货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>order_amounts</name>
<type>OrderAmount</type>
<level>Object Array</level>
<desc>子订单的帐务金额详情列表</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>主订单实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分，计算公式如下： 
如果主订单只有一笔子订单 payment = 子订单的实付金额 + 货到付款服务费(如果是货到付款订单) - 主订单的系统级优惠；如果主订单有多笔子订单 payment = 各子订单的实付金额之和 + 货到付款服务费(如果是货到付款订单) + 邮费 - 主订单的系统级优惠</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分。目前只提供整笔交易的邮费，暂不提供各子订单的邮费</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<desc>主交易订单的系统级优惠详情</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易主订单编号</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>主订单的商品金额（各子订单中商品price * num的和，不包括任何优惠信息）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemData</name>
<desc>聚划算商品对象</desc>
<props>
<prop>
<name>activity_price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的聚划算价格，单位分</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的淘宝类目id</desc>
</prop>
<prop>
<name>child_category</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的聚划算二级类目</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在城市</desc>
</prop>
<prop>
<name>current_stock</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的当前库存</desc>
</prop>
<prop>
<name>discount</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的折扣 聚划算价/原价</desc>
</prop>
<prop>
<name>exist_hold_stock</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在占座（下单未支付的订单）</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的团id</desc>
</prop>
<prop>
<name>is_lock</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否为锁定状态,锁定状态的商品才显示为可销售</desc>
</prop>
<prop>
<name>item_desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的聚划算描述信息</desc>
</prop>
<prop>
<name>item_guarantee</name>
<type>String</type>
<level>Basic</level>
<desc>代表聚划算支持的6种消保该商品是否支持，1支持，0不支持 
第一位：如实描述 
第二位：七天退换 
第三位：假一陪三 
第四位：商城正品保障 
第五位：商城提供发票 
第六位：商城7天退换</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的数字id</desc>
</prop>
<prop>
<name>item_status</name>
<type>String</type>
<level>Basic</level>
<desc>描述商品的状态，AVAIL_BUY=可以购买 
WAIT_FOR_START=即将开始 
EXIST_HOLDER=有占座 
NO_STOCK=卖光了 
OUT_OF_TIME=团购已结束</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的URl</desc>
</prop>
<prop>
<name>long_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品的长名称</desc>
</prop>
<prop>
<name>online_end_time</name>
<type>Number</type>
<level>Basic</level>
<desc>商品活动结束时间点的毫秒值</desc>
</prop>
<prop>
<name>online_start_time</name>
<type>Number</type>
<level>Basic</level>
<desc>商品上架开始时间点的毫秒值</desc>
</prop>
<prop>
<name>original_price</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的原价，单位分</desc>
</prop>
<prop>
<name>parent_category</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的聚划算一级类目</desc>
</prop>
<prop>
<name>pay_postage</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否包邮</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的图片地址</desc>
</prop>
<prop>
<name>pic_url_from_ic</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的交易线原始图片地址</desc>
</prop>
<prop>
<name>pic_wide_url</name>
<type>String</type>
<level>Basic</level>
<desc>聚划算图片宽图的地址</desc>
</prop>
<prop>
<name>platform_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的平台id，1001=聚划算</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家对应的信用等级</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品对应的卖家账户id</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的卖家账户nick</desc>
</prop>
<prop>
<name>shop_position_list</name>
<type>ShopPositionData</type>
<level>Object Array</level>
<desc>本地化服务对象的分店信息</desc>
</prop>
<prop>
<name>shop_type</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的店铺类型，集市，商城</desc>
</prop>
<prop>
<name>short_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品短名称</desc>
</prop>
<prop>
<name>sold_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已参团的人数（付款）</desc>
</prop>
</props>
</struct>
<struct>
<name>WidgetCartInfo</name>
<desc>组件购物车记录</desc>
<props>
<prop>
<name>cart_id</name>
<type>Number</type>
<level>Basic</level>
<desc>购物车记录的id，同BaseCartInfo中的cart_id</desc>
</prop>
<prop>
<name>delete_url</name>
<type>String</type>
<level>Basic</level>
<desc>此条购物车记录的删除链接。服务端签名后的删除链接，isv在使用的时候前面加上“http://gw.api.taobao.com/widget?”即可生成完整的购物车记录删除链接。</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>购买的商品的商品数字id，同BaseCartInfo中的item_id,和Item中的num_iid</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品详情页连接地址，同Item的detail_url字段</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>购买的商品的图片地址，如果选择了sku并且sku有单独的图片，此地址为sku的图片地址</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>购买商品的价格，如果无sku，此价格为商品的当前价格。如果有sku，此价格为购买的sku的当前价格。如果此sku已经不存在，显示商品的价格</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>购买数量，同BaseCartInfo的quantity</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品的卖家昵称</desc>
</prop>
<prop>
<name>sku</name>
<type>String</type>
<level>Basic</level>
<desc>sku的属性列表。如果购买的商品无sku，此字段为空。如果有sku，次字段返回sku的属性描述（属性名:属性值别名/属性值名，别名优先）。</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>购买的商品的title，同Item的title</desc>
</prop>
</props>
</struct>
<struct>
<name>NonreplyStatById</name>
<desc>客服未回复统计</desc>
<props>
<prop>
<name>non_reply_customId</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员未回复的客户ID</desc>
</prop>
<prop>
<name>non_reply_num</name>
<type>Number</type>
<level>Basic</level>
<desc>客服未回复数</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>WidgetSkuProps</name>
<desc>Widget使用的sku属性对应信息结构体</desc>
<props>
<prop>
<name>alias</name>
<type>String</type>
<level>Basic</level>
<desc>商品的属性值别名，对应商品中的property_alias字段中的别名部分</desc>
</prop>
<prop>
<name>key_name</name>
<type>String</type>
<level>Basic</level>
<desc>属性id对应的属性名称，对应类目属性中的属性名称</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性图片地址，对应Item中的propImgs，卖家设置了商品属性图片就有此字段，未设置此字段为空</desc>
</prop>
<prop>
<name>prop_key</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝的属性id，对应类目属性中的pid</desc>
</prop>
<prop>
<name>prop_value</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝的属性值id，对应类目属性中的vid</desc>
</prop>
<prop>
<name>value_name</name>
<type>String</type>
<level>Basic</level>
<desc>属性值id对应的属性标准名称，对应类目属性中的属性值名称</desc>
</prop>
</props>
</struct>
<struct>
<name>StaffEvalStatById</name>
<desc>客服评价统计</desc>
<props>
<prop>
<name>evaluations</name>
<type>Evaluation</type>
<level>Object Array</level>
<desc>客服评价</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>WidgetSku</name>
<desc>组件sku信息</desc>
<props>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>sku的价格，对应Sku的price字段</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>sku的属性串，根据pid的大小从小到大排列，前后都加";"。类型Sku的properties字段</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>sku的库存数量，对应Sku的quantity字段</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>sku的id，对应Sku的sku_id字段</desc>
</prop>
</props>
</struct>
<struct>
<name>WidgetItem</name>
<desc>Widget获取到的商品信息</desc>
<props>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品的点击链接，如果此商品有淘宝客会根据app所属的淘宝用户进行淘宝客连接转换，如果无淘宝客此字段为淘宝商品详情地址</desc>
</prop>
<prop>
<name>is_mall</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否商城的商品</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝商品的数字id，与Item的num_iid一致</desc>
</prop>
<prop>
<name>item_pics</name>
<type>String</type>
<level>Basic Array</level>
<desc>商品图片列表，对应Item的itemImgs</desc>
</prop>
<prop>
<name>item_promotion_data</name>
<type>PromotionInItem</type>
<level>Object Array</level>
<desc>商品关联的商品优惠信息</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品的主图地址，对应Item的pic_url</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝商品的价格，对应Item的price。如果商品为无sku或者所有sku价格一致的商品，此字段为价格（199.99）；如果商品有多sku且有一个价格区间，次字段为商品的价格区间，中间用‘-’连接</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的数量，对应Item的num</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品卖家昵称，对应Item的nick</desc>
</prop>
<prop>
<name>shop_promotion_data</name>
<type>PromotionInShop</type>
<level>Object Array</level>
<desc>商品关联的卖家店铺优惠信息</desc>
</prop>
<prop>
<name>sku_props</name>
<type>WidgetSkuProps</type>
<level>Object Array</level>
<desc>商品关联sku对应的商品属性列表信息</desc>
</prop>
<prop>
<name>skus</name>
<type>WidgetSku</type>
<level>Object Array</level>
<desc>商品关联的sku列表信息</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝商品的标题，与Item的title一致</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaUpdateInfo</name>
<desc>淘花终端软件版本更新信息接口</desc>
<props>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>提示消息</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>最新下载地址</desc>
</prop>
<prop>
<name>version</name>
<type>String</type>
<level>Basic</level>
<desc>版本号</desc>
</prop>
</props>
</struct>
<struct>
<name>HotelImage</name>
<desc>酒店图片</desc>
<props>
<prop>
<name>hid</name>
<type>Number</type>
<level>Basic</level>
<desc>酒店id</desc>
</prop>
<prop>
<name>pic</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址链接</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaCateStat</name>
<desc>淘花类目统计结构对象，  是搜索引擎统计返回回来的类目信息</desc>
<props>
<prop>
<name>cate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>当前类目下面的商品数量</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaCategory</name>
<desc>淘花类目对象</desc>
<props>
<prop>
<name>cate_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>cate_level</name>
<type>Number</type>
<level>Basic</level>
<desc>类目层级</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目ID</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排序值</desc>
</prop>
</props>
</struct>
<struct>
<name>ChannelInfo</name>
<desc>渠道信息</desc>
<props>
<prop>
<name>channel_display_name</name>
<type>String</type>
<level>Basic</level>
<desc>渠道展示名称</desc>
</prop>
<prop>
<name>channel_key</name>
<type>String</type>
<level>Basic</level>
<desc>渠道标识代码</desc>
</prop>
<prop>
<name>referers</name>
<type>String</type>
<level>Basic Array</level>
<desc>当前渠道所包含的来源referer地址。</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaCatePropValue</name>
<desc>淘花类目属性值对象结构</desc>
<props>
<prop>
<name>prop_value</name>
<type>String</type>
<level>Basic</level>
<desc>属性值</desc>
</prop>
<prop>
<name>value_id</name>
<type>Number</type>
<level>Basic</level>
<desc>属性值id</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaCateProp</name>
<desc>淘花类目属性结构</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名称</desc>
</prop>
<prop>
<name>prop_id</name>
<type>Number</type>
<level>Basic</level>
<desc>属性结构</desc>
</prop>
</props>
</struct>
<struct>
<name>AlipayAccount</name>
<desc>支付宝用户账户信息</desc>
<props>
<prop>
<name>alipay_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝用户ID</desc>
</prop>
<prop>
<name>available_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>可用余额</desc>
</prop>
<prop>
<name>freeze_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>不可用余额</desc>
</prop>
<prop>
<name>total_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>余额总额</desc>
</prop>
</props>
</struct>
<struct>
<name>AlipayContract</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>alipay_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝用户ID</desc>
</prop>
<prop>
<name>contract_content</name>
<type>String</type>
<level>Basic</level>
<desc>订购的应用名称，有效时间。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订购的失效时间</desc>
</prop>
<prop>
<name>page_url</name>
<type>String</type>
<level>Basic</level>
<desc>订购URL。在sign返回false时返回应用的订购地址，可以引导用户订购。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订购的生效时间</desc>
</prop>
<prop>
<name>subscribe</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否订购的标识。true：代表已订购。</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbInventory</name>
<desc>库存详情对象。其中包括货主ID，仓库编码，库存，库存类型等属性</desc>
<props>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</prop>
<prop>
<name>lock_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>冻结(锁定)数量，用来跟踪库存的中间状态，比如前台销售了1件商品，这时lock加1，当商品出库的时候lock再减回去</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>库存数量(有效数量)</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>仓库编码，关联到仓库类型服务的编码非托管库存(卖家自己管理的库存，物流宝不可见又称自有库存)的所在仓库编码: STORE_SYS_PRIVATE</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>VENDIBLE--可销售库存 
FREEZE--冻结库存 
ONWAY--在途库存 
DEFECT--残次品库存</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货主ID</desc>
</prop>
</props>
</struct>
<struct>
<name>AccountFreeze</name>
<desc>支付宝用户冻结明细信息</desc>
<props>
<prop>
<name>freeze_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>冻结金额</desc>
</prop>
<prop>
<name>freeze_name</name>
<type>String</type>
<level>Basic</level>
<desc>冻结类型名称</desc>
</prop>
<prop>
<name>freeze_type</name>
<type>String</type>
<level>Basic</level>
<desc>冻结类型值</desc>
</prop>
</props>
</struct>
<struct>
<name>CouponDetail</name>
<desc>优惠券详细信息</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家的昵称</desc>
</prop>
<prop>
<name>channel</name>
<type>String</type>
<level>Basic</level>
<desc>优惠券的发放渠道：渠道有rewardforgifts：满就送，marketingMessage：营销消息，activityofget：活动领取，createActivity：创建活动，ISV</desc>
</prop>
<prop>
<name>coupon_number</name>
<type>Number</type>
<level>Basic</level>
<desc>目前优惠券编号</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<desc>优惠券使用情况Unused：未使用using：使用中used：已使用</desc>
</prop>
</props>
</struct>
<struct>
<name>WlbItem</name>
<desc>物流宝商品</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品牌ID</desc>
</prop>
<prop>
<name>color</name>
<type>String</type>
<level>Basic</level>
<desc>颜色</desc>
</prop>
<prop>
<name>creator</name>
<type>String</type>
<level>Basic</level>
<desc>创建人</desc>
</prop>
<prop>
<name>flag</name>
<type>String</type>
<level>Basic</level>
<desc>标记，用逗号隔开的字符串。 
BIT_HAS_AUTHORIZE 第1位 是否有授权规则; 
BATCH  第2位 是否有批次规则； 
SYNCHRONIZATION 第3位 是否有同步规则。</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>创建日期</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改日期</desc>
</prop>
<prop>
<name>goods_cat</name>
<type>String</type>
<level>Basic</level>
<desc>货类</desc>
</prop>
<prop>
<name>height</name>
<type>Number</type>
<level>Basic</level>
<desc>高</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品id</desc>
</prop>
<prop>
<name>is_dangerous</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否危险品</desc>
</prop>
<prop>
<name>is_friable</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否易碎</desc>
</prop>
<prop>
<name>is_sku</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是不是sku商品 
值为true或false</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>商家编码</desc>
</prop>
<prop>
<name>last_modifier</name>
<type>String</type>
<level>Basic</level>
<desc>最后修改人</desc>
</prop>
<prop>
<name>length</name>
<type>Number</type>
<level>Basic</level>
<desc>mm</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>商品的名称</desc>
</prop>
<prop>
<name>package_material</name>
<type>String</type>
<level>Basic</level>
<desc>包装材料</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父item的id，当item为物流宝子商品时，parent_id必填,否则不必填 
可通过父ID来得知商品的关系。</desc>
</prop>
<prop>
<name>price</name>
<type>Number</type>
<level>Basic</level>
<desc>价格</desc>
</prop>
<prop>
<name>pricing_cat</name>
<type>String</type>
<level>Basic</level>
<desc>计价货类</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>属性key:value; key:value</desc>
</prop>
<prop>
<name>publish_version</name>
<type>Number</type>
<level>Basic</level>
<desc>发布版本号，用来同步商</desc>
</prop>
<prop>
<name>remark</name>
<type>String</type>
<level>Basic</level>
<desc>商品备注</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态，item_status_valid -- 1 表示 有效 item_status_lock -- 2 表示锁住</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>前台商品名称</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>商品类型： 
NORMAL--普通类型; 
COMBINE--组合商品; 
DISTRIBUTION--分销商品; 
默认为NORMAL</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所有人淘宝ID</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品所有人淘宝nick</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<desc>立方mm</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>重量</desc>
</prop>
<prop>
<name>width</name>
<type>Number</type>
<level>Basic</level>
<desc>宽</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeRecord</name>
<desc>支付宝交易明细</desc>
<props>
<prop>
<name>alipay_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝订单号</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</prop>
<prop>
<name>merchant_order_no</name>
<type>String</type>
<level>Basic</level>
<desc>商户订单号</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单最后修改时间</desc>
</prop>
<prop>
<name>opposite_logon_id</name>
<type>String</type>
<level>Basic</level>
<desc>对方支付宝登录号，需要隐藏</desc>
</prop>
<prop>
<name>opposite_name</name>
<type>String</type>
<level>Basic</level>
<desc>对方姓名，需要隐藏</desc>
</prop>
<prop>
<name>opposite_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>对方支付宝账号</desc>
</prop>
<prop>
<name>order_from</name>
<type>String</type>
<level>Basic</level>
<desc>订单来源，为空查询所有来源。淘宝(taobao)，支付宝(alipay)，其它(other)</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态</desc>
</prop>
<prop>
<name>order_title</name>
<type>String</type>
<level>Basic</level>
<desc>订单的名称，描述订单的摘要信息，如交易的商品名称</desc>
</prop>
<prop>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<desc>订单类型</desc>
</prop>
<prop>
<name>owner_logon_id</name>
<type>String</type>
<level>Basic</level>
<desc>本方支付宝登录号，需要隐藏</desc>
</prop>
<prop>
<name>owner_name</name>
<type>String</type>
<level>Basic</level>
<desc>本方姓名，需要隐藏</desc>
</prop>
<prop>
<name>owner_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>本方支付宝账号</desc>
</prop>
<prop>
<name>service_charge</name>
<type>Price</type>
<level>Basic</level>
<desc>订单服务费</desc>
</prop>
<prop>
<name>total_amount</name>
<type>Price</type>
<level>Basic</level>
<desc>订单总金额</desc>
</prop>
</props>
</struct>
<struct>
<name>Activity</name>
<desc>活动数据结构</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</prop>
<prop>
<name>activity_url</name>
<type>String</type>
<level>Basic</level>
<desc>领用优惠券的链接</desc>
</prop>
<prop>
<name>applied_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已经领取的优惠券的数量</desc>
</prop>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动对应的优惠券ID</desc>
</prop>
<prop>
<name>create_user</name>
<type>String</type>
<level>Basic</level>
<desc>self代表自己创建，other他人创建</desc>
</prop>
<prop>
<name>person_limit_count</name>
<type>Number</type>
<level>Basic</level>
<desc>每个买家限领取优惠券的数量，1～5张</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>enabled代表有效，invalid代表失效。other代表空值</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家设置优惠券领取的总领用量</desc>
</prop>
</props>
</struct>
<struct>
<name>Coupon</name>
<desc>优惠券数据结构</desc>
<props>
<prop>
<name>condition</name>
<type>Number</type>
<level>Basic</level>
<desc>订单满多少分才能用这个优惠券，501就是满501分能使用。注意：返回的是“分”，不是“元”</desc>
</prop>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券ID</desc>
</prop>
<prop>
<name>creat_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠券创建时间</desc>
</prop>
<prop>
<name>create_channel</name>
<type>String</type>
<level>Basic</level>
<desc>优惠券的创建渠道，自己创建/他人创建</desc>
</prop>
<prop>
<name>denominations</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券的面值，返回的是“分”，不是“元”，500代表500分相当于5元</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠券的截止日期</desc>
</prop>
</props>
</struct>
<struct>
<name>AfterSale</name>
<desc>卖家设置售后服务对象</desc>
<props>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<desc>id</desc>
</prop>
<prop>
<name>after_sale_name</name>
<type>String</type>
<level>Basic</level>
<desc>名称</desc>
</prop>
<prop>
<name>after_sale_path</name>
<type>String</type>
<level>Basic</level>
<desc>tfs地址</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaItemComment</name>
<desc>指定商品评论</desc>
<props>
<prop>
<name>comment</name>
<type>String</type>
<level>Basic</level>
<desc>商品评论的具体内容</desc>
</prop>
<prop>
<name>comment_date</name>
<type>Date</type>
<level>Basic</level>
<desc>评论发表时间</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>评论人</desc>
</prop>
</props>
</struct>
<struct>
<name>PartnerDetail</name>
<desc>物流公司详细信息</desc>
<props>
<prop>
<name>account_no</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司支付宝账号</desc>
</prop>
<prop>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>company_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流公司id</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司简称</desc>
</prop>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司全名</desc>
</prop>
<prop>
<name>reg_mail_no</name>
<type>String</type>
<level>Basic</level>
<desc>运单号验证正则表达式</desc>
</prop>
<prop>
<name>wangwang_id</name>
<type>String</type>
<level>Basic</level>
<desc>旺旺id</desc>
</prop>
</props>
</struct>
<struct>
<name>TaohuaItemCommentResult</name>
<desc>淘花商品评论</desc>
<props>
<prop>
<name>taohua_item_comments</name>
<type>TaohuaItemComment</type>
<level>Object Array</level>
<desc>淘花商品评论列表</desc>
</prop>
<prop>
<name>total_comment_num</name>
<type>Number</type>
<level>Basic</level>
<desc>评论总数</desc>
</prop>
</props>
</struct>
<struct>
<name>Discount</name>
<desc>折扣信息</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>details</name>
<type>DiscountDetail</type>
<level>Object Array</level>
<desc>折扣详情</desc>
</prop>
<prop>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>折扣名称</desc>
</prop>
</props>
</struct>
<struct>
<name>DiscountDetail</name>
<desc>折扣详情信息</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>detail_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣详情ID</desc>
</prop>
<prop>
<name>discount_type</name>
<type>String</type>
<level>Basic</level>
<desc>优惠方式:PERCENT（按折扣优惠）、PRICE（按减价优惠）</desc>
</prop>
<prop>
<name>discount_value</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠比率或者优惠价格 10%或10</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>target_id</name>
<type>Number</type>
<level>Basic</level>
<desc>会员等级的id或者分销商id</desc>
</prop>
<prop>
<name>target_name</name>
<type>String</type>
<level>Basic</level>
<desc>等级名称或者分销商名称</desc>
</prop>
<prop>
<name>target_type</name>
<type>String</type>
<level>Basic</level>
<desc>折扣类型:GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠）</desc>
</prop>
</props>
</struct>
<struct>
<name>Evaluation</name>
<desc>客服评价</desc>
<props>
<prop>
<name>evaluation_name</name>
<type>String</type>
<level>Basic</level>
<desc>客服评价内容</desc>
</prop>
<prop>
<name>evaluation_num</name>
<type>String</type>
<level>Basic</level>
<desc>评价数量</desc>
</prop>
</props>
</struct>
<struct>
<name>OnlineTimeById</name>
<desc>在线时长</desc>
<props>
<prop>
<name>online_times</name>
<type>Number</type>
<level>Basic</level>
<desc>客服在线时间长度（秒）</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>WaitingTimeById</name>
<desc>平均等待时长</desc>
<props>
<prop>
<name>avg_waiting_times</name>
<type>Number</type>
<level>Basic</level>
<desc>平均等待时间长度（秒）</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>ReplyStatById</name>
<desc>客服回复统计</desc>
<props>
<prop>
<name>reply_num</name>
<type>Number</type>
<level>Basic</level>
<desc>客服回复数</desc>
</prop>
<prop>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服ID</desc>
</prop>
</props>
</struct>
<struct>
<name>Chatpeer</name>
<desc>聊天对象ID列表</desc>
<props>
<prop>
<name>date</name>
<type>String</type>
<level>Basic</level>
<desc>聊天日期</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<desc>聊天对象用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsPartner</name>
<desc>查询揽送范围之内的物流公司信息</desc>
<props>
<prop>
<name>carriage</name>
<type>CarriageDetail</type>
<level>Object</level>
<desc>物流公司揽收和资费详细信息</desc>
</prop>
<prop>
<name>cover_remark</name>
<type>String</type>
<level>Basic</level>
<desc>揽收说明信息</desc>
</prop>
<prop>
<name>partner</name>
<type>PartnerDetail</type>
<level>Object</level>
<desc>物流公司详细信息</desc>
</prop>
<prop>
<name>uncover_remark</name>
<type>String</type>
<level>Basic</level>
<desc>不可送达的说明信息</desc>
</prop>
</props>
</struct>
<struct>
<name>Promotion</name>
<desc>商品优惠策略详情</desc>
<props>
<prop>
<name>decrease_num</name>
<type>Number</type>
<level>Basic</level>
<desc>减价件数，1只减一件，0表示多件</desc>
</prop>
<prop>
<name>discount_type</name>
<type>String</type>
<level>Basic</level>
<desc>优惠类型，PRICE表示按价格优惠，DISCOUNT表示按折扣优惠</desc>
</prop>
<prop>
<name>discount_value</name>
<type>String</type>
<level>Basic</level>
<desc>优惠额度</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠结束日期</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字ID</desc>
</prop>
<prop>
<name>promotion_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠描述</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠ID</desc>
</prop>
<prop>
<name>promotion_title</name>
<type>String</type>
<level>Basic</level>
<desc>优惠标题，显示在宝贝详情页面的优惠图标的tip。</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠开始日期</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>优惠策略状态，ACTIVE表示有效，UNACTIVE表示无效</desc>
</prop>
<prop>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>对应的人群标签ID</desc>
</prop>
</props>
</struct>
<struct>
<name>UserTag</name>
<desc>人群标签</desc>
<props>
<prop>
<name>create_date</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>标签描述</desc>
</prop>
<prop>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>标签ID</desc>
</prop>
<prop>
<name>tag_name</name>
<type>String</type>
<level>Basic</level>
<desc>标签名称</desc>
</prop>
</props>
</struct>
</structs>
<apis>
<api>
<name>taobao.user.get</name>
<desc>得到单个用户</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>User</optional>
<desc>需返回的字段列表。可选值：User结构体中的所有字段；以半角逗号(,)分隔。不支持：地址，真实姓名，身份证，手机，电话</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>用户昵称，如果昵称为中文，请使用UTF-8字符集对昵称进行URL编码。
&lt;br&gt;&lt;font color="red"&gt;注：在传入session的情况下,可以不传nick，表示取当前用户信息；否则nick必须传.&lt;br&gt;
自用型应用不需要传入nick
&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>user</name>
<type>User</type>
<level>Object</level>
<desc>用户信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.users.get</name>
<desc>传入多个淘宝会员帐号返回多个用户公开信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>User</optional>
<desc>查询字段：User数据结构的公开信息字段列表，以半角逗号(,)分隔</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>required</required>
<desc>用户昵称，多个以半角逗号(,)分隔，最多40个</desc>
</param>
</request>
<response>
<param>
<name>users</name>
<type>User</type>
<level>Object Array</level>
<desc>用户信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemcats.authorize.get</name>
<desc>查询B商家被授权品牌列表、类目列表和 c 商家新品类目列表</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>brand.vid, brand.name,item_cat.cid, item_cat.name, item_cat.status,item_cat.sort_order,item_cat.parent_cid,item_cat.is_parent, xinpin_item_cat.cid,  xinpin_item_cat.name,  xinpin_item_cat.status, xinpin_item_cat.sort_order, xinpin_item_cat.parent_cid, xinpin_item_cat.is_parent</optional>
<desc>需要返回的字段。目前支持有： 
brand.vid, brand.name,  
item_cat.cid, item_cat.name, item_cat.status,item_cat.sort_order,item_cat.parent_cid,item_cat.is_parent, 
xinpin_item_cat.cid,  
xinpin_item_cat.name,  
xinpin_item_cat.status, 
xinpin_item_cat.sort_order, 
xinpin_item_cat.parent_cid, 
xinpin_item_cat.is_parent</desc>
</param>
</request>
<response>
<param>
<name>seller_authorize</name>
<type>SellerAuthorize</type>
<level>Object</level>
<desc>里面有3个数组： 
Brand[]品牌列表, 
ItemCat[] 类目列表 
XinpinItemCat[] 针对于C卖家新品类目列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemcats.get</name>
<desc>获取后台供卖家发布商品的标准商品类目</desc>
<request>
<param>
<name>cids</name>
<type>Number</type>
<required>special</required>
<max_list_size>1000</max_list_size>
<desc>商品所属类目ID列表，用半角逗号(,)分隔 例如:(18957,19562,) (cids、parent_cid至少传一个)</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>ItemCat</optional>
<default>cid,parent_cid,name,is_parent</default>
<desc>需要返回的字段列表，见ItemCat，默认返回：cid,parent_cid,name,is_parent</desc>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<required>special</required>
<desc>父商品类目 id，0表示根节点, 传输该参数返回所有子类目。 (cids、parent_cid至少传一个)</desc>
</param>
</request>
<response>
<param>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>增量类目信息,根据fields传入的参数返回相应的结果</desc>
</param>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间(如果取增量，会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemprops.get</name>
<desc>通过设置必要的参数，来获取商品后台标准类目属性，以及这些属性里面详细的属性值prop_values。</desc>
<request>
<param>
<name>child_path</name>
<type>String</type>
<required>optional</required>
<desc>类目子属性路径,由该子属性上层的类目属性和类目属性值组成,格式pid:vid;pid:vid.取类目子属性需要传child_path,cid</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>叶子类目ID，如果只传cid，则只返回一级属性,通过taobao.itemcats.get获得叶子类目ID</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>ItemProp</optional>
<default>pid, name, must, multi, prop_values</default>
<desc>需要返回的字段列表，见：ItemProp，默认返回：pid, name, must, multi, prop_values</desc>
</param>
<param>
<name>is_color_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否颜色属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
</param>
<param>
<name>is_enum_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否枚举属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)。如果返回true，属性值是下拉框选择输入，如果返回false，属性值是用户自行手工输入。</desc>
</param>
<param>
<name>is_input_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
</param>
<param>
<name>is_item_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否商品属性，这个属性只能放于发布商品时使用。可选值:true(是),false(否)</desc>
</param>
<param>
<name>is_key_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
</param>
<param>
<name>is_sale_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
</param>
<param>
<name>parent_pid</name>
<type>Number</type>
<required>optional</required>
<desc>父属性ID</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>optional</required>
<desc>属性id (取类目属性时，传pid，不用同时传PID和parent_pid)</desc>
</param>
</request>
<response>
<param>
<name>item_props</name>
<type>ItemProp</type>
<level>Object Array</level>
<desc>类目属性信息(如果是取全量或者增量，不包括属性值),根据fields传入的参数返回相应的结果</desc>
</param>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间(只有取全量或增量的时候会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.itempropvalues.get</name>
<desc>传入类目ID,必需是叶子类目，通过taobao.itemcats.get获取类目ID 
返回字段目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order 
作用:获取标准类目属性值</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>叶子类目ID ,通过taobao.itemcats.get获得叶子类目ID</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>cid,pid,prop_name,vid,name,name_alias,status,sort_order</optional>
<desc>需要返回的字段。目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order</desc>
</param>
<param>
<name>pvs</name>
<type>String</type>
<required>special</required>
<desc>属性和属性值 id串，格式例如(pid1;pid2)或(pid1:vid1;pid2:vid2)或(pid1;pid2:vid2)</desc>
</param>
</request>
<response>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<desc>属性值,根据fields传入的参数返回相应的结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.shopcats.list.get</name>
<desc>获取淘宝面向买家的浏览导航类目（跟后台卖家商品管理的类目有差异）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>ShopCat</optional>
<default>cid,parent_cid,name,is_parent</default>
<desc>需要返回的字段列表，见ShopCat，默认返回：cid,parent_cid,name,is_parent</desc>
</param>
</request>
<response>
<param>
<name>shop_cats</name>
<type>ShopCat</type>
<level>Object Array</level>
<desc>店铺类目列表信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.aftersale.get</name>
<desc>查询用户设置的售后服务模板，仅返回标题和id</desc>
<response>
<param>
<name>after_sales</name>
<type>AfterSale</type>
<level>Object Array</level>
<desc>售后服务返回对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.add</name>
<desc>此接口用于新增一个商品  
商品所属的卖家是当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则新增商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
商品的运费承担方式和邮费设置有相关性，卖家承担运费不用设置邮费，买家承担运费需要设置邮费  
当关键属性值选择了“其他”的时候，需要输入input_pids和input_str商品才能添加成功。</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： 
no_mark(不做类型标记) 
time_card(点卡软件代充) 
fee_card(话费软件代充)</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>叶子类目id</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>此为货到付款运费模板的ID，对应的JAVA类型是long,如果COD卖家应用了货到付款运费模板，此值要进行设置。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);默认值:seller。卖家承担不用设置邮费和postage_id.买家承担的时候，必填邮费和postage_id  
如果用户设置了运费模板会优先使用运费模板，否则要同步设置邮费（post_fee,express_fee,ems_fee）</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;默认值:false(不保修)</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品主图片。类型:JPG,GIF;最大长度:500K</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价幅度。如果为0，代表系统代理幅度</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:add-xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置该参数值或设置为false效果一致。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的字符集。繁体传入"zh_HK"，简体传入"zh_CN"，不传默认为简体</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>required</required>
<desc>所在地城市。如杭州 。可以通过http://dl.open.taobao.com/sdk/商品城市列表.rar查询</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>required</required>
<desc>所在地省份。如浙江，具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar  取到</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，该字段的最大长度是512个字节</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分. 注:post_fee,express_fee,ems_fee需要一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.delivery.template.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<max_length>511</max_length>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1 ，其中：pid是属性id vid是属性值id。总长度不超过511字节</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>商品所属的店铺类目列表。按逗号分隔。结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… 
sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid,多个sku之间用逗号分隔。该字段内的销售属性（自定义的除外）也需要在props字段填写。sku的销售属性需要一同选取，如:颜色，尺寸。如果新增商品包含了sku，则此字段一定要传入。这个字段的长度要控制在512个字节以内。 
如果有自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>Sku的数量串，结构如：num1,num2,num3 如：2,3</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>required</required>
<desc>新旧程度。可选值：new(新)，second(二手)，unused(闲置)。B商家不能发布二手商品。 
如果是二手商品，特定类目下属性里面必填新旧成色属性</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改
集市卖家默认拍下减库存;
商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>宝贝标题。不能超过60字符，受违禁词控制</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>发布类型。可选值:fixed(一口价),auction(拍卖)。B商家不能发布拍卖商品，而且拍卖商品是没有SKU的</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;默认值:14</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构,仅有numIid和created返回</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.delete</name>
<desc>删除单条商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被删除商品的相关信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.get</name>
<desc>获取单个商品的详细信息  
卖家未登录时只能获得这个商品的公开数据，卖家登录后可以获取商品的所有数据</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Item,item_imgs,item_imgs.ItemImg</optional>
<desc>需要返回的商品对象字段。可选值：Item商品结构体中所有字段均可返回；多个字段用“,”分隔。如果想返回整个子对象，那字段为item_img，如果是想返回子对象里面的字段，那字段为item_img.url。新增返回字段：second_kill（是否秒杀商品）、auto_fill（代充商品类型）,props_name（商品属性名称）</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>商品数字ID</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.img.delete</name>
<desc>删除itemimg_id 所指定的商品图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
itemimg_id对应的图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>商品图片ID</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.img.upload</name>
<desc>添加一张商品图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
如果更新图片需要设置itemimg_id，且该itemimg_id的图片记录需要属于传入的num_iid对应的商品。如果新增图片则不用设置  
商品图片有数量和大小上的限制，根据卖家享有的服务（如：卖家订购了多图服务等），商品图片数量限制不同。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>商品图片id(如果是更新图片，则需要传该参数)</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>商品图片内容类型:JPG,GIF;最大长度:500K 。支持的文件类型：gif,jpg,jpeg,png</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否将该图片设为主图,可选值:true,false;默认值:false(非主图)</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.joint.img</name>
<desc>* 关联一张商品图片到num_iid指定的商品中 
    * 传入的num_iid所对应的商品必须属于当前会话的用户 
    * 商品图片关联在卖家身份和图片来源上的限制，卖家要是B卖家或订购了多图服务才能关联图片，并且图片要来自于卖家自己的图片空间才行 
    * 商品图片数量有限制。不管是上传的图片还是关联的图片，他们的总数不能超过一定限额</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>商品图片id(如果是更新图片，则需要传该参数)</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>上传的图片是否关联为商品主图</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>required</required>
<desc>图片URL,图片空间图片的相对地址</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.joint.propimg</name>
<desc>* 关联一张商品属性图片到num_iid指定的商品中 
    * 传入的num_iid所对应的商品必须属于当前会话的用户 
    * 图片的属性必须要是颜色的属性，这个在前台显示的时候需要和sku进行关联的 
    * 商品图片关联在卖家身份和图片来源上的限制，卖家要是B卖家或订购了多图服务才能关联图片，并且图片要来自于卖家自己的图片空间才行 
    * 商品图片数量有限制。不管是上传的图片还是关联的图片，他们的总数不能超过一定限额，最多不能超过24张（每个颜色属性都有一张）</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>属性图片ID。如果是新增不需要填写</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>required</required>
<desc>图片地址</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>属性列表。调用taobao.itemprops.get.v2获取类目属性，属性必须是颜色属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid。</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>属性图片对象信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.price.update</name>
<desc>更新商品价格</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
no_mark(不做类型标记)  
time_card(点卡软件代充)  
fee_card(话费软件代充)</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>叶子类目id</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品图片。类型:JPG,GIF;最大长度:500k</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价幅度 如果为0，代表系统代理幅度</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记</desc>
</param>
<param>
<name>is_replace_sku</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否替换sku</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>上架时间。不论是更新架下的商品还是出售中的商品，如果这个字段小于当前时间则直接上架商品，并且上架的时间为更新商品的时间，此时item.is_timing为false，如果大于当前时间则宝贝会下架进入定时上架的宝贝中。</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在地城市。如杭州 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在地省份。如浙江 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.postages.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过512字节</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid。该字段内的销售属性也需要在props字段填写 。如果更新时有对Sku进行操作，则Sku的properties一定要传入。</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>宝贝标题. 不能超过60字符,受违禁词控制</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.propimg.delete</name>
<desc>删除propimg_id 所指定的商品属性图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
propimg_id对应的属性图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>商品属性图片ID</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>属性图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.propimg.upload</name>
<desc>添加一张商品属性图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
图片的属性必须要是颜色的属性，这个在前台显示的时候需要和sku进行关联的  
商品属性图片只有享有服务的卖家（如：淘宝大卖家、订购了淘宝多图服务的卖家）才能上传  
商品属性图片有数量和大小上的限制，最多不能超过24张（每个颜色属性都有一张）。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>属性图片ID。如果是新增不需要填写</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>属性图片内容。类型:JPG,GIF;最大长度:500K;图片大小不超过:1M</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片位置</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>属性列表。调用taobao.itemprops.get获取类目属性，属性必须是颜色属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid。</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>PropImg属性图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.quantity.update</name>
<desc>提供按照全量或增量形式修改宝贝/SKU库存的功能</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID，必填参数</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>SKU的商家编码，可选参数。如果不填则默认修改宝贝的库存，如果填了则按照商家编码搜索出对应的SKU并修改库存。当sku_id和本字段都填写时以sku_id为准搜索对应SKU</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<desc>库存修改值，必选。当全量更新库存时，quantity必须为大于等于0的正整数；当增量更新库存时，quantity为整数，可小于等于0。若增量更新时传入的库存为负数且绝对值大于当前实际库存，则库存改为0。比如当前实际库存为1，传入增量更新quantity=-5，库存改为0</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<desc>要操作的SKU的数字ID，可选。如果不填默认修改宝贝的库存，如果填上则修改该SKU的库存</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<desc>库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.recommend.add</name>
<desc>将当前用户指定商品设置为橱窗推荐状态 
橱窗推荐需要用户有剩余橱窗位才可以顺利执行 
这个Item所属卖家从传入的session中获取，需要session绑定 
需要判断橱窗推荐是否已满，橱窗推荐已满停止调用橱窗推荐接口，2010年1月底开放查询剩余橱窗推荐数后可以按数量橱窗推荐商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被推荐的商品的信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.recommend.delete</name>
<desc>取消当前用户指定商品的橱窗推荐状态 
这个Item所属卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被取消橱窗推荐的商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.add</name>
<desc>新增一个sku到num_iid指定的商品中  
传入的iid所对应的商品必须属于当前会话的用户</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户新增sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够添加成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>Sku的销售价格。商品的价格要在商品所有的sku的价格之间。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充。 
如果包含自定义属性则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的‘$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)。取值范围:大于零的整数</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.delete</name>
<desc>删除一个sku的数据 
需要删除的sku通过属性properties进行匹配查找</desc>
<request>
<param>
<name>item_num</name>
<type>Number</type>
<required>optional</required>
<desc>sku所属商品的数量,大于0的整数。当用户删除sku，使商品数量不等于sku数量之和时候，用于修改商品的数量，使sku能够删除成功。特别是删除最后一个sku的时候，一定要设置商品数量到正常的值，否则删除失败</desc>
</param>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户删除sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够删除成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>Sku结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.get</name>
<desc>获取sku_id所对应的sku数据  
sku_id对应的sku要属于传入的nick对应的卖家</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Sku</optional>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>卖家nick(num_iid和nick必传一个)</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>special</required>
<min_value>0</min_value>
<desc>商品的数字IID（num_iid和nick必传一个，推荐用num_iid）</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>required</required>
<desc>Sku的id。可以通过taobao.item.get得到</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>Sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.price.update</name>
<desc>更新商品SKU的价格</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>商品SKU信息（只包含num_iid和modified）</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.update</name>
<desc>*更新一个sku的数据  
*需要更新的sku通过属性properties进行匹配查找  
*商品的数量和价格必须大于等于0  
*sku记录会更新到指定的num_iid对应的商品中  
*num_iid对应的商品必须属于当前的会话用户</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充。 
如果包含自定义属性，则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>商品Sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.skus.get</name>
<desc>* 获取多个商品下的所有sku</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Sku</optional>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<required>required</required>
<desc>sku所属商品数字id，必选。num_iid个数不能超过40个</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>Sku列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.templates.get</name>
<desc>查询当前登录用户的店铺的宝贝详情页的模板名称</desc>
<response>
<param>
<name>item_template_list</name>
<type>ItemTemplate</type>
<level>Object Array</level>
<desc>返回宝贝模板对象。包含模板id，模板name，还有模板的类别（0表示外店，1表示内店）</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update</name>
<desc>根据传入的num_iid更新对应的商品的数据  
传入的num_iid所对应的商品必须属于当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则更新商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
当关键属性值更新为“其他”的时候，需要输入input_pids和input_str商品才能更新成功。该接口不支持产品属性修改。</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
no_mark(不做类型标记)  
time_card(点卡软件代充)  
fee_card(话费软件代充)</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>叶子类目id</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品图片。类型:JPG,GIF;最大长度:500k</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价幅度 如果为0，代表系统代理幅度</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记</desc>
</param>
<param>
<name>is_replace_sku</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否替换sku</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>上架时间。不论是更新架下的商品还是出售中的商品，如果这个字段小于当前时间则直接上架商品，并且上架的时间为更新商品的时间，此时item.is_timing为false，如果大于当前时间则宝贝会下架进入定时上架的宝贝中。</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在地城市。如杭州 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在地省份。如浙江 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.postages.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过512字节</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid,多个sku之间用逗号分隔。该字段内的销售属性(自定义的除外)也需要在props字段填写 . 规则：如果该SKU存在旧商品，则修改；否则新增Sku。如果更新时有对Sku进行操作，则Sku的properties一定要传入。如果存在自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText，其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改
集市卖家默认拍下减库存;
商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>宝贝标题. 不能超过60字符,受违禁词控制</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update.delisting</name>
<desc>* 单个商品下架 
    * 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>返回商品更新信息：返回的结果是:num_iid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update.listing</name>
<desc>* 单个商品上架 
* 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>需要上架的商品的数量。取值范围:大于零的整数。如果商品有sku，则上架数量默认为所有sku数量总和，不可修改。否则商品数量根据设置数量调整为num</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>上架后返回的商品信息：返回的结果就是:num_iid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.custom.get</name>
<desc>跟据卖家设定的商品外部id获取商品  
这个商品对应卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Item,item_imgs,item_imgs.ItemImg</optional>
<desc>需返回的字段列表。可选值：Item商品结构体中的所有字段；多个字段之间用“,”分隔。如果想返回整个子对象，那字段为item_img，如果是想返回子对象里面的字段，那字段为item_img.url。新增返回字段：one_station标记商品是否淘1站商品</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>required</required>
<desc>商品的外部商品ID</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>商品列表，具体返回字段以fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.get</name>
<desc>根据传入的搜索条件，获取商品列表（类似于淘宝页面上的商品搜索功能，但是只有搜索到的商品列表，不包含商品的ItemCategory列表）  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取  
如果只输入fields其他条件都不输入，系统会因为搜索条件不足而报错。 
不能通过设置cid=0来查询。</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<min_value>0</min_value>
<desc>商品所属类目Id,ItemCat中的cid字段。可以通过taobao.itemcats.get取到</desc>
</param>
<param>
<name>end_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品最高价格。单位:元。正整数，取值范围:0-100000000</desc>
</param>
<param>
<name>end_score</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品所属卖家的最大信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须小于等于设置的end_score</desc>
</param>
<param>
<name>end_volume</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品最近成交量最大值，设置此条件表示搜索结果里的商品，最近成交量必须小于等于设置的end_volume</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>num_iid,title,nick,pic_url,cid,price,type,delist_time,post_fee,volume,score,location,location.city,location.state</optional>
<desc>需返回的商品结构字段列表。可选值为Item中的以下字段：num_iid,title,nick,pic_url,cid,price,type,delist_time,post_fee;多个字段用“,”分隔。如：num_iid,title。新增字段score(卖家信用等级数),volume(最近成交量),location（卖家地址，可以分别获取location.city,location.state）,num_iid商品数字id。此接口返回的post_fee是快递费用，volume对应搜索商品列表页的最近成交量</desc>
</param>
<param>
<name>genuine_security</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否正品保障商品(既是如实描述，又是7天无理由退换货的商品，设置了这个属性时：is_prepay和promoted_service不能再行设置)，设置为true表示该商品是正品保障的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D淘宝的商品,置为false或为空表示不对是否3D商品进行判断</desc>
</param>
<param>
<name>is_cod</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否支持货到付款，设置为true表示支持货到付款，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>is_mall</name>
<type>Boolean</type>
<required>optional</required>
<desc>表示是否搜索商城的商品这一搜索条件。 
值含义：true：搜索商城商品，false：搜素集市商品，若为null，则搜索全部的商品（默认值）</desc>
</param>
<param>
<name>is_prepay</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否如实描述(即:先行赔付)商品，设置为true表示该商品是如实描述的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>表示是否新品这一搜索条件。 
值含义：true-是新品，false-无限制，null-无限制</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在市。如：杭州。具体可以根据taobao.areas.get取到</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在省。如：浙江。具体可以根据taobao.areas.get 取到</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>special</required>
<desc>卖家昵称列表。多个之间以“,”分隔;最多支持5个卖家昵称。如：nick1,nick2,nick3</desc>
</param>
<param>
<name>one_station</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否淘1站代购商品，设置为true表示淘1站商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc,column可选值为: price（价格）, delist_time（下架时间）, seller_credit（卖家信用）,popularity(人气)。如按价格升序排列表示为：price:asc。新增排序字段：volume（最近成交量）</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过10240,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40</desc>
</param>
<param>
<name>post_free</name>
<type>Boolean</type>
<required>optional</required>
<desc>免运费（不设置包含所有邮费状态，设置为true结果只有卖家包邮的商品）。不能单独使用，要和其他条件一起用才行</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<min_value>0</min_value>
<desc>可以根据产品Id搜索属于这个spu的商品。这个字段可以通过查询 taobao.products.get 取到</desc>
</param>
<param>
<name>promoted_service</name>
<type>String</type>
<required>optional</required>
<desc>是否提供保障服务的商品。可选入参有：2、4。设置为2表示该商品是“假一赔三”的商品，设置为4表示该商品是“7天无理由退换货”的商品</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>商品属性。可以搜到拥有和输入的属性一样的商品列表。字段格式为：pid1:vid1;pid2:vid2.属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>special</required>
<desc>搜索字段。 用来搜索商品的title以及商品所对应的产品的title</desc>
</param>
<param>
<name>start_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品最低价格。单位:元。正整数，取值范围:0-100000000。</desc>
</param>
<param>
<name>start_score</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品所属卖家的最小信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须大于等于设置的start_score。</desc>
</param>
<param>
<name>start_volume</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品最近成交量最小值，设置此条件表示搜索结果里的商品，最近成交量必须大于等于设置的start_volume。</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品的新旧状态。可选入参有：new、second、unused 。设置为new表示该商品是全新的商品，设置为second表示该商品是二手的商品，设置为unused表示该商品是闲置的商品</desc>
</param>
<param>
<name>ww_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>旺旺在线状态（不设置结果包含所有状态，设置为true结果只有旺旺在线卖家的商品）。不能单独使用，要和其他条件一起用才行</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>搜索到的商品列表，具体字段根据权限和设定的fields决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.inventory.get</name>
<desc>获取当前用户作为卖家的仓库中的商品列表，并能根据传入的搜索条件对仓库中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>banner</name>
<type>String</type>
<required>optional</required>
<desc>分类字段。可选值: 
 
regular_shelved(定时上架) 
never_on_shelf(从未上架) 
sold_out(全部卖完) 
off_shelf(我下架的) 
for_shelved(等待所有上架) 
violation_off_shelf(违规下架的) 
默认查询的是for_shelved(等待所有上架)这个状态的商品</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>商品结束修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru,list_time,price,has_discount,has_invoice,has_warranty,has_showcase,modified,delist_time,postage_id,seller_cids,outer_id</optional>
<desc>需返回的字段列表。可选值：Item商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru, 

list_time,price,has_discount,has_invoice,has_warranty,has_showcase, 

modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。 

不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在外部网店显示</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在淘宝显示</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间);默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零小于等于101的整数;默认值为1，即返回第一页数据。当页码超过101页时系统就会报错，故请大家在用此接口获取数据时尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>optional</required>
<desc>搜索字段。搜索商品的title。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>32</max_list_size>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>商品起始修改时间</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>搜索到底商品列表，具体字段根据设定的fields决定，不包括desc,stuff_status字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.list.get</name>
<desc>查看非公开属性时需要用户登录</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Item,item_imgs,item_imgs.ItemImg</optional>
<desc>需要返回的商品对象字段。可选值：Item商品结构体中所有字段均可返回；多个字段用“,”分隔。如果想返回整个子对象，那字段为itemimg，如果是想返回子对象里面的字段，那字段为itemimg.url。</desc>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<required>required</required>
<desc>商品数字id列表，多个num_iid用逗号隔开，一次不超过20个。</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.onsale.get</name>
<desc>获取当前用户作为卖家的出售中的商品列表，并能根据传入的搜索条件对出售中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>结束的修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru,list_time,price,has_discount,has_invoice,has_warranty,has_showcase,modified,delist_time,postage_id,seller_cids,outer_id</optional>
<desc>需返回的字段列表。可选值：Item商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru,list_time,price,has_discount,has_invoice,has_warranty,has_showcase,modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。
不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否橱窗推荐。 可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在外部网店显示</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在淘宝显示</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间);默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过10万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过10万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>optional</required>
<desc>搜索字段。搜索商品的title。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>32</max_list_size>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>起始的修改时间</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>搜索到的商品列表，具体字段根据设定的fields决定，不包括desc字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.search</name>
<desc>* 根据传入的搜索条件，获取商品列表和商品类目信息ItemCategory列表（类似于淘宝页面上的商品搜索功能，与 taobao.items.get的区别在于：这个方法得到的结果既有商品列表，又有类目信息列表） 
    * 商品列表里只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取 
    * 商品类目信息列表里只包含类目id和该类目下商品的数量 
    * 不能通过设置cid=0来查询</desc>
<request>
<param>
<name>auction_flag</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为虚拟商品 
true：是虚拟商品 
false：不是虚拟商品</desc>
</param>
<param>
<name>auto_post</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为自动发货 
true：自动发货 
false：非自动发货</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<min_value>0</min_value>
<desc>商品所属类目Id。ItemCat中的cid。 可以通过taobao.itemcats.get取到</desc>
</param>
<param>
<name>end_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品最高价格。单位:元。正整数，取值范围:0-100000000</desc>
</param>
<param>
<name>end_score</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品所属卖家的最大信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须小于等于设置的end_score</desc>
</param>
<param>
<name>end_volume</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品30天内最大销售数，设置此条件表示搜索结果里的商品，最近成交量必须小于等于设置的end_volume</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>num_iid,title,nick,pic_url,cid,price,type,delist_time,post_fee,location,location.city,location.state,score,volume,has_discount, num, is_prepay, promoted_service, ww_status, list_time</optional>
<desc>需返回的商品结构字段列表。可选值为Item中的以下字段：num_iid,title,nick,pic_url,cid,price,type,delist_time,post_fee；多个字段之间用“,” 分隔。如：num_iid,title。新增字段location（卖家地址，可以分别获取location.city,location.state）；score(卖家信用等级数),volume(最近成交量)
新增字段：has_discount, num, is_prepay, promoted_service, ww_status, list_time</desc>
</param>
<param>
<name>genuine_security</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否正品保障商品(既是如实描述，又是7天无理由退换货的商品，设置了这个属性时：is_prepay和promoted_service不能再行设置)，设置为true表示该商品是正品保障的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否对会员打折</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D淘宝的商品,置为false或为空表示不对是否3D商品进行判断</desc>
</param>
<param>
<name>is_cod</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否支持货到付款，设置为true表示支持货到付款，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>is_mall</name>
<type>Boolean</type>
<required>optional</required>
<desc>表示是否搜索商城的商品这一搜索条件。 值含义：true：搜索商城商品，false：搜素集市商品，若为null，则搜索全部的商品（默认值）</desc>
</param>
<param>
<name>is_prepay</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否如实描述(即:先行赔付)商品，设置为true表示该商品是如实描述的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>表示是否新品这一搜索条件。 值含义：true-是新品，false-无限制，不输入(null)-无限制</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在市。如：杭州</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在省。如：浙江</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>special</required>
<desc>卖家昵称列表。多个之间用“,”分隔；最多支持5个卖家昵称。如:nick1,nick2,nick3。</desc>
</param>
<param>
<name>one_station</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否淘1站代购商品，设置为true表示淘1站商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc,column可选值为: price, delist_time, seller_credit；如按价格升序排列表示为：price:asc。新增排序字段：volume（最近成交量）；新增排序字段：popularity(商品的人气值)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过10240,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40</desc>
</param>
<param>
<name>post_free</name>
<type>Boolean</type>
<required>optional</required>
<desc>免运费（不设置或设置为false为包含所有邮费状态，设置为true结果只有卖家包邮的商品）不能单独使用，要和其他条件一起用才行。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<min_value>0</min_value>
<desc>可以根据产品Id搜索属于这个spu的商品。这个字段可以通过查询 taobao.products.get 取到</desc>
</param>
<param>
<name>promoted_service</name>
<type>String</type>
<required>optional</required>
<desc>是否提供保障服务的商品。可选入参有：2、4。设置为2表示该商品是“假一赔三”的商品，设置为4表示该商品是“7天无理由退换货”的商品</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>商品属性。商品属性。可以搜到拥有和输入属性一样的商品列表。字段格式为：pid1:vid1;pid2:vid2.属性的pid调用 taobao.itemprops.get.v2取得，属性值的vid用taobao.itempropvalues.get取得vid。</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>special</required>
<desc>搜索字段。 用来搜索商品的title以及对应产品的title。</desc>
</param>
<param>
<name>start_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品最低价格。单位:元。正整数，取值范围:0-100000000。</desc>
</param>
<param>
<name>start_score</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品所属卖家的最小信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须大于等于设置的 start_score。</desc>
</param>
<param>
<name>start_volume</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品30天内最小销售数，设置此条件表示搜索结果里的商品，最近成交量必须大于等于设置的start_volume。</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品的新旧状态。可选入参有：new、second、unused 。设置为new表示该商品是全新的商品，设置为second表示该商品是二手的商品，设置为unused表示该商品是闲置的商品</desc>
</param>
<param>
<name>ww_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>旺旺在线状态（不设置结果包含所有状态，设置为true结果只有旺旺在线卖家的商品）不能单独使用，要和其他条件一起用才行。</desc>
</param>
</request>
<response>
<param>
<name>item_search</name>
<type>ItemSearch</type>
<level>Object</level>
<desc>搜索到的商品，具体字段根据权限和设定的fields决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.add</name>
<desc>获取类目ID，必需是叶子类目ID；调用taobao.itemcats.get.v2获取  
传入关键属性,结构:pid:vid;pid:vid.调用taobao.itemprops.get.v2获取pid, 
调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props.</desc>
<request>
<param>
<name>binds</name>
<type>String</type>
<required>optional</required>
<max_length>512</max_length>
<desc>非关键属性结构:pid:vid;pid:vid.非关键属性不包含关键属性、销售属性、用户自定义属性、商品属性;调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid.&lt;br&gt;&lt;font color=red&gt;注:支持最大长度为512字节&lt;/font&gt;</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>商品类目ID.调用taobao.itemcats.get获取;注意:必须是叶子类目 id.</desc>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<required>special</required>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2，如果有型号，系列,货号等用: 隔开 例如：“20000:优衣库:型号:001:632501:1234”，表示“品牌:优衣库:型号:001:货号:1234”</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述.最大25000个字节</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>产品主图片.最大1M,目前仅支持GIF,JPG.</desc>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是不是主图</desc>
</param>
<param>
<name>market_time</name>
<type>Date</type>
<required>optional</required>
<desc>上市时间。目前只支持鞋城类目传入此参数</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>产品名称,最大60个字节.</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>外部产品ID</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>required</required>
<desc>产品市场价.精确到2位小数;单位为元.如：200.07</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。只有少数销售属性值支持传入别名，比如颜色和尺寸</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>关键属性 结构:pid:vid;pid:vid.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props.</desc>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<required>optional</required>
<desc>销售属性结构:pid:vid;pid:vid.调用taobao.itemprops.get获取is_sale_prop＝true的pid,调用taobao.itempropvalues.get获取vid.</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>产品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.get</name>
<desc>两种方式查看一个产品详细信息:  
传入product_id来查询  
传入cid和props来查询</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>商品类目id.调用taobao.itemcats.get获取;必须是叶子类目id,如果没有传product_id,那么cid和props必须要传.</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Product</optional>
<desc>需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔.</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<desc>Product的id.两种方式来查看一个产品:1.传入product_id来查询 2.传入cid和props来查询</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>比如:诺基亚N73这个产品的关键属性列表就是:品牌:诺基亚;型号:N73,对应的PV值就是10005:10027;10006:29729.</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.img.delete</name>
<desc>1.传入非主图ID  
2.传入产品ID  
删除产品非主图</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>非主图ID</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id,通过taobao.product.add接口新增产品的时候会返回id.</desc>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<desc>返回productimg中的：id,product_id</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.img.upload</name>
<desc>1.传入产品ID  
2.传入图片内容  
注意：图片最大为500K,只支持JPG,GIF格式,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>产品图片ID.修改图片时需要传入</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>图片内容.图片最大为500K,只支持JPG,GIF格式.</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否将该图片设为主图.可选值:true,false;默认值:false.</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id</desc>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<desc>返回产品图片结构中的：url,id,created,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.propimg.delete</name>
<desc>1.传入属性图片ID  
2.传入产品ID  
删除一个产品的属性图片</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>属性图片ID</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id.</desc>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<desc>返回product_prop_img数据结构中的：product_id,id</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.propimg.upload</name>
<desc>传入产品ID  
传入props,目前仅支持颜色属性.调用taobao.itemprops.get.v2取得颜色属性pid, 
再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;  
传入图片内容  
注意：图片最大为2M,只支持JPG,GIF,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>产品属性图片ID</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>图片内容.图片最大为2M,只支持JPG,GIF.</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>required</required>
<desc>属性串.目前仅支持颜色属性.调用taobao.itemprops.get获取类目属性,取得颜色属性pid,再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;</desc>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<desc>支持返回产品属性图片中的：url,id,created,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.update</name>
<desc>传入产品ID  
可修改字段：outer_id,binds,sale_props,name,price,desc,image  
注意：1.可以修改主图,不能修改子图片,主图最大500K,目前仅支持GIF,JPG 
      2.商城卖家产品发布24小时后不能作删除或修改操作</desc>
<request>
<param>
<name>binds</name>
<type>String</type>
<required>optional</required>
<desc>非关键属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述.最大25000个字节</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>产品主图.最大500K,目前仅支持GIF,JPG</desc>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是主图</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>产品名称.最大60个字节</desc>
</param>
<param>
<name>native_unkeyprops</name>
<type>String</type>
<required>optional</required>
<desc>自定义非关键属性</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>外部产品ID</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>optional</required>
<desc>产品市场价.精确到2位小数;单位为元.如:200.07</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<required>optional</required>
<desc>销售属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>返回product数据结构中的：product_id,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.products.get</name>
<desc>根据淘宝会员帐号搜索所有产品信息  
注意：支持分页，每页最多返回100条,默认值为40,页码从1开始，默认为第一页</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Product</optional>
<desc>需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值为40</desc>
</param>
</request>
<response>
<param>
<name>products</name>
<type>Product</type>
<level>Object Array</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.products.search</name>
<desc>两种方式搜索所有产品信息(二种至少传一种):  
传入关键字q搜索  
传入cid和props搜索  
返回值支持:product_id,name,pic_path,cid,props,price,tsc 
当用户指定了cid并且cid为垂直市场（3C电器城、鞋城）的类目id时，默认只返回小二确认的产品。如果用户没有指定cid，或cid为普通的类目，默认返回商家确认或小二确认的产品。如果用户自定了status字段，以指定的status类型为准</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>商品类目ID.调用taobao.itemcats.get获取.</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>product_id,name,pic_url,cid,props,price,tsc,status</optional>
<desc>需返回的字段列表.可选值:Product数据结构中的以下字段:product_id,name,pic_url,cid,props,price,tsc;多个字段之间用","分隔.新增字段status(product的当前状态)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值为40.</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>属性,属性值的组合.格式:pid:vid;pid:vid;调用taobao.itemprops.get获取类目属性pid  
,再用taobao.itempropvalues.get取得vid.</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>special</required>
<desc>搜索的关键词是用来搜索产品的title.　注:q,cid和props至少传入一个</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>想要获取的产品的状态列表，支持多个状态并列获取，多个状态之间用","分隔，最多同时指定5种状态。例如，只获取小二确认的spu传入"3",只要商家确认的传入"0"，既要小二确认又要商家确认的传入"0,3"。目前只支持者两种类型的状态搜索，输入其他状态无效。</desc>
</param>
<param>
<name>vertical_market</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>传入值为：3表示3C表示3C垂直市场产品，4表示鞋城垂直市场产品，8表示网游垂直市场产品。一次只能指定一种垂直市场类型</desc>
</param>
</request>
<response>
<param>
<name>products</name>
<type>Product</type>
<level>Object Array</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.skus.custom.get</name>
<desc>跟据卖家设定的Sku的外部id获取商品，如果一个outer_id对应多个Sku会返回所有符合条件的sku  
这个Sku所属卖家从传入的session中获取，需要session绑定(注：iid标签里是num_iid的值，可以用作num_iid使用)</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Sku</optional>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”隔开</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>required</required>
<desc>Sku的外部商家ID</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>Sku对象，具体字段以fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.promotion.get</name>
<desc>商品优惠详情查询，可查询商品设置的详细优惠。包括限时折扣，满就送等官方优惠以及第三方优惠。</desc>
<request>
<param>
<name>channel_key</name>
<type>String</type>
<required>optional</required>
<desc>渠道来源，第三方站点</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id</desc>
</param>
</request>
<response>
<param>
<name>promotions</name>
<type>PromotionDisplayTop</type>
<level>Object</level>
<desc>优惠详细信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.trades.fullinfo.get</name>
<desc>提供异步批量获取订单详情功能&lt;br/&gt; 
1. 一次可以查询的订单数量为1~100笔，强烈建议一次请求尽可能多的订单&lt;br/&gt; 
2. 提交任务后会生成task_id，后继通过此task_id调用taobao.topats.result.get接口获取任务的结果&lt;br/&gt; 
3. 如果订阅了Comet长连接推送方式，则直接通过Comet推送到长连接客户端&lt;br/&gt; 
4. 这个任务ID有效时间为2天。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>seller_nick, buyer_nick, title, type, created, tid, seller_rate,buyer_flag, buyer_rate, status, payment, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no,alipay_id,buyer_message, pic_path, num_iid, num, price, buyer_alipay_no, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag, seller_alipay_no, seller_mobile, seller_phone, seller_name, seller_email, available_confirm_fee, has_post_fee, timeout_action_time, snapshot_url, cod_fee, cod_status, shipping_type, trade_memo, is_3D,buyer_email,buyer_area, trade_from,is_lgtype,is_force_wlb,is_brand_sale,buyer_cod_fee,discount_fee,seller_cod_fee,express_agency_fee,invoice_name,service_orders,orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.snapshot_url, orders.timeout_action_time，orders.sku_properties_name, orders.item_meal_name, orders.item_meal_id，item_memo,orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.is_oversold,orders,promotion_details,invoice_name</optional>
<desc>可以返回taobao.trade.fullinfo.get允许的所有字段。</desc>
</param>
<param>
<name>tids</name>
<type>String</type>
<required>required</required>
<desc>交易订单号tid列表，多个tid之间用半角分号分隔。tid个数的取值范围是：1~100个。由于这个接口限制每个应用的调用量是1万次/天，所以强烈建议采用尽可能多的tid，以取到更多的交易数据。</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.amount.get</name>
<desc>卖家查询该笔交易订单的资金帐务相关的数据； 
1. 只供卖家使用，买家不可使用 
2. 可查询所有的状态的订单，但不同状态时订单的相关数据可能会有不同</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>tid,alipay_no,created,pay_time,end_time,total_fee,payment,post_fee,cod_fee,commission_fee,buyer_obtain_point_fee,order_amounts.oid,order_amounts.title,order_amounts.num_iid,order_amounts.sku_properties_name,order_amounts.sku_id,order_amounts.num,order_amounts.price,order_amounts.discount_fee,order_amounts.adjust_fee,order_amounts.payment,order_amounts.promotion_name,order_amounts, promotion_details</optional>
<desc>订单帐务详情需要返回的字段信息，可选值如下： 
1. TradeAmount中可指定的fields： 
tid,alipay_no,created,pay_time,end_time,total_fee,payment,post_fee,cod_fee,commission_fee,buyer_obtain_point_fee 
2. OrderAmount中可指定的fields：order_amounts.oid,order_amounts.title,order_amounts.num_iid, 
order_amounts.sku_properties_name,order_amounts.sku_id,order_amounts.num,order_amounts.price,order_amounts.discount_fee,order_amounts.adjust_fee,order_amounts.payment,order_amounts.promotion_name 
3. order_amounts(返回OrderAmount的所有内容) 
4. promotion_details(指定该值会返回主订单的promotion_details中除id之外的所有字段)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>-9223372036854775808</min_value>
<desc>订单交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade_amount</name>
<type>TradeAmount</type>
<level>Object</level>
<desc>主订单的财务信息详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.close</name>
<desc>关闭一笔订单，可以是主订单或子订单。当订单从创建到关闭时间小于10s的时候，会报“CLOSE_TRADE_TOO_FAST”错误。</desc>
<request>
<param>
<name>close_reason</name>
<type>String</type>
<required>required</required>
<desc>交易关闭原因。
可以选择的理由有：
1、买家不想买了
2、信息填写错误，重新拍
3、卖家缺货
4、同城见面交易
5、其他原因
注：尽量不要传入自定义的关闭理由</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单或子订单编号。</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>关闭交易时返回的Trade信息，可用字段有tid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.confirmfee.get</name>
<desc>获取交易确认收货费用 
可以获取主订单或子订单的确认收货费用</desc>
<request>
<param>
<name>is_detail</name>
<type>String</type>
<required>required</required>
<desc>是否是子订单。可选值:IS_FATHER(父订单),IS_CHILD(子订单)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号，或子订单编号</desc>
</param>
</request>
<response>
<param>
<name>trade_confirm_fee</name>
<type>TradeConfirmFee</type>
<level>Object</level>
<desc>获取到的交易确认收货费用</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.fullinfo.get</name>
<desc>获取单笔交易的详细信息 
1.只有在交易成功的状态下才能取到交易佣金，其它状态下取到的都是零或空值  
2.只有单笔订单的情况下Trade数据结构中才包含商品相关的信息  
3.获取到的Order中的payment字段在单笔子订单时包含物流费用，多笔子订单时不包含物流费用  
注：包含以下字段的返回会增加TOP的后台压力，请仅在确实需要的情况下才去获取：commission_fee, buyer_alipay_no, seller_alipay_no, buyer_email, seller_mobile, seller_phone, seller_name, seller_email, timeout_action_time, item_memo, trade_memo, title, available_confirm_fee</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>seller_nick, buyer_nick, title, type, created, tid, seller_rate,buyer_flag, buyer_rate, status, payment, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no,alipay_id,buyer_message, pic_path, num_iid, num, price, buyer_alipay_no, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag, seller_alipay_no, seller_mobile, seller_phone, seller_name, seller_email, available_confirm_fee, has_post_fee, timeout_action_time, snapshot_url, cod_fee, cod_status, shipping_type, trade_memo, is_3D,buyer_email,buyer_area, trade_from,is_lgtype,is_force_wlb,is_brand_sale,buyer_cod_fee,discount_fee,seller_cod_fee,express_agency_fee,invoice_name,service_orders,orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.snapshot_url, orders.timeout_action_time，orders.sku_properties_name, orders.item_meal_name, orders.item_meal_id，item_memo,orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.is_oversold,orders,promotion_details,invoice_name</optional>
<desc>1.Trade中可以指定返回的fields：seller_nick, buyer_nick, title, type, created, tid, seller_rate,buyer_flag, buyer_rate, status, payment, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no,alipay_id,buyer_message, pic_path, num_iid, num, price, buyer_alipay_no, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag, seller_alipay_no, seller_mobile, seller_phone, seller_name, seller_email, available_confirm_fee, has_post_fee, timeout_action_time, snapshot_url, cod_fee, cod_status, shipping_type, trade_memo, is_3D,buyer_email,buyer_area, trade_from,is_lgtype,is_force_wlb,is_brand_sale,buyer_cod_fee,discount_fee,seller_cod_fee,express_agency_fee,invoice_name,service_orders(注：当该授权用户为卖家时不能查看买家buyer_memo,buyer_flag)
2.Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.snapshot_url, orders.timeout_action_time，orders.sku_properties_name, orders.item_meal_name, orders.item_meal_id，item_memo,orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.is_oversold
3.fields：orders（返回Order的所有内容）
4.flelds：promotion_details(返回promotion_details所有内容，优惠详情),invoice_name(发票抬头)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.get</name>
<desc>获取单笔交易的部分信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no, buyer_message, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type,orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.outer_sku_id, orders.outer_iid, orders.buyer_rate, orders.seller_rate, orders</optional>
<desc>需要返回的字段。目前支持有：&lt;br&gt;

1. Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no, buyer_message, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type &lt;br&gt;
2. Order中可以指定返回fields:orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.outer_sku_id, orders.outer_iid, orders.buyer_rate, orders.seller_rate &lt;br&gt;
3. fields：orders（返回Order中的所有允许返回的字段）</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.memo.add</name>
<desc>根据登录用户的身份（买家或卖家），自动添加相应的交易备注,不能重复调用些接口添加备注，需要更新备注请用taobao.trade.memo.update</desc>
<request>
<param>
<name>flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>0</min_value>
<desc>交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>交易备注。最大长度: 1000个字节</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>对一笔交易添加备注后返回其对应的Trade，Trade中可用的返回字段有tid和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.memo.update</name>
<desc>需要商家或以上权限才可调用此接口，可重复调用本接口更新交易备注，本接口同时具有添加备注的功能</desc>
<request>
<param>
<name>flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>0</min_value>
<desc>交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<desc>交易备注。最大长度: 1000个字节</desc>
</param>
<param>
<name>reset</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否对memo的值置空 
若为true，则不管传入的memo字段的值是否为空，都将会对已有的memo值清空，慎用； 
若用false，则会根据memo是否为空来修改memo的值：若memo为空则忽略对已有memo字段的修改，若memo非空，则使用新传入的memo覆盖已有的memo的值</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>更新交易的备注信息后返回的Trade，其中可用字段为tid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.ordersku.update</name>
<desc>只能更新发货前子订单的销售属性  
只能更新价格相同的销售属性。对于拍下减库存的交易会同步更新销售属性的库存量。对于旺店的交易，要使用商品扩展信息中的SKU价格来比较。  
必须使用sku_id或sku_props中的一个参数来更新，如果两个都传的话，sku_id优先</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>子订单编号（对于单笔订单的交易可以传交易编号）。</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>special</required>
<desc>销售属性编号，可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
</param>
<param>
<name>sku_props</name>
<type>String</type>
<required>special</required>
<desc>销售属性组合串，格式：p1:v1;p2:v2，如：1627207:28329;20509:28314。可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
</param>
</request>
<response>
<param>
<name>order</name>
<type>Order</type>
<level>Object</level>
<desc>只返回oid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.postage.update</name>
<desc>修改订单邮费接口，通过传入订单编号和邮费价格，修改订单的邮费，返回修改时间modified,邮费post_fee,总费用total_fee。</desc>
<request>
<param>
<name>post_fee</name>
<type>String</type>
<required>required</required>
<desc>邮费价格(邮费单位是元）</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>返回trade类型，其中包含修改时间modified，修改邮费post_fee，修改后的总费用total_fee和买家实付款payment</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.receivetime.delay</name>
<desc>延长交易收货时间</desc>
<request>
<param>
<name>days</name>
<type>Number</type>
<required>required</required>
<max_value>10</max_value>
<min_value>3</min_value>
<desc>延长收货的天数，可选值为：3, 5, 7, 10。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>更新后的交易数据，只包括tid和modified两个字段。</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.shippingaddress.update</name>
<desc>只能更新一笔交易里面的买家收货地址  
只能更新发货前（即买家已付款，等待卖家发货状态）的交易的买家收货地址  
更新后的发货地址可以通过taobao.trade.fullinfo.get查到  
参数中所说的字节为GBK编码的（英文和数字占1字节，中文占2字节）</desc>
<request>
<param>
<name>receiver_address</name>
<type>String</type>
<required>optional</required>
<max_length>228</max_length>
<desc>收货地址。最大长度为228个字节。</desc>
</param>
<param>
<name>receiver_city</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>城市。最大长度为32个字节。如：杭州</desc>
</param>
<param>
<name>receiver_district</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>区/县。最大长度为32个字节。如：西湖区</desc>
</param>
<param>
<name>receiver_mobile</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>移动电话。最大长度为30个字节。</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<max_length>50</max_length>
<desc>收货人全名。最大长度为50个字节。</desc>
</param>
<param>
<name>receiver_phone</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>固定电话。最大长度为30个字节。</desc>
</param>
<param>
<name>receiver_state</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>省份。最大长度为32个字节。如：浙江</desc>
</param>
<param>
<name>receiver_zip</name>
<type>String</type>
<required>optional</required>
<max_length>6</max_length>
<desc>邮政编码。必须由6个数字组成。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号。</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>交易结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.snapshot.get</name>
<desc>交易快照查询 
目前只支持类型为“旺店标准版(600)”或“旺店入门版(610)”的交易  
对于“旺店标准版”类型的交易，返回的snapshot字段为交易快照编号  
对于“旺店入门版”类型的交易，返回的snapshot字段为JSON结构的数据(其中的shopPromotion包含了优惠，积分等信息）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>snapshot</optional>
<desc>需要返回的字段列表。现只支持："snapshot"字段</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>只包含Trade中的tid和snapshot、子订单Order中的oid和snapshot</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.get</name>
<desc>搜索当前会话用户作为卖家已卖出的交易数据(只能获取到三个月以内的交易信息)</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>查询交易创建时间结束。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(表示二手市场的订单）,service（商城服务子订单）</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>seller_nick, buyer_nick, title, type, created,  tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,buyer_area,has_buyer_message,orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders</optional>
<desc>需要返回的字段。目前支持有：&lt;br&gt; 
1. Trade中可以指定返回的fields:&lt;br&gt; 
seller_nick, buyer_nick, title, type, created,  tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,buyer_area,has_buyer_message &lt;br&gt; 
2. Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type &lt;br&gt; 
3. fields：orders（返回2中Order的所有内容）</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
</param>
<param>
<name>rate_status</name>
<type>String</type>
<required>optional</required>
<desc>评价状态，默认查询所有评价状态的数据，除了默认值外每次只能查询一种状态。&lt;br&gt; 
可选值： 
RATE_UNBUYER(买家未评) 
RATE_UNSELLER(卖家未评) 
RATE_BUYER_UNSELLER(买家已评，卖家未评) 
RATE_UNBUYER_SELLER(买家未评，卖家已评)</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>查询三个月内交易创建时间开始。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 
可选值： 
TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
WAIT_BUYER_PAY(等待买家付款) 
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
TRADE_FINISHED(交易成功) 
TRADE_CLOSED(交易关闭) 
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) 
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) 
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 。
可选值：
fixed(一口价)
auction(拍卖)
guarantee_trade(一口价、拍卖)
independent_simple_trade(旺店入门版交易)
independent_shop_trade(旺店标准版交易)
auto_delivery(自动发货)
ec(直冲)
cod(货到付款)
game_equipment(游戏装备)
shopex_trade(ShopEX交易)
netcn_trade(万网交易)
external_trade(统一外部交易)
instant_trade (即时到账)
b2c_cod(大商家货到付款)
hotel_trade(酒店类型交易)
super_market_trade(商超交易)
super_market_cod_trade(商超货到付款交易)
taohua(淘花网交易类型）
waimai(外卖交易类型）
nopaid（即时到帐/趣味猜交易类型）
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量交易，接口调用成功率在原有的基础上有所提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.increment.get</name>
<desc>1. 搜索当前会话用户作为卖家已卖出的增量交易数据 
2. 只能查询时间跨度为一天的增量交易记录：start_modified：2011-7-1 16:00:00 end_modified： 2011-7-2 15:59:59（注意不能写成16:00:00） 
3. 返回数据结果为创建订单时间的倒序 
4. 只能查询3个月内修改过的数据，超过这个时间的数据无法通过taobao.trade.fullinfo.get获取详情。</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改结束时间，必须大于修改开始时间(修改时间跨度不能大于一天)，格式:yyyy-MM-dd HH:mm:ss。&lt;span style="color:red;font-weight: bold;"&gt;建议使用30分钟以内的时间跨度，能大大提高响应速度和成功率&lt;/span&gt;。</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(二手市场的订单）,service（商城服务子订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,has_buyer_message, orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders</optional>
<desc>需要返回的字段。目前支持有： 
1.Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,has_buyer_message 
2.Order中可以指定返回fields： 
orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type  
3.fields：orders（返回Order的所有内容）</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数;默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围：1~100，默认值：40。&lt;span style="color:red;font-weight: bold;"&gt;建议使用40~50，可以提高成功率，减少超时数量&lt;/span&gt;。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 可选值 TRADE_NO_CREATE_PAY(没有创建支付宝交易) WAIT_BUYER_PAY(等待买家付款) WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) TRADE_BUYER_SIGNED(买家已签收,货到付款专用) TRADE_FINISHED(交易成功) TRADE_CLOSED(交易关闭) TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 。 
可选值： 
fixed(一口价) 
auction(拍卖) 
guarantee_trade(一口价、拍卖) 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
auto_delivery(自动发货) 
ec(直冲) cod(货到付款) 
fenxiao(分销) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易) 
instant_trade (即时到账) 
b2c_cod(大商家货到付款) 
hotel_trade(酒店类型交易) 
super_market_trade(商超交易), 
super_market_cod_trade(商超货到付款交易) 
taohua(桃花网交易类型） 
waimai(外卖交易类型） 
nopaid（即时到帐/趣味猜交易类型） 
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，&lt;span style="color:red;font-weight: bold;"&gt;通过此种方式获取增量交易，效率在原有的基础上有80%的提升&lt;/span&gt;。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.add</name>
<desc>新增单个评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不能再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>anony</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否匿名,卖家评不能匿名。可选值:true(匿名),false(非匿名)。注意：输入非可选值将会自动转为false</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>optional</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<desc>子订单ID</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色,可选值:seller(卖家),buyer(买家)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易ID</desc>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<desc>返回tid、oid、create</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.list.add</name>
<desc>针对父子订单新增批量评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不用再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>anony</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否匿名，卖家评不能匿名。可选值:true(匿名),false(非匿名)。 注意：输入非可选值将会自动转为false；</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>optional</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色。可选值:seller(卖家),buyer(买家)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易ID</desc>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<desc>返回的评论的信息，仅返回tid和created字段</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderates.get</name>
<desc>搜索评价信息，只能获取距今180天内的评价记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>评价结束时间。如果只输入结束时间，那么全部返回所有评价数据。</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>TradeRate</optional>
<desc>需返回的字段列表。可选值：TradeRate 结构中的所有字段，多个字段之间用“,”分隔</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>150</max_value>
<min_value>1</min_value>
<desc>每页获取条数。默认值40，最小值1，最大值150。相同的查询时间段条件下，最大只能获取总共1500条评价记录。</desc>
</param>
<param>
<name>rate_type</name>
<type>String</type>
<required>required</required>
<desc>评价类型。可选值:get(得到),give(给出)</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>optional</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色即评价的发起方。可选值:seller(卖家),buyer(买家)。 当 give buyer 以买家身份给卖家的评价； 当 get seller 以买家身份得到卖家给的评价； 当 give seller 以卖家身份给买家的评价； 当 get buyer 以卖家身份得到买家给的评价。</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>评价开始时。如果只输入开始时间，那么能返回开始时间之后的评价数据。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易订单id，可以是父订单id号，也可以是子订单id号</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取评价信息，效率在原有的基础上有80%的提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>当使用use_has_next时返回信息，如果还有下一页则返回true</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的评价总数</desc>
</param>
<param>
<name>trade_rates</name>
<type>TradeRate</type>
<level>Object Array</level>
<desc>评价列表。返回的TradeRate包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.areas.get</name>
<desc>查询标准地址区域代码信息 参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20100623_402652267.htm</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Area</optional>
<desc>需返回的字段列表.可选值:Area 结构中的所有字段;多个字段之间用","分隔.如:id,type,name,parent_id,zip.</desc>
</param>
</request>
<response>
<param>
<name>areas</name>
<type>Area</type>
<level>Object Array</level>
<desc>地址区域信息列表.返回的Area包含的具体信息为入参fields请求的字段信息.</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.add</name>
<desc>新增运费模板</desc>
<request>
<param>
<name>assumer</name>
<type>Number</type>
<required>required</required>
<desc>可选值：0,1 &lt;br&gt;  说明&lt;br&gt;0:表示买家承担服务费;&lt;br&gt;1:表示卖家承担服务费</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>运费模板的名称，长度不能超过50个字节</desc>
</param>
<param>
<name>template_add_fees</name>
<type>String</type>
<required>required</required>
<desc>增费：输入0.00-999.99（最多包含两位小数）&lt;br/&gt;&lt;font color=blue&gt;增费可以为0&lt;/font&gt;&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_add_standards</name>
<type>String</type>
<required>required</required>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;增费标准目前只能为1&lt;/font&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_dests</name>
<type>String</type>
<required>required</required>
<desc>邮费子项涉及的地区.结构: value1;value2;value3,value4
&lt;br&gt;如:1,110000;1,110000;1,310000;1,320000,330000。 aredId解释(1=全国,110000=北京,310000=上海,320000=江苏,330000=浙江)
如果template_types设置为post;ems;exmpress;cod则表示为平邮(post)指定默认地区(全国)和北京地区的运费;其他的类似以分号区分一一对应
&lt;br/&gt;可以用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm
&lt;br/&gt;&lt;font color=red&gt;每个运费方式设置的设涉及地区中必须包含全国地区（areaId=1）表示默认运费,可以只设置默认运费&lt;/font&gt;
&lt;br&gt;&lt;font color=blue&gt;注意:为多个地区指定指定不同（首费标准、首费、增费标准、增费一项不一样就算不同）的运费以逗号","区分，
template_start_standards(首费标准)、template_start_fees(首费)、
template_add_standards(增费标准)、
template_add_fees(增费)必须与template_types分号数量相同。如果为需要为多个地区指定相同运费则地区之间用“|”隔开即可。&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_fees</name>
<type>String</type>
<required>required</required>
<desc>首费：输入0.01-999.99（最多包含两位小数） 
&lt;br/&gt;&lt;font color=blue&gt; 首费不能为0&lt;/font&gt;&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_standards</name>
<type>String</type>
<required>required</required>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;首费标准目前只能为1&lt;/br&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_types</name>
<type>String</type>
<required>required</required>
<desc>运费方式:平邮 (post),快递公司(express),EMS (ems),货到付款(cod)结构:value1;value2;value3;value4  
如: post;express;ems;cod  
&lt;br/&gt;&lt;font color=red&gt; 
注意:在添加多个运费方式时,字符串中使用 ";" 分号区分 
。template_dests(指定地区) 
template_start_standards(首费标准)、template_start_fees(首费)、template_add_standards(增费标准)、template_add_fees(增费)必须与template_types的分号数量相同. &lt;/font&gt; 
&lt;br&gt; 
&lt;font color=blue&gt;普通用户：post,ems,express三种运费方式必须填写一个，不能填写cod。 
货到付款用户：如果填写了cod运费方式，则post,ems,express三种运费方式也必须填写一个，如果没有填写cod则填写的运费方式中必须存在express&lt;/font&gt;</desc>
</param>
<param>
<name>valuation</name>
<type>Number</type>
<required>required</required>
<desc>可选值：0&lt;br&gt;说明：&lt;br&gt;0:表示按宝贝件数计算运费</desc>
</param>
</request>
<response>
<param>
<name>delivery_template</name>
<type>DeliveryTemplate</type>
<level>Object</level>
<desc>模板对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.delete</name>
<desc>根据用户指定的模板ID删除指定的模板</desc>
<request>
<param>
<name>template_id</name>
<type>Number</type>
<required>required</required>
<desc>运费模板ID</desc>
</param>
</request>
<response>
<param>
<name>complete</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示删除成功还是失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.get</name>
<desc>获取用户指定运费模板信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>DeliveryTemplate,query_cod,query_post,query_express,query_ems</optional>
<desc>需返回的字段列表。 
可选值:DeliveryTemplate结构体中的所有字段以及定义的四个常量;各字段之间用","隔开
&lt;br/&gt; 
DeliveryTemplate结构:
template_id：查询模板ID template_name:查询模板名称 assumer：查询服务承担放 
valuation:查询计价规则 supports:查询增值服务列表 created:查询模板创建时间 modified:查询修改时间；
&lt;br/&gt;
常量:&lt;br/&gt;
query_cod:查询货到付款运费信息； 
query_post:查询平邮运费信息； 
query_express:查询快递公司运费信息； 
query_ems:查询EMS运费信息
&lt;br/&gt;
&lt;font color=red&gt;不能有空格&lt;/font&gt;</desc>
</param>
<param>
<name>template_ids</name>
<type>Field List</type>
<required>required</required>
<desc>需要查询的运费模板ID列表</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>optional</required>
<desc>在没有登录的情况下根据淘宝用户昵称查询指定的模板</desc>
</param>
</request>
<response>
<param>
<name>delivery_templates</name>
<type>DeliveryTemplate</type>
<level>Object Array</level>
<desc>运费模板列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>获得到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.update</name>
<desc>修改运费模板</desc>
<request>
<param>
<name>assumer</name>
<type>Number</type>
<required>optional</required>
<desc>可选值：0,1 &lt;br&gt;  说明&lt;br&gt;0:表示买家承担服务费;&lt;br&gt;1:表示卖家承担服务费</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>模板名称，长度不能大于50个字节</desc>
</param>
<param>
<name>template_add_fees</name>
<type>String</type>
<required>required</required>
<desc>增费：输入0.00-999.99（最多包含两位小数）&lt;br/&gt;&lt;font color=blue&gt;增费可以为0&lt;/font&gt;&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_add_standards</name>
<type>String</type>
<required>required</required>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;增费标准目前只能为1&lt;/font&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_dests</name>
<type>String</type>
<required>required</required>
<desc>邮费子项涉及的地区.结构: value1;value2;value3,value4
&lt;br&gt;如:1,110000;1,110000;1,310000;1,320000,330000。 aredId解释(1=全国,110000=北京,310000=上海,320000=江苏,330000=浙江)
如果template_types设置为post;ems;exmpress;cod则表示为平邮(post)指定默认地区(全国)和北京地区的运费;其他的类似以分号区分一一对应
&lt;br/&gt;可以用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm
&lt;br/&gt;&lt;font color=red&gt;每个运费方式设置的设涉及地区中必须包含全国地区（areaId=1）表示默认运费,可以只设置默认运费&lt;/font&gt;
&lt;br&gt;&lt;font color=blue&gt;注意:为多个地区指定指定不同（首费标准、首费、增费标准、增费一项不一样就算不同）的运费以逗号","区分，
template_start_standards(首费标准)、template_start_fees(首费)、
template_add_standards(增费标准)、
template_add_fees(增费)必须与template_types分号数量相同。如果为需要为多个地区指定相同运费则地区之间用“|”隔开即可。&lt;/font&gt;</desc>
</param>
<param>
<name>template_id</name>
<type>Number</type>
<required>required</required>
<desc>需要修改的模板对应的模板ID</desc>
</param>
<param>
<name>template_start_fees</name>
<type>String</type>
<required>required</required>
<desc>首费：输入0.01-999.99（最多包含两位小数） 
&lt;br/&gt;&lt;font color=blue&gt; 首费不能为0&lt;/font&gt;&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_standards</name>
<type>String</type>
<required>required</required>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;首费标准目前只能为1&lt;/br&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_types</name>
<type>String</type>
<required>required</required>
<desc>运费方式:平邮 (post),快递公司(express),EMS (ems),货到付款(cod)结构:value1;value2;value3;value4  
如: post;express;ems;cod  
&lt;br/&gt;&lt;font color=red&gt; 
注意:在添加多个运费方式时,字符串中使用 ";" 分号区分。template_dests(指定地区) template_start_standards(首费标准)、template_start_fees(首费)、template_add_standards(增费标准)、template_add_fees(增费)必须与template_types的分号数量相同.  
 &lt;/font&gt; 
&lt;br/&gt; 
&lt;font color=blue&gt; 
普通用户：post,ems,express三种运费方式必须填写一个，不能填写cod。 
货到付款用户：如果填写了cod运费方式，则post,ems,express三种运费方式也必须填写一个，如果没有填写cod则填写的运费方式中必须存在express&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>complete</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示修改是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.templates.get</name>
<desc>根据用户ID获取用户下所有模板</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>DeliveryTemplate,query_cod,query_post,query_express,query_ems</optional>
<desc>需返回的字段列表。 
可选值:DeliveryTemplate结构体中的所有字段以及定义的四个常量;各字段之间用","隔开
&lt;br/&gt; 
DeliveryTemplate结构:
template_id：查询模板ID template_name:查询模板名称 assumer：查询服务承担放 
valuation:查询计价规则 supports:查询增值服务列表 created:查询模板创建时间 modified:查询修改时间；
&lt;br/&gt;
常量:&lt;br/&gt;
query_cod:查询货到付款运费信息； 
query_post:查询平邮运费信息； 
query_express:查询快递公司运费信息； 
query_ems:查询EMS运费信息
&lt;br/&gt;
&lt;font color=red&gt;不能有空格&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>delivery_templates</name>
<type>DeliveryTemplate</type>
<level>Object Array</level>
<desc>运费模板列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>获得到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.add</name>
<desc>通过此接口新增卖家地址库,卖家最多可添加5条地址库,新增第一条卖家地址，将会自动设为默认地址库</desc>
<request>
<param>
<name>addr</name>
<type>String</type>
<required>required</required>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</param>
<param>
<name>cancel_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认退货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认退货地址，撤消原默认退货地址&lt;/font&gt;</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在市</desc>
</param>
<param>
<name>contact_name</name>
<type>String</type>
<required>required</required>
<desc>联系人姓名 &lt;font color='red'&gt;长度不可超过20个字节&lt;/font&gt;</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>区、县 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
<param>
<name>get_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认取货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认取货地址，撤消原默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>备注,&lt;br&gt;&lt;font color='red'&gt;备注不能超过256字节&lt;/font&gt;</desc>
</param>
<param>
<name>mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>手机号码，手机与电话必需有一个 
&lt;br&gt;&lt;font color='red'&gt;手机号码不能超过20位&lt;/font&gt;</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>special</required>
<desc>电话号码,手机与电话必需有一个</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>required</required>
<desc>所在省</desc>
</param>
<param>
<name>seller_company</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>公司名称,&lt;br&gt;&lt;font color="red"&gt;公司名称长能不能超过20字节&lt;/font&gt;</desc>
</param>
<param>
<name>zip_code</name>
<type>String</type>
<required>optional</required>
<desc>地区邮政编码 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改日期modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.modify</name>
<desc>卖家地址库修改</desc>
<request>
<param>
<name>addr</name>
<type>String</type>
<required>required</required>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</param>
<param>
<name>cancel_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认退货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认退货地址，撤消原默认退货地址&lt;/font&gt;</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在市</desc>
</param>
<param>
<name>contact_id</name>
<type>Number</type>
<required>required</required>
<desc>地址库ID</desc>
</param>
<param>
<name>contact_name</name>
<type>String</type>
<required>required</required>
<desc>联系人姓名 
&lt;font color='red'&gt;长度不可超过20个字节&lt;/font&gt;</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>区、县 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
<param>
<name>get_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认取货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认取货地址，撤消原默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<desc>备注,&lt;br&gt;&lt;font color='red'&gt;备注不能超过256字节&lt;/font&gt;</desc>
</param>
<param>
<name>mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>手机号码，手机与电话必需有一个 &lt;br&gt;&lt;font color='red'&gt;手机号码不能超过20位&lt;/font&gt;</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>special</required>
<desc>电话号码,手机与电话必需有一个</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>required</required>
<desc>所在省</desc>
</param>
<param>
<name>seller_company</name>
<type>String</type>
<required>optional</required>
<desc>公司名称, 
&lt;br&gt;&lt;font color='red'&gt;公司名称长能不能超过20字节&lt;/font&gt;</desc>
</param>
<param>
<name>zip_code</name>
<type>String</type>
<required>optional</required>
<desc>地区邮政编码 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改时间modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.remove</name>
<desc>用此接口删除卖家地址库</desc>
<request>
<param>
<name>contact_id</name>
<type>Number</type>
<required>required</required>
<desc>地址库ID</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改日期modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.search</name>
<desc>通过此接口查询卖家地址库，</desc>
<request>
<param>
<name>rdef</name>
<type>String</type>
<required>optional</required>
<desc>可选，参数列表如下：&lt;br&gt;&lt;font color='red'&gt;
no_def:查询非默认地址&lt;br&gt;
get_def:查询默认取货地址&lt;br&gt;
cancel_def:查询默认退货地址&lt;br&gt;
缺省此参数时，查询所有当前用户的地址库
&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>addresses</name>
<type>AddressResult</type>
<level>Object Array</level>
<desc>一组地址库数据，</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.companies.get</name>
<desc>查询淘宝网合作的物流公司信息，用于发货接口。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>LogisticsCompany</optional>
<desc>需返回的字段列表。可选值:LogisticsCompany 结构中的所有字段;多个字段间用","逗号隔开. 
如:id,code,name,reg_mail_no 
&lt;br&gt;&lt;font color='red'&gt;说明：&lt;/font&gt; 
&lt;br&gt;id：物流公司ID 
&lt;br&gt;code：物流公司code 
&lt;br&gt;name：物流公司名称 
&lt;br&gt;reg_mail_no：物流公司对应的运单规则</desc>
</param>
<param>
<name>is_recommended</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否查询推荐物流公司.可选值:true,false.如果不提供此参数,将会返回所有支持电话联系的物流公司.</desc>
</param>
<param>
<name>order_mode</name>
<type>String</type>
<required>optional</required>
<desc>推荐物流公司的下单方式.可选值:offline(电话联系/自己联系),online(在线下单),all(即电话联系又在线下单). 此参数仅仅用于is_recommended 为ture时。就是说对于推荐物流公司才可用.如果不选择此参数将会返回推荐物流中支持电话联系的物流公司.</desc>
</param>
</request>
<response>
<param>
<name>logistics_companies</name>
<type>LogisticsCompany</type>
<level>Object Array</level>
<desc>物流公司信息。返回的LogisticCompany包含的具体信息为入参fields请求的字段信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.dummy.send</name>
<desc>用户调用该接口可实现无需物流（虚拟）发货,使用该接口发货，交易订单状态会直接变成卖家已发货</desc>
<request>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: mobileCode=tid1:手机串号1,手机串号2|tid2:手机串号3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
mobileCode无忧购的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:手机串号1,手机串号2|tid2:手机串号3”为mobileCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例A商品和B商品都属于无忧购商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：mobileCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个无忧购的商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.offline.send</name>
<desc>用户调用该接口可实现自己联系发货（线下物流），使用该接口发货，交易订单状态会直接变成卖家已发货。不支持货到付款、在线下单类型的订单。</desc>
<request>
<param>
<name>cancel_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;br&gt;&lt;font color='red'&gt;如果为空，取的卖家的默认退货地址&lt;/font&gt;&lt;br&gt;</desc>
</param>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。非淘宝官方物流合作公司，填写“其他”。</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: mobileCode=tid1:手机串号1,手机串号2|tid2:手机串号3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
mobileCode无忧购的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:手机串号1,手机串号2|tid2:手机串号3”为mobileCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例A商品和B商品都属于无忧购商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：mobileCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个无忧购的商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。</desc>
</param>
<param>
<name>sender_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;font color='red'&gt;如果为空，取的卖家的默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.cancel</name>
<desc>调此接口取消发货的订单，重新选择物流公司发货。前提是物流公司未揽收货物。对未发货和已经被物流公司揽收的物流订单，是不能取消的。</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>成功与失败</desc>
</param>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
<param>
<name>recreated_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>重新创建物流订单id</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.confirm</name>
<desc>确认发货的目的是让交易流程继承走下去，确认发货后交易状态会由【买家已付款】变为【卖家已发货】，然后买家才可以确认收货，货款打入卖家账号。货到付款的订单除外</desc>
<request>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。&lt;br&gt;</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>只返回is_success：是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.send</name>
<desc>用户调用该接口可实现在线订单发货（支持货到付款） 
调用该接口实现在线下单发货，有两种情况：&lt;br&gt; 
&lt;font color='red'&gt;如果不输入运单号的情况：交易状态不会改变，需要调用taobao.logistics.online.confirm确认发货后交易状态才会变成卖家已发货。&lt;br&gt; 
如果输入运单号的情况发货：交易订单状态会直接变成卖家已发货 。&lt;/font&gt;</desc>
<request>
<param>
<name>cancel_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;br&gt;&lt;font color='red'&gt;如果为空，取的卖家的默认退货地址&lt;/font&gt;&lt;br&gt;</desc>
</param>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。 
&lt;br&gt;&lt;font color='red'&gt;如果是货到付款订单，选择的物流公司必须支持货到付款发货方式&lt;/font&gt;</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: mobileCode=tid1:手机串号1,手机串号2|tid2:手机串号3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
mobileCode无忧购的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:手机串号1,手机串号2|tid2:手机串号3”为mobileCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例A商品和B商品都属于无忧购商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：mobileCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个无忧购的商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>optional</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；</desc>
</param>
<param>
<name>sender_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;font color='red'&gt;如果为空，取的卖家的默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orders.detail.get</name>
<desc>查询物流订单的详细信息，涉及用户隐私字段。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间结束.格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Shipping</optional>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中所有字段.fileds中可以指定返回以上任意一个或者多个字段,以","分隔.</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<desc>每页条数.该字段没传 或 值&lt;1 ，则默认page_size为40</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<required>optional</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes.</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间开始.格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>物流状态.可查看数据结构 Shipping 中的status字段.</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,但是仅会返回一条物流订单信息.</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<desc>获取的物流订单详情列表.返回的Shipping包含的具体信息为入参fields请求的字段信息.</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orders.get</name>
<desc>批量查询物流订单。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间结束</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>tid,seller_nick,buyer_nick,delivery_start, delivery_end,out_sid,item_title,receiver_name, created,modified,status,type,freight_payer,seller_confirm,company_name；多个字段之间用","分隔。如tid,seller_nick,buyer_nick,delivery_start</optional>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中的以下字段:  
tid,seller_nick,buyer_nick,delivery_start, delivery_end,out_sid,item_title,receiver_name, created,modified,status,type,freight_payer,seller_confirm,company_name；多个字段之间用","分隔。如tid,seller_nick,buyer_nick,delivery_start。</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<desc>每页条数.该字段没传 或 值&lt;1 ,则默认page_size为40</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<required>optional</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间开始</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>物流状态.查看数据结构 Shipping 中的status字段.</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,但是仅会返回一条物流订单信息.</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<desc>获取的物流订单详情列表  
返回的Shipping包含的具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orderstore.push</name>
<desc>卖家使用自己的物流公司发货，可以通过本接口将订单的仓内信息推送到淘宝，淘宝保存这些仓内信息，并可在页面展示这些仓内信息。</desc>
<request>
<param>
<name>occure_time</name>
<type>Date</type>
<required>required</required>
<desc>流转状态发生时间</desc>
</param>
<param>
<name>operate_detail</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>仓内操作描述</desc>
</param>
<param>
<name>operator_contact</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员联系方式</desc>
</param>
<param>
<name>operator_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员名称</desc>
</param>
<param>
<name>trade_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝订单交易号</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回结果是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.ordertrace.push</name>
<desc>卖家使用自己的物流公司发货，可以通过本接口将订单的流转信息推送到淘宝，淘宝保存这些流转信息，并可在页面展示这些流转信息。</desc>
<request>
<param>
<name>company_name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>物流公司名称</desc>
</param>
<param>
<name>current_city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>流转节点的当前城市</desc>
</param>
<param>
<name>facility_name</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>网点名称</desc>
</param>
<param>
<name>mail_no</name>
<type>String</type>
<required>required</required>
<desc>快递单号。各个快递公司的运单号格式不同。</desc>
</param>
<param>
<name>next_city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>流转节点的下一个城市</desc>
</param>
<param>
<name>node_description</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>描述当前节点的操作，操作是“揽收”、“派送”或“签收”。</desc>
</param>
<param>
<name>occure_time</name>
<type>Date</type>
<required>required</required>
<desc>流转节点发生时间</desc>
</param>
<param>
<name>operate_detail</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>流转节点的详细地址及操作描述</desc>
</param>
<param>
<name>operator_contact</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员联系方式，手机号码或电话。</desc>
</param>
<param>
<name>operator_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员名称</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回结果是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.partners.get</name>
<desc>查询物流公司信息（可以查询目的地可不可达情况）</desc>
<request>
<param>
<name>goods_value</name>
<type>String</type>
<required>optional</required>
<desc>货物价格.只有当选择货到付款此参数才会有效</desc>
</param>
<param>
<name>is_need_carriage</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要揽收资费信息，默认false。在此值为false时，返回内容中将无carriage。在未设置source_id或target_id的情况下，无法查询揽收资费信息。自己联系无揽收资费记录。</desc>
</param>
<param>
<name>service_type</name>
<type>String</type>
<required>required</required>
<desc>服务类型，根据此参数可查出提供相应服务类型的物流公司信息(物流公司状态正常)，可选值：cod(货到付款)、online(在线下单)、 offline(自己联系)、limit(限时物流)。然后再根据source_id,target_id,goods_value这三个条件来过滤物流公司. 目前输入自己联系服务类型将会返回空，因为自己联系并没有具体的服务信息，所以不会有记录。</desc>
</param>
<param>
<name>source_id</name>
<type>String</type>
<required>optional</required>
<desc>物流公司揽货地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20100623_402652267.htm  或者调用 taobao.areas.get 获取</desc>
</param>
<param>
<name>target_id</name>
<type>String</type>
<required>optional</required>
<desc>物流公司派送地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20100623_402652267.htm  或者调用 taobao.areas.get 获取</desc>
</param>
</request>
<response>
<param>
<name>logistics_partners</name>
<type>LogisticsPartner</type>
<level>Object Array</level>
<desc>物流公司信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.trace.search</name>
<desc>用户根据淘宝交易号查询物流流转信息，如2010-8-10 15：23：00到达杭州集散地</desc>
<request>
<param>
<name>seller_nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易号，请勿传非淘宝交易号</desc>
</param>
</request>
<response>
<param>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<desc>运单号</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>订单的物流状态
* 等候发送给物流公司
*已提交给物流公司,等待物流公司接单
*已经确认消息接收，等待物流公司接单
*物流公司已接单
*物流公司不接单
*物流公司揽收失败
*物流公司揽收成功
*签收失败
*对方已签收
*对方拒绝签收</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易号</desc>
</param>
<param>
<name>trace_list</name>
<type>TransitStepInfo</type>
<level>Object Array</level>
<desc>流转信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.delivery.send</name>
<desc>使用指南：http://open.taobao.com/dev/index.php/ATS%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97 
1.提供异步批量物流发货功能 2.一次最多发货40个订单 3.提交任务会进行初步任务校验，如果成功会返回任务号和创建时间，如果失败就报错 4.可以接收淘宝发出的任务完成消息，也可以过一段时间来取结果。获取结果接口为taobao.topats.result.get 
5.此api执行完成发送的通知消息格式为{"task":{"task_id":123456,"created":"2010-8-19"}}</desc>
<request>
<param>
<name>company_codes</name>
<type>String</type>
<required>optional</required>
<desc>每个tid所对应的物流公司代码。可以不传，表示所有的物流公司都为"其他"，但是只要有一个订单需要指定物流公司，所有的订单都需要指定物流公司,每个类型之间用";"连接。排列要和tid顺序一致，不需要指定物流公司的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。 
 
每个company_code表示物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logisticcompanies.get 获取。如传入的代码非淘宝官方物流合作公司，默认是“其他”物流的方式，在淘宝不显示物流具体进度，故传入需谨慎。如果orderType为delivery_needed，则必传</desc>
</param>
<param>
<name>memos</name>
<type>String</type>
<required>optional</required>
<desc>每个tid所对应的卖家备注。可以不传，表示所有的发货订单都不需要卖家备注，但是只要有一个订单需要指定卖家备注，所有的订单都需要指定卖家备注,每个卖家备注之间用";"连接。排列要和tid顺序一致，不需要指定卖家备注的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。卖家备注.最大长度为250个字符。如果orderType为delivery_needed，则必传</desc>
</param>
<param>
<name>order_types</name>
<type>String</type>
<required>optional</required>
<desc>每个tid所对应的物流发货类型。可以不传，表示所有的发货类型都为"delivery_needed"，但是只要有一个订单需要指定发货类型，所有的订单都需要指定发货类型,每个类型之间用";"连接。排列要和tid顺序一致，不需要指定发货类型的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。 每个类型可选( delivery_needed(物流订单发货),virtual_goods(虚拟物品发货). ) 注:选择virtual_goods类型进行发货的话下面的参数可以不需填写。如果选择delivery_needed 则下面的参数必须要填写</desc>
</param>
<param>
<name>out_sids</name>
<type>String</type>
<required>optional</required>
<desc>每个tid所对应的物流公司运单号。可以不传，表示所有的物流订单都没有订单号，但是只要有一个订单需要有订单号，所有的订单都需要指定订单号,每个订单号之间用";"连接。排列要和tid顺序一致，不需要指定订单号的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。 
具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_codes中传入的代码非淘宝官方物流合作公司，此处运单号不校验。如果orderType为delivery_needed，则必传</desc>
</param>
<param>
<name>seller_address</name>
<type>String</type>
<required>optional</required>
<desc>卖家地址(详细地址).如:XXX街道XXX门牌,省市区不需要提供。如果orderType为delivery_needed，则必传</desc>
</param>
<param>
<name>seller_area_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家所在地国家公布的标准地区码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm 或者调用 taobao.areas.get 获取。如果orderType为delivery_needed，则必传</desc>
</param>
<param>
<name>seller_mobile</name>
<type>String</type>
<required>optional</required>
<desc>卖家手机号码</desc>
</param>
<param>
<name>seller_name</name>
<type>String</type>
<required>optional</required>
<desc>卖家姓名。如果orderType为delivery_needed，则必传</desc>
</param>
<param>
<name>seller_phone</name>
<type>String</type>
<required>optional</required>
<desc>卖家固定电话.包含区号,电话,分机号,中间用 " – "; 卖家固定电话和卖家手机号码,必须填写一个.</desc>
</param>
<param>
<name>seller_zip</name>
<type>String</type>
<required>optional</required>
<desc>卖家邮编。如果orderType为delivery_needed，则必传</desc>
</param>
<param>
<name>tids</name>
<type>String</type>
<required>required</required>
<desc>批量发货的订单id列表，每个订单id必需是合法的数字类型的tid，每个tid之间以";"分隔，至少要指定一个tid，最多不超过40个tid</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.add</name>
<desc>此API添加卖家店铺内自定义类目  
父类目parent_cid值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目  
注：因为缓存的关系,添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<required>optional</required>
<desc>父类目编号，如果类目为店铺下的一级类目：值等于0，如果类目为子类目，调用获取taobao.sellercats.list.get父类目编号</desc>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<required>optional</required>
<desc>链接图片URL地址。(绝对地址，格式：http://host/image_path)</desc>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<required>optional</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<desc>返回seller_cat数据结构中的：cid,created</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.get</name>
<desc>此API获取当前卖家店铺在淘宝前端被展示的浏览导航类目（面向买家）</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>seller_cats</name>
<type>SellerCat</type>
<level>Object Array</level>
<desc>卖家自定义类目</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.update</name>
<desc>此API更新卖家店铺内自定义类目  
注：因为缓存的关系，添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>卖家自定义类目编号</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<required>optional</required>
<desc>链接图片URL地址</desc>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<required>optional</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<desc>返回sellercat数据结构中的：cid,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.get</name>
<desc>获取卖家店铺的基本信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Shop</optional>
<desc>需返回的字段列表。可选值：Shop 结构中的所有字段；多个字段之间用逗号(,)分隔</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>店铺信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.remainshowcase.get</name>
<desc>获取卖家店铺剩余橱窗数量，已用橱窗数量，总橱窗数量（对于B卖家，后两个参数返回-1）</desc>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>支持返回剩余橱窗数量，已用橱窗数量，总橱窗数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.update</name>
<desc>目前只支持标题、公告和描述的更新</desc>
<request>
<param>
<name>bulletin</name>
<type>String</type>
<required>special</required>
<desc>店铺公告。不超过1024个字符</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>special</required>
<desc>店铺描述。10～2000个字符以内</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>special</required>
<desc>店铺标题。不超过30个字符；过滤敏感词，如淘咖啡、阿里巴巴等。title, bulletin和desc至少必须传一个</desc>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>店铺信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.cooperation.get</name>
<desc>获取供应商的合作关系信息</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>合作结束时间yyyy-MM-dd</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>合作开始时间yyyy-MM-dd</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>合作状态： NORMAL(合作中)、 ENDING(终止中) 、END (终止)</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>分销方式：AGENT(代销) 、DEALER（经销）</desc>
</param>
</request>
<response>
<param>
<name>cooperations</name>
<type>Cooperation</type>
<level>Object Array</level>
<desc>合作分销关系</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.cooperation.update</name>
<desc>供应商更新合作的分销商等级</desc>
<request>
<param>
<name>distributor_id</name>
<type>Number</type>
<required>required</required>
<desc>分销商ID</desc>
</param>
<param>
<name>grade_id</name>
<type>Number</type>
<required>required</required>
<desc>等级ID(0代表取消)</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>分销方式(新增)： AGENT(代销)、DEALER(经销)(默认为代销)</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新结果成功失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.discount.add</name>
<desc>新增等级折扣</desc>
<request>
<param>
<name>discount_name</name>
<type>String</type>
<required>required</required>
<desc>折扣名称,长度不能超过25字节</desc>
</param>
<param>
<name>discount_types</name>
<type>String</type>
<required>required</required>
<desc>PERCENT（按折扣优惠）、PRICE（按减价优惠），例如"PERCENT,PRICE,PERCENT"</desc>
</param>
<param>
<name>discount_values</name>
<type>String</type>
<required>required</required>
<desc>优惠比率或者优惠价格，例如：”8000,-2300,7000”,大小为-100000000到100000000之间（单位：分）</desc>
</param>
<param>
<name>target_ids</name>
<type>String</type>
<required>required</required>
<desc>会员等级的id或者分销商id，例如：”1001,2001,1002”</desc>
</param>
<param>
<name>target_types</name>
<type>String</type>
<required>required</required>
<desc>GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠），例如"GRADE,DISTRIBUTOR"</desc>
</param>
</request>
<response>
<param>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.discount.update</name>
<desc>修改等级折扣</desc>
<request>
<param>
<name>detail_ids</name>
<type>String</type>
<required>optional</required>
<desc>详情ID，例如：”0,1002,1003”</desc>
</param>
<param>
<name>detail_statuss</name>
<type>String</type>
<required>optional</required>
<desc>ADD(新增)、UPDATE（更新）、DEL（删除，对应的target_type等信息填NULL），例如：”UPDATE,DEL,DEL”</desc>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>discount_name</name>
<type>String</type>
<required>optional</required>
<desc>折扣名称，长度不能超过25字节</desc>
</param>
<param>
<name>discount_status</name>
<type>String</type>
<required>optional</required>
<desc>状态DEL（删除）UPDATE(更新)</desc>
</param>
<param>
<name>discount_types</name>
<type>String</type>
<required>optional</required>
<desc>PERCENT（按折扣优惠）、PRICE（按减价优惠），例如"PERCENT,PRICE,PERCENT"</desc>
</param>
<param>
<name>discount_values</name>
<type>String</type>
<required>optional</required>
<desc>优惠比率或者优惠价格，例如：”8000,-2300,7000”,大小为-100000000到100000000之间（单位：分）</desc>
</param>
<param>
<name>target_ids</name>
<type>String</type>
<required>optional</required>
<desc>会员等级的id或者分销商id，例如：”1001,2001,1002”</desc>
</param>
<param>
<name>target_types</name>
<type>String</type>
<required>optional</required>
<desc>GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠），例如"GRADE,DISTRIBUTOR"</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>成功状态</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.discounts.get</name>
<desc>查询折扣信息</desc>
<request>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>ext_fields</name>
<type>String</type>
<required>optional</required>
<desc>指定查询额外的信息，可选值：DETAIL（查询折扣详情），多个可选值用逗号分割。（只允许指定折扣ID情况下使用）</desc>
</param>
</request>
<response>
<param>
<name>discounts</name>
<type>Discount</type>
<level>Object Array</level>
<desc>折扣数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.distributor.items.get</name>
<desc>供应商查询分销商商品下载记录。</desc>
<request>
<param>
<name>distributor_id</name>
<type>Number</type>
<required>special</required>
<desc>分销商ID 。</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>设置结束时间,空为不设置。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<desc>产品ID</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>设置开始时间。空为不设置。</desc>
</param>
</request>
<response>
<param>
<name>records</name>
<type>FenxiaoItemRecord</type>
<level>Object Array</level>
<desc>下载记录对象</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.distributors.get</name>
<desc>查询和当前登录供应商有合作关系的分销商的信息</desc>
<request>
<param>
<name>nicks</name>
<type>String</type>
<required>required</required>
<desc>分销商用户名列表。多个之间以“,”分隔;最多支持50个分销商用户名。</desc>
</param>
</request>
<response>
<param>
<name>distributors</name>
<type>Distributor</type>
<level>Object Array</level>
<desc>分销商详细信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.grades.get</name>
<desc>根据供应商ID，查询他的分销商等级信息</desc>
<response>
<param>
<name>fenxiao_grades</name>
<type>FenxiaoGrade</type>
<level>Object Array</level>
<desc>分销商等级信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.login.user.get</name>
<desc>获取用户登录信息</desc>
<response>
<param>
<name>login_user</name>
<type>LoginUser</type>
<level>Object</level>
<desc>登录用户信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.customfield.update</name>
<desc>采购单自定义字段</desc>
<request>
<param>
<name>isv_custom_key</name>
<type>String</type>
<required>required</required>
<desc>自定义key</desc>
</param>
<param>
<name>isv_custom_value</name>
<type>String</type>
<required>optional</required>
<desc>自定义的值</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.message.add</name>
<desc>添加采购单留言，最多20条（供应商分销商都可添加）</desc>
<request>
<param>
<name>message</name>
<type>String</type>
<required>required</required>
<desc>留言内容</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.price.update</name>
<desc>采购单价格修改接口</desc>
<request>
<param>
<name>adjust_fee</name>
<type>String</type>
<required>optional</required>
<desc>单位是分，多个值用","分隔。负数表示减价，正数表示加价。 
adjust_fee值的个数必须和sub_order_ids个数一样</desc>
</param>
<param>
<name>post_fee</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>单位是分,值不能小于0,值必须在采购单可改的范围内。 
post_fee和sub_order_ids  至少有一组不能为空</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单id</desc>
</param>
<param>
<name>sub_order_ids</name>
<type>String</type>
<required>optional</required>
<desc>采购子单id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.order.remark.update</name>
<desc>供应商修改采购单备注</desc>
<request>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>required</required>
<desc>采购单编号</desc>
</param>
<param>
<name>supplier_memo</name>
<type>String</type>
<required>required</required>
<desc>备注旗子(供应商操作)</desc>
</param>
<param>
<name>supplier_memo_flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>1</min_value>
<desc>旗子的标记，1-5之间的数字。非1-5之间，都采用1作为默认。 
1:红色 
2:黄色 
3:绿色 
4:蓝色 
5:粉红色</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.orders.get</name>
<desc>分销商或供应商均可用此接口查询采购单信息. (发货处理请调用物流API中的发货接口)</desc>
<request>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>结束时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。若purchase_order_id没传，则此参数必传。</desc>
</param>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<optional>PurchaseOrder,sub_purchase_orders,sub_purchase_orders.SubPurchaseOrder</optional>
<default></default>
<desc>多个字段用","分隔。 
 
fields 
如果为空：返回所有采购单对象(purchase_orders)字段。 
如果不为空：返回指定采购单对象(purchase_orders)字段。 
 
例1： 
sub_purchase_orders.tc_order_id 表示只返回tc_order_id  
例2： 
sub_purchase_orders表示只返回子采购单列表</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。（大于0的整数。默认为1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。（每页条数不超过50条）</desc>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<required>optional</required>
<desc>采购单编号或分销流水号，若其它参数没传，则此参数必传。</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>起始时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。若purchase_order_id没传，则此参数必传。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，不传默认查询所有采购单。根据身份选择自身状态。可选值:&lt;br&gt; 
 
 *供应商：&lt;br&gt; 
WAIT_SELLER_SEND_GOODS(等待发货)&lt;br&gt; 
WAIT_SELLER_CONFIRM_PAY(待确认收款)&lt;br&gt; 
WAIT_BUYER_PAY(等待付款)&lt;br&gt; 
WAIT_BUYER_CONFIRM_GOODS(已发货)&lt;br&gt; 
TRADE_REFUNDING(退款中)&lt;br&gt; 
TRADE_FINISHED(采购成功)&lt;br&gt; 
TRADE_CLOSED(已关闭)。&lt;br&gt; 
WAIT_SELLER_SEND_GOODS_WAIT_ACOUNT (已付款（待分账），待发货。只对代销分账支持)&lt;br&gt; 
WAIT_SELLER_SEND_GOODS_ACOUNTED(已付款（已分账），待发货。只对代销分账支持)&lt;br&gt; 
 
  *分销商：&lt;br&gt; 
WAIT_BUYER_PAY(等待付款)&lt;br&gt; 
WAIT_BUYER_CONFIRM_GOODS(待收货确认)&lt;br&gt; 
TRADE_FOR_PAY(已付款)&lt;br&gt; 
TRADE_REFUNDING(退款中)&lt;br&gt; 
TRADE_FINISHED(采购成功)&lt;br&gt; 
TRADE_CLOSED(已关闭)。&lt;br&gt; 
WAIT_BUYER_CONFIRM_GOODS_WAIT_ACOUNT(已付款（待分账），已发货。只对代销分账支持)&lt;br&gt; 
WAIT_BUYER_CONFIRM_GOODS_ACOUNTED(已付款（已分账），已发货。只对代销分账支持)&lt;br&gt;</desc>
</param>
<param>
<name>time_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值：trade_time_type(采购单按照成交时间范围查询),update_time_type(采购单按照更新时间范围查询)</desc>
</param>
</request>
<response>
<param>
<name>purchase_orders</name>
<type>PurchaseOrder</type>
<level>Object Array</level>
<desc>采购单及子采购单信息。返回 PurchaseOrder 包含的字段信息。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的采购单记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.add</name>
<desc>添加分销平台产品数据。业务逻辑与分销系统前台页面一致。 
 
    * 产品图片默认为空 
    * 产品发布后默认为下架状态</desc>
<request>
<param>
<name>alarm_number</name>
<type>Number</type>
<required>required</required>
<desc>警戒库存必须是0到29999。</desc>
</param>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>所属类目id，参考Taobao.itemcats.get，不支持成人等类目，输入成人类目id保存提示类目属性错误。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在地：市，例：“杭州”</desc>
</param>
<param>
<name>cost_price</name>
<type>String</type>
<required>optional</required>
<desc>代销采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>经销采购价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<desc>产品描述，长度为5到25000字符。</desc>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>have_guarantee</name>
<type>String</type>
<required>required</required>
<desc>是否有保修，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>have_invoice</name>
<type>String</type>
<required>required</required>
<desc>是否有发票，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>产品主图，大小不超过500k，格式为gif,jpg,jpeg,png,bmp等图片</desc>
</param>
<param>
<name>input_properties</name>
<type>String</type>
<required>optional</required>
<desc>自定义属性。格式为pid:value;pid:value</desc>
</param>
<param>
<name>is_authz</name>
<type>String</type>
<required>optional</required>
<desc>添加产品时，添加入参isAuthz:yes|no  
yes:需要授权  
no:不需要授权  
默认是需要授权</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>optional</required>
<desc>导入的商品ID</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>产品名称，长度不超过60个字节。</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码，长度不能超过60个字节。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>产品主图图片空间相对路径或绝对路径</desc>
</param>
<param>
<name>postage_ems</name>
<type>String</type>
<required>optional</required>
<desc>ems费用，单位：元。例：“10.56”。 大小为0.00元到999999元之间。</desc>
</param>
<param>
<name>postage_fast</name>
<type>String</type>
<required>optional</required>
<desc>快递费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>运费模板ID，参考taobao.postages.get。</desc>
</param>
<param>
<name>postage_ordinary</name>
<type>String</type>
<required>optional</required>
<desc>平邮费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。</desc>
</param>
<param>
<name>postage_type</name>
<type>String</type>
<required>required</required>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）,默认seller。</desc>
</param>
<param>
<name>productcat_id</name>
<type>Number</type>
<required>required</required>
<desc>产品线ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>产品属性，格式为pid:vid;pid:vid</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性别名，格式为：pid:vid:alias;pid:vid:alias（alias为别名）</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>required</required>
<desc>所在地：省，例：“浙江”</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<desc>产品库存必须是1到999999。</desc>
</param>
<param>
<name>retail_price_high</name>
<type>String</type>
<required>required</required>
<desc>最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。</desc>
</param>
<param>
<name>retail_price_low</name>
<type>String</type>
<required>required</required>
<desc>最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_dealer_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的经销采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序。其中每个值的单位：元。例：“10.56,12.3”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku的商家编码。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>sku的属性。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_quantitys</name>
<type>String</type>
<required>optional</required>
<desc>sku的库存。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>sku_standard_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的市场价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>required</required>
<desc>标准价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>optional</required>
<desc>分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）、ALL（代销和经销都做）</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>产品创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.image.delete</name>
<desc>产品图片删除，只删除图片信息，不真正删除图片</desc>
<request>
<param>
<name>position</name>
<type>Number</type>
<required>required</required>
<desc>图片位置</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>properties表示sku图片的属性。key:value形式，key是pid，value是vid。如果position是0的话，则properties需要是必传项</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.image.upload</name>
<desc>产品主图图片空间相对路径或绝对路径添加或更新，或者是图片上传。如果指定位置的图片已存在，则覆盖原有信息。如果位置为1,自动设为主图；如果位置为0，表示属性图片</desc>
<request>
<param>
<name>image</name>
<type>byte[]</type>
<required>special</required>
<desc>产品图片</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>special</required>
<desc>产品主图图片空间相对路径或绝对路径</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>required</required>
<desc>图片位置，0-14之间。0：操作sku属性图片，1：主图，2-5：细节图，6-14：额外主图</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>properties表示sku图片的属性。key:value形式，key是pid，value是vid。如果position是0的话，则properties需要是必传项</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.sku.add</name>
<desc>添加产品SKU信息</desc>
<request>
<param>
<name>agent_cost_price</name>
<type>String</type>
<required>special</required>
<desc>代销采购价</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>special</required>
<desc>经销采购价</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>产品ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>sku属性</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<max_value>1000000</max_value>
<min_value>0</min_value>
<desc>sku产品库存，在0到1000000之间，如果不传，则库存为0</desc>
</param>
<param>
<name>sku_number</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>required</required>
<desc>市场价，最大值1000000000</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.sku.delete</name>
<desc>根据sku properties删除sku数据</desc>
<request>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品id</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>sku属性</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.sku.update</name>
<desc>产品SKU信息更新</desc>
<request>
<param>
<name>agent_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>代销采购价</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>经销采购价</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>sku属性</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<desc>产品SKU库存</desc>
</param>
<param>
<name>sku_number</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>optional</required>
<desc>市场价</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>操作时间</desc>
</param>
<param>
<name>result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.skus.get</name>
<desc>产品sku查询</desc>
<request>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>产品ID</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>FenxiaoSku</type>
<level>Object Array</level>
<desc>sku信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.product.update</name>
<desc>更新分销平台产品数据，不传更新数据返回失败&lt;br&gt; 
1. 对sku进行增、删操作时，原有的sku_ids字段会被忽略，请使用sku_properties和sku_properties_del。&lt;br&gt;</desc>
<request>
<param>
<name>alarm_number</name>
<type>Number</type>
<required>optional</required>
<desc>警戒库存必须是0到29999。</desc>
</param>
<param>
<name>category_id</name>
<type>Number</type>
<required>optional</required>
<desc>所属类目id，参考Taobao.itemcats.get，不支持成人等类目，输入成人类目id保存提示类目属性错误。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>所在地：市，例：“杭州”</desc>
</param>
<param>
<name>cost_price</name>
<type>String</type>
<required>optional</required>
<desc>代销采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>dealer_cost_price</name>
<type>String</type>
<required>optional</required>
<desc>经销采购价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述，长度为5到25000字符。</desc>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>折扣ID</desc>
</param>
<param>
<name>have_guarantee</name>
<type>String</type>
<required>optional</required>
<desc>是否有保修，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>have_invoice</name>
<type>String</type>
<required>optional</required>
<desc>是否有发票，可选值：false（否）、true（是），默认false。</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>主图图片，如果pic_path参数不空，则优先使用pic_path，忽略该参数</desc>
</param>
<param>
<name>input_properties</name>
<type>String</type>
<required>optional</required>
<desc>自定义属性。格式为pid:value;pid:value</desc>
</param>
<param>
<name>is_authz</name>
<type>String</type>
<required>optional</required>
<desc>产品是否需要授权isAuthz:yes|no  
yes:需要授权  
no:不需要授权</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>产品名称，长度不超过60个字节。</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码，长度不能超过60个字节。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>产品主图图片空间相对路径或绝对路径</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>postage_ems</name>
<type>String</type>
<required>optional</required>
<desc>ems费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
</param>
<param>
<name>postage_fast</name>
<type>String</type>
<required>optional</required>
<desc>快递费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>运费模板ID，参考taobao.postages.get。更新时必须指定运费类型为 buyer，否则不更新。</desc>
</param>
<param>
<name>postage_ordinary</name>
<type>String</type>
<required>optional</required>
<desc>平邮费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
</param>
<param>
<name>postage_type</name>
<type>String</type>
<required>optional</required>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）。</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>产品属性</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性别名</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>optional</required>
<desc>所在地：省，例：“浙江”</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<desc>产品库存必须是1到999999。</desc>
</param>
<param>
<name>retail_price_high</name>
<type>String</type>
<required>optional</required>
<desc>最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。</desc>
</param>
<param>
<name>retail_price_low</name>
<type>String</type>
<required>optional</required>
<desc>最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku采购价格，单位元，例："10.50,11.00,20.50"，字段必须和上面的sku_ids或sku_properties保持一致。</desc>
</param>
<param>
<name>sku_dealer_cost_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku的经销采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序。其中每个值的单位：元。例：“10.56,12.3”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>sku_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku id列表，例：1001,1002,1003。如果传入sku_properties将忽略此参数。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>sku商家编码 ，单位元，例："S1000,S1002,S1003"，字段必须和上面的id或sku_properties保持一致，如果没有可以写成",,"</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>sku属性。格式:pid:vid;pid:vid,表示一组属性如:1627207:3232483;1630696:3284570,表示一组:机身颜色:军绿色;手机套餐:一电一充。多组之间用逗号“,”区分。(属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid) 
通过此字段可新增和更新sku。若传入此值将忽略sku_ids字段。sku其他字段与此值保持一致。</desc>
</param>
<param>
<name>sku_properties_del</name>
<type>String</type>
<required>optional</required>
<desc>根据sku属性删除sku信息。需要按组删除属性。</desc>
</param>
<param>
<name>sku_quantitys</name>
<type>String</type>
<required>optional</required>
<desc>sku库存，单位元，例："10,20,30"，字段必须和sku_ids或sku_properties保持一致。</desc>
</param>
<param>
<name>sku_standard_prices</name>
<type>String</type>
<required>optional</required>
<desc>sku市场价，单位元，例："10.50,11.00,20.50"，字段必须和上面的sku_ids或sku_properties保持一致。</desc>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<required>optional</required>
<desc>标准价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>发布状态，可选值：up（上架）、down（下架）、delete（删除），输入非法字符则忽略。</desc>
</param>
</request>
<response>
<param>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间，时间格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.productcats.get</name>
<desc>查询供应商的所有产品线数据。根据登陆用户来查询，不需要其他入参</desc>
<request>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<optional>ProductCat</optional>
<desc>返回字段列表</desc>
</param>
</request>
<response>
<param>
<name>productcats</name>
<type>ProductCat</type>
<level>Object Array</level>
<desc>产品线列表。返回 ProductCat 包含的字段信息。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.fenxiao.products.get</name>
<desc>查询供应商的产品数据。 
 
    * 入参传入pids将优先查询，即只按这个条件查询。 
    *入参传入sku_number将优先查询(没有传入pids)，即只按这个条件查询(最多显示50条) 
    * 入参fields传skus将查询sku的数据，不传该参数默认不查询，返回产品的其它信息。 
    * 入参fields传入images将查询多图数据，不传只返回主图数据。 
    * 入参fields仅对传入pids生效（只有按ID查询时，才能查询额外的数据） 
    * 查询结果按照产品发布时间倒序，即时间近的数据在前。</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>结束修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>skus,images</optional>
<desc>指定查询额外的信息，可选值：skus（sku数据）、images（多图），多个可选值用逗号分割。</desc>
</param>
<param>
<name>is_authz</name>
<type>String</type>
<required>optional</required>
<desc>查询产品列表时，查询入参“是否需要授权” 
yes:需要授权  
no:不需要授权</desc>
</param>
<param>
<name>item_ids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>可根据导入的商品ID列表查询，优先级次于产品ID、sku_numbers，高于其他分页查询条件。最大限制20，用逗号分割，例如：“1001,1002,1003,1004,1005”</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码（大于0的整数，默认1）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数（默认20，最大50）</desc>
</param>
<param>
<name>pids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>30</max_list_size>
<desc>产品ID列表（最大限制30），用逗号分割，例如：“1001,1002,1003,1004,1005”</desc>
</param>
<param>
<name>productcat_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品线ID</desc>
</param>
<param>
<name>sku_number</name>
<type>String</type>
<required>optional</required>
<desc>sku商家编码</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>开始修改时间</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>产品状态，可选值：up（上架）、down（下架），不传默认查询所有</desc>
</param>
</request>
<response>
<param>
<name>products</name>
<type>FenxiaoProduct</type>
<level>Object Array</level>
<desc>产品对象记录集。返回 FenxiaoProduct 包含的字段信息。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询结果记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.poster.appointedposters.get</name>
<desc>取得最近最热门的画报。与频道有关，按点击排序</desc>
<request>
<param>
<name>appointed_type</name>
<type>String</type>
<required>required</required>
<desc>HOT(热门），RECOMMEND（推荐）</desc>
</param>
<param>
<name>channel_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>15</max_list_size>
<desc>频道ID列表</desc>
</param>
<param>
<name>re_num</name>
<type>Number</type>
<required>optional</required>
<desc>请求返回的记录数，默认10条，最多20条，如果请求超过20或者小于等于0，则按10条返回</desc>
</param>
</request>
<response>
<param>
<name>appointedposters</name>
<type>Huabao</type>
<level>Object Array</level>
<desc>画报列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.poster.channel.get</name>
<desc>根据频道ID获取频道信息</desc>
<request>
<param>
<name>channel_id</name>
<type>Number</type>
<required>required</required>
<desc>根据频道ID获取频道信息</desc>
</param>
</request>
<response>
<param>
<name>channel</name>
<type>HuabaoChannel</type>
<level>Object</level>
<desc>频道信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.poster.channels.get</name>
<desc>获取画报所有频道信息</desc>
<response>
<param>
<name>channels</name>
<type>HuabaoChannel</type>
<level>Object Array</level>
<desc>返回频道列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.poster.postauctions.get</name>
<desc>根据画报ID获取相关商品</desc>
<request>
<param>
<name>poster_id</name>
<type>Number</type>
<required>required</required>
<max_value>2147483646</max_value>
<min_value>1</min_value>
<desc>画报ID</desc>
</param>
</request>
<response>
<param>
<name>posterauctions</name>
<type>HuabaoAuctionInfo</type>
<level>Object Array</level>
<desc>返回画报商品列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.poster.posterdetail.get</name>
<desc>通过画报ID取得画报信息，上一张，下一张，图片列表等信息</desc>
<request>
<param>
<name>poster_id</name>
<type>Number</type>
<required>required</required>
<max_value>2147483646</max_value>
<min_value>1</min_value>
<desc>画报id</desc>
</param>
</request>
<response>
<param>
<name>poster</name>
<type>Huabao</type>
<level>Object</level>
<desc>根据ID获取画报</desc>
</param>
<param>
<name>poster_pics</name>
<type>HuabaoPicture</type>
<level>Object Array</level>
<desc>根据画报ID获取画报图片</desc>
</param>
</response>
</api>
<api>
<name>taobao.poster.posters.get</name>
<desc>获取频道ID对应的画报列表</desc>
<request>
<param>
<name>channel_id</name>
<type>Number</type>
<required>required</required>
<desc>频道ID</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>10</min_value>
<desc>每页条数</desc>
</param>
</request>
<response>
<param>
<name>posters</name>
<type>Huabao</type>
<level>Object Array</level>
<desc>画报列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.poster.posters.search</name>
<desc>根据画报关键词、发布时间、画报制作者、编辑推荐、特色推荐进行搜索，同时支持多种排序方式。此接口至少需要一个查询条件方可进行查询，如key_word，start_date，end_date，channel_ids，editor_recommend，user_nick，recommend_factor，至少有一个查询条件。</desc>
<request>
<param>
<name>channel_ids</name>
<type>Number</type>
<required>special</required>
<max_length>100</max_length>
<max_list_size>20</max_list_size>
<desc>频道id列表</desc>
</param>
<param>
<name>editor_recommend</name>
<type>Number</type>
<required>special</required>
<max_value>1</max_value>
<min_value>1</min_value>
<desc>编辑推荐：editor_recommend = 1；</desc>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<required>special</required>
<desc>结束时间</desc>
</param>
<param>
<name>key_word</name>
<type>String</type>
<required>special</required>
<desc>关键词出现在标题，短标题，标签中</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<desc>每页显示画报数
&lt;br&gt;注：
&lt;br&gt;1.当输入的值小于10或者大于20，会按照默认值10返回
&lt;br&gt;2.最大支持20条返回</desc>
</param>
<param>
<name>recommend_factor</name>
<type>Number</type>
<required>special</required>
<max_value>10</max_value>
<min_value>0</min_value>
<desc>服饰 频道	{ 
推荐系数  2 	服饰—平铺图; 
推荐系数  5	服饰—真人秀; 
;推荐系数  7	服饰—风格秀场; 
} 
男人 频道{ 
推荐系数  8	男人频道—卖家画报; 
}	 
女人 频道{ 
推荐系数 6	女人频道—淘宝红人; 
推荐系数 8	女人频道—优质街拍; 
}	 
亲子 频道{ 
推荐系数 1	亲子频道—亲子单品； 
推荐系数 8	亲子频道—卖家画报； 
}		 
美容 频道{ 
推荐系数 5+关键字:护肤	美容频道—护肤内容； 
推荐系数 5+关键字:彩妆	美容频道—彩妆内容； 
推荐系数 5+关键字:美发	美容频道—扎发类内容； 
} 
居家 频道{ 
推荐系数 5	居家频道—线下体验馆-爱蜂潮； 
}</desc>
</param>
<param>
<name>sort_type</name>
<type>Number</type>
<required>optional</required>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>1："点击升序"； 
2："点击降序"； 
3："创建时间升序"； 
4："创建时间降序"；</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>special</required>
<desc>开始时间</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>special</required>
<desc>制作画报的 用户名</desc>
</param>
</request>
<response>
<param>
<name>posters</name>
<type>Huabao</type>
<level>Object Array</level>
<desc>返回画报列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.avgwaittime.get</name>
<desc>根据客服ID和日期，获取该客服"当日接待的所有客户的平均等待时长"。  &lt;br/&gt; 
备注：  &lt;br/&gt; 
1、如果是操作者ID=被查者ID，返回被查者ID的"当日接待的所有客户的平均等待时长"。  &lt;br/&gt; 
2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日接待的所有客户的平均等待时长"。service_staff_id为所有子帐号，用 "," 隔开 &lt;br/&gt; 
3、如果操作者是主账户，他可以查询所有子帐号的"当日接待的所有客户的平均等待时长"。  service_staff_id为所有子帐号，用 "," 隔开&lt;br/&gt; 
 4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。  &lt;br/&gt; 
 5、开始时间与结束时间之间的间隔不能超过7天  &lt;br/&gt; 
 6、不能查询90天以前的数据  &lt;br/&gt; 
 7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束时间</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始时间</desc>
</param>
</request>
<response>
<param>
<name>waiting_time_list_on_days</name>
<type>WaitingTimesOnDay</type>
<level>Object Array</level>
<desc>平均等待时长</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.chatlog.get</name>
<desc>调用前确认开通聊天记录保存到服务器的服务</desc>
<request>
<param>
<name>end_date</name>
<type>String</type>
<required>required</required>
<desc>聊天消息终止时间，如2010-03-24</desc>
</param>
<param>
<name>from_id</name>
<type>String</type>
<required>required</required>
<desc>聊天消息被查询用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>String</type>
<required>required</required>
<desc>聊天消息起始时间，如2010-02-01</desc>
</param>
<param>
<name>to_id</name>
<type>String</type>
<required>required</required>
<desc>聊天消息相关方ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
</request>
<response>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>聊天记录数目。</desc>
</param>
<param>
<name>msgs</name>
<type>Msg</type>
<level>Object Array</level>
<desc>聊天消息列表，即Msg[]，direction=0为from_id发送消息给to_id，direction=1为to_id发送消息给from_id</desc>
</param>
<param>
<name>ret</name>
<type>Number</type>
<level>Basic</level>
<desc>返回码：&lt;br&gt; 
10000:成功；&lt;br&gt; 
50000：时间非法，包括1)时间段超过7天,或2)起始时间距今超过30天，或3)时间格式不对；&lt;br&gt; 
40000：聊天用户ID不是该店铺的帐号或子帐号查询主帐号私密联系人的聊天记录；&lt;br&gt; 
30000：系统错误，主要是入参时间早与开通聊天记录保存到服务器的时间。包括必填参数为空等&lt;br&gt;</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.chatpeers.get</name>
<desc>获取聊天对象列表，查询时间段&lt;=7天,只支持xml返回</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>字符集</desc>
</param>
<param>
<name>chat_id</name>
<type>String</type>
<required>required</required>
<desc>聊天用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>end_date</name>
<type>String</type>
<required>required</required>
<desc>查询结束日期。如2010-03-24，与起始日期跨度不能超过7天</desc>
</param>
<param>
<name>start_date</name>
<type>String</type>
<required>required</required>
<desc>查询起始日期。如2010-02-01，与当前日期间隔小于1个月。</desc>
</param>
</request>
<response>
<param>
<name>chatpeers</name>
<type>Chatpeer</type>
<level>Object Array</level>
<desc>聊天对象ID列表</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>成员数目。</desc>
</param>
<param>
<name>ret</name>
<type>Number</type>
<level>Basic</level>
<desc>返回码： 
10000:成功； 

60000：时间非法，包括1)时间段超过7天,或2)起始时间距今超过30天，或3)时间格式不对； 

50000：聊天用户ID不是该店铺的帐号； 

40000：系统错误，包括必填参数为空。</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.chatrecord.get</name>
<desc>该接口会返回一个聊天记录的下载地址。 
请于5分钟以后使用该链接下载(因为文件大小的不同，生成日志的时间会延长到50分钟),该链接有如下限制：&lt;br/&gt; 
1.该链接的有效期为3个小时，逾期作废。&lt;br/&gt; 
2.同一链接只能使用一次。&lt;br/&gt; 
用户点击地址，下载聊天记录压缩包（压缩包中含有1个文件或多个文件，查询了几个用户的聊天记录，就含有几个文本文件）&lt;br/&gt; 
文件格式：以不同聊天对象为单位，每段聊天记录空一行。 
&lt;br/&gt; 
yyyy-MM-dd HH:mm:ss NICK-a:message&lt;br/&gt; 
yyyy-MM-dd HH:mm:ss NICK-客服:message&lt;br/&gt; 
yyyy-MM-dd HH:mm:ss NICK-a:message&lt;br/&gt; 
&lt;不同对象空一行&gt; 
yyyy-MM-dd HH:mm:ss NICK-b:message&lt;br/&gt; 
yyyy-MM-dd HH:mm:ss NICK-b:message&lt;br/&gt; 
yyyy-MM-dd HH:mm:ss NICK-客服:message&lt;br/&gt; 
备注：&lt;br/&gt; 
1、如果是操作者ID=被查者ID，返回被查者ID的"聊天记录"。&lt;br/&gt; 
2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"聊天记录"。&lt;br/&gt; 
3、如果操作者是主账户，他可以查询所有子帐号的"聊天记录"。&lt;br/&gt; 
4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。&lt;br/&gt; 
5、开始时间与结束时间之间的间隔不能超过7天&lt;br/&gt; 
6、不能查询30天以前的记录&lt;br/&gt; 
7、不能查询当天的数据&lt;br/&gt;</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>截止日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1920</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始日期</desc>
</param>
</request>
<response>
<param>
<name>log_file_url</name>
<type>String</type>
<level>Basic</level>
<desc>聊天日志文件下载url</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.evals.get</name>
<desc>根据用户id查询用户对应的评价详细情况， 
主账号id可以查询店铺内子账号的评价 
组管理员可以查询组内账号的评价 
非管理员的子账号可以查自己的评价</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束时间</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>想要查询的账号列表</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始时间</desc>
</param>
</request>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示成功</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
<param>
<name>staff_eval_details</name>
<type>EvalDetail</type>
<level>Object Array</level>
<desc>评价具体数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.evaluation.get</name>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"客服评价统计" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"客服评价统计"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"客服评价统计"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"客服评价统计"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询开始日期</desc>
</param>
</request>
<response>
<param>
<name>staff_eval_stat_on_days</name>
<type>StaffEvalStatOnDay</type>
<level>Object Array</level>
<desc>客服平均统计列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.groupmember.get</name>
<desc>用某个组管理员账号查询，返回该组组名、和该组所有组成员ID（E客服的分流设置）。 
 
用旺旺主帐号查询，返回所有组的组名和该组所有组成员ID。 
 
返回的组成员ID可以是多个，用 "," 隔开。 
 
被查者ID只能传入一个。 
 
组成员中排名最靠前的ID是组管理员ID</desc>
<request>
<param>
<name>manager_id</name>
<type>String</type>
<required>required</required>
<max_length>128</max_length>
<desc>被查询用户组管理员ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
</request>
<response>
<param>
<name>group_member_list</name>
<type>GroupMember</type>
<level>Object Array</level>
<desc>组及其成员列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.loginlogs.get</name>
<desc>通过用户id查询用户自己或者子账户的登录日志： 
主账号可以查询自己和店铺子账户的登录日志（查询时需要输入子账号，多个用，隔开） 
组管理员可以查询自己和组内子账号的登录日志（查询时需要输入子账号，多个用，隔开） 
非组管理员的子账户只能查询自己的登录日志</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询登录日志的结束时间，必须按示例的格式，否则会返回错误</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>需要查询登录日志的账号列表</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询登录日志的开始日期，必须按示例的格式，否则会返回错误</desc>
</param>
</request>
<response>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>在指定时间段登录日志的条数</desc>
</param>
<param>
<name>loginlogs</name>
<type>LoginLog</type>
<level>Object Array</level>
<desc>登录日志具体信息</desc>
</param>
<param>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>被查询的用户id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.noreplynum.get</name>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"未回复情况" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"未回复情况"（未回复人数、未回复的ID）。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"未回复情况"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"未回复情况"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始日期</desc>
</param>
</request>
<response>
<param>
<name>non_reply_stat_on_days</name>
<type>NonReplyStatOnDay</type>
<level>Object Array</level>
<desc>未回复统计列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.onlinetime.get</name>
<desc>描述：根据客服ID和日期，获取该客服"当日在线时长"。 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"当日在线时长"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日在线时长"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"当日在线时长"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、日累计在线时长定义：当日该用户累计的旺旺在线时长 
 
    6、开始时间与结束时间之间的间隔不能超过7天 
    7、不能查询90天以前的数据 
    8、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始日期</desc>
</param>
</request>
<response>
<param>
<name>online_times_list_on_days</name>
<type>OnlineTimesOnDay</type>
<level>Object Array</level>
<desc>客服在线时长（按天统计，排列）</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.receivenum.get</name>
<desc>根据操作者ID，返回被查者ID指定时间段内每个帐号的"已接待人数"&lt;br/&gt; 
备注：&lt;br/&gt; 
1、如果是操作者ID=被查者ID，返回被查者ID的"已接待人数"。&lt;br/&gt; 
2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"已接待人数"。&lt;br/&gt; 
3、如果操作者是主账户，他可以查询所有子帐号的"已接待人数"。&lt;br/&gt; 
（注意：这里说的是授权是主帐号，可以查询所有子帐号的数据，具体要查询哪些子账号的数据，需要在service_staff_id具体指定，而不是service_staff_id直接输入主帐号）&lt;br/&gt; 
 4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。&lt;br/&gt; 
 5、规则：某客服在1天内和同一个客户交流了多次，已回复人数算1。&lt;br/&gt; 
6、"已接待人数"定义：买家、卖家彼此发过至少1条消息 ，不论谁先发都可以。&lt;br/&gt; 
  7、被查者ID可以是多个，用 "," 隔开，id数不能超过30。&lt;br/&gt; 
  8、开始时间与结束时间之间的间隔不能超过7天&lt;br/&gt; 
  9、不能查询90天以前的数据&lt;br/&gt; 
  10、不能查询当天的记录&lt;br/&gt; 
   11、查询日期精确到日&lt;br/&gt;</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询接待人数的结束日期 时间精确到日 时分秒可以直接传00:00:00</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询接待人数的开始日期 时间精确到日 时分秒可直接传 00:00:00</desc>
</param>
</request>
<response>
<param>
<name>reply_stat_list_on_days</name>
<type>ReplyStatOnDay</type>
<level>Object Array</level>
<desc>客服回复列表，按天统计，排列</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.streamweigths.get</name>
<desc>获取当前登录用户自己的店铺内的分流权重设置</desc>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示返回正确</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>返回数据条数</desc>
</param>
<param>
<name>staff_stream_weights</name>
<type>StreamWeight</type>
<level>Object Array</level>
<desc>分流权重数据</desc>
</param>
<param>
<name>total_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>返回数据的总权重，返回数据为空的时候没有这个数字</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.caturl.get</name>
<desc>淘宝客类目推广URL</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>类目id.注意：这里的类目id是淘宝后台发布商品的类目id.</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>推广者的淘宝会员昵称.注：这里指的是淘宝的登录会员名</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>special</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>optional</required>
<desc>关键词</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_item</name>
<type>TaobaokeItem</type>
<level>Object</level>
<desc>只返回taobaoke_cat_click_url</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.items.convert</name>
<desc>淘宝客商品转换</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>num_iid,title,nick,pic_url,price,click_url,commission,ommission_rate,commission_num,commission_volume,shop_click_url,seller_credit_score,item_location,volume</optional>
<desc>需返回的字段列表.可选值:num_iid,title,nick,pic_url,price,click_url,commission,ommission_rate,commission_num,commission_volume,shop_click_url,seller_credit_score,item_location,volume
;字段之间用","分隔.</desc>
</param>
<param>
<name>is_mobile</name>
<type>Boolean</type>
<required>optional</required>
<desc>标识一个应用是否来在无线或者手机应用,如果是true则会使用其他规则加密点击串.如果不穿值,则默认是false.</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>推广者的淘宝会员昵称.注：指的是淘宝的会员登录名</desc>
</param>
<param>
<name>num_iids</name>
<type>Number</type>
<required>required</required>
<max_list_size>50</max_list_size>
<desc>淘宝客商品数字id串.最大输入40个.格式如:"value1,value2,value3" 用" , "号分隔商品数字id</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>special</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_items</name>
<type>TaobaokeItem</type>
<level>Object Array</level>
<desc>淘宝客商品对象列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.items.detail.get</name>
<desc>查询淘宝客推广商品详细信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>TaobaokeItemDetail</optional>
<desc>需返回的字段列表.可选值:TaobaokeItemDetail淘宝客商品结构体中的所有字段;字段之间用","分隔。item_detail需要设置到Item模型下的字段,如设置:num_iid,detail_url等; 只设置item_detail,则不返回的Item下的所有信息.注：item结构中的skus、videos、props_name不返回</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>淘宝用户昵称，注：指的是淘宝的会员登录名.如果昵称错误,那么客户就收不到佣金.每个淘宝昵称都对应于一个pid，在这里输入要结算佣金的淘宝昵称，当推广的商品成功后，佣金会打入此输入的淘宝昵称的账户。具体的信息可以登入阿里妈妈的网站查看.</desc>
</param>
<param>
<name>num_iids</name>
<type>Number</type>
<required>required</required>
<max_list_size>20</max_list_size>
<desc>淘宝客商品数字id串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔商品id.</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<max_length>12</max_length>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>special</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_item_details</name>
<type>TaobaokeItemDetail</type>
<level>Object Array</level>
<desc>淘宝客商品对象列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.items.get</name>
<desc>查询淘宝客推广商品,不能通过设置cid=0来查询</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<desc>商品所在地</desc>
</param>
<param>
<name>auto_send</name>
<type>String</type>
<required>optional</required>
<desc>是否自动发货</desc>
</param>
<param>
<name>cash_coupon</name>
<type>String</type>
<required>optional</required>
<desc>是否支持抵价券，设置为true表示该商品支持抵价券，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>cash_ondelivery</name>
<type>String</type>
<required>optional</required>
<desc>是否支持货到付款，设置为true表示该商品是支持货到付款，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<max_value>2147483647</max_value>
<desc>商品所属分类id</desc>
</param>
<param>
<name>end_commissionNum</name>
<type>String</type>
<required>optional</required>
<desc>最高累计推广佣金选项</desc>
</param>
<param>
<name>end_commissionRate</name>
<type>String</type>
<required>optional</required>
<desc>最高佣金比率选项，如：2345表示23.45%。注：要起始佣金比率和最高佣金比率一起设置才有效。</desc>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<required>optional</required>
<desc>可选值和start_credit一样.start_credit的值一定要小于或等于end_credit的值。注：end_credit与start_credit一起使用才生效</desc>
</param>
<param>
<name>end_price</name>
<type>String</type>
<required>optional</required>
<desc>最高价格</desc>
</param>
<param>
<name>end_totalnum</name>
<type>String</type>
<required>optional</required>
<desc>累计推广量范围结束</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>num_iid,title,nick,pic_url,price,click_url,commission,commission_rate,commission_num,commission_volume,shop_click_url,seller_credit_score,item_location,volume</optional>
<desc>需返回的字段列表.可选值:num_iid,title,nick,pic_url,price,click_url,commission,commission_rate,commission_num,commission_volume,shop_click_url,seller_credit_score,item_location,volume
;字段之间用","分隔</desc>
</param>
<param>
<name>guarantee</name>
<type>String</type>
<required>optional</required>
<desc>是否查询消保卖家</desc>
</param>
<param>
<name>is_mobile</name>
<type>Boolean</type>
<required>optional</required>
<desc>标识一个应用是否来在无线或者手机应用,如果是true则会使用其他规则加密点击串.如果不穿值,则默认是false.</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>special</required>
<desc>商品标题中包含的关键字. 注意:查询时keyword,cid至少选择其中一个参数</desc>
</param>
<param>
<name>mall_item</name>
<type>String</type>
<required>optional</required>
<desc>是否商城的商品，设置为true表示该商品是属于淘宝商城的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>淘宝用户昵称，注：指的是淘宝的会员登录名.如果昵称错误,那么客户就收不到佣金.每个淘宝昵称都对应于一个pid，在这里输入要结算佣金的淘宝昵称，当推广的商品成功后，佣金会打入此输入的淘宝昵称的账户。具体的信息可以登入阿里妈妈的网站查看.
&lt;font color="red"&gt;注意nick和pid至少需要传递一个,如果2个都传了,将以pid为准&lt;/font&gt;</desc>
</param>
<param>
<name>onemonth_repair</name>
<type>String</type>
<required>optional</required>
<desc>是否30天维修，设置为true表示该商品是支持30天维修，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>overseas_item</name>
<type>String</type>
<required>optional</required>
<desc>是否海外商品，设置为true表示该商品是属于海外商品，默认为false</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>1000000</max_value>
<desc>结果页数.1~99</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>400</max_value>
<desc>每页返回结果数.最大每页40</desc>
</param>
<param>
<name>pid</name>
<type>String</type>
<required>special</required>
<max_length>20</max_length>
<desc>用户的pid,必须是mm_xxxx_0_0这种格式中间的"xxxx".
&lt;font color="red"&gt;注意nick和pid至少需要传递一个,如果2个都传了,将以pid为准,且pid的最大长度是20&lt;/font&gt;</desc>
</param>
<param>
<name>real_describe</name>
<type>String</type>
<required>optional</required>
<desc>是否如实描述(即:先行赔付)商品，设置为true表示该商品是如实描述的商品，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>sevendays_return</name>
<type>String</type>
<required>optional</required>
<desc>是否支持7天退换，设置为true表示该商品支持7天退换，设置为false或不设置表示不判断这个属性</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>默认排序:default

price_desc(价格从高到低) 
price_asc(价格从低到高) 
credit_desc(信用等级从高到低) 
commissionRate_desc(佣金比率从高到低) 
commissionRate_asc(佣金比率从低到高) 
commissionNum_desc(成交量成高到低) 
commissionNum_asc(成交量从低到高) 
commissionVolume_desc(总支出佣金从高到低) 
commissionVolume_asc(总支出佣金从低到高) 
delistTime_desc(商品下架时间从高到低) 
delistTime_asc(商品下架时间从低到高)</desc>
</param>
<param>
<name>start_commissionNum</name>
<type>String</type>
<required>optional</required>
<desc>起始累计推广量佣金.注：返回的数据是30天内累计推广量，具该字段要与最高累计推广量一起使用才生效</desc>
</param>
<param>
<name>start_commissionRate</name>
<type>String</type>
<required>optional</required>
<desc>起始佣金比率选项，如：1234表示12.34%</desc>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<required>optional</required>
<desc>卖家信用: 
 
1heart(一心)  
2heart (两心)  
3heart(三心)  
4heart(四心)  
5heart(五心)  
1diamond(一钻)  
2diamond(两钻)  
3diamond(三钻)  
4diamond(四钻)  
5diamond(五钻)  
1crown(一冠)  
2crown(两冠)  
3crown(三冠)  
4crown(四冠)  
5crown(五冠)  
1goldencrown(一黄冠)  
2goldencrown(二黄冠)  
3goldencrown(三黄冠)  
4goldencrown(四黄冠)  
5goldencrown(五黄冠)</desc>
</param>
<param>
<name>start_price</name>
<type>String</type>
<required>optional</required>
<desc>起始价格.传入价格参数时,需注意起始价格和最高价格必须一起传入,并且 start_price &lt;= end_price</desc>
</param>
<param>
<name>start_totalnum</name>
<type>String</type>
<required>optional</required>
<desc>累计推广量范围开始</desc>
</param>
<param>
<name>vip_card</name>
<type>String</type>
<required>optional</required>
<desc>是否支持VIP卡，设置为true表示该商品支持VIP卡，设置为false或不设置表示不判断这个属性</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_items</name>
<type>TaobaokeItem</type>
<level>Object Array</level>
<desc>淘宝客商品对象列表.不返回taobaoke_cat_click_url和keyword_click_url两个字段。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.listurl.get</name>
<desc>淘宝客关键词搜索URL</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>推广者的淘宝会员昵称.注：这里指的是淘宝的登录会员名</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>special</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>required</required>
<desc>关键词</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_item</name>
<type>TaobaokeItem</type>
<level>Object</level>
<desc>只返回keyword_click_url</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.report.get</name>
<desc>淘宝客报表查询</desc>
<request>
<param>
<name>date</name>
<type>String</type>
<required>required</required>
<desc>需要查询报表的日期，有效的日期为最近3个月内的某一天，格式为:yyyyMMdd,如20090520.</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>TaobaokeReportMember</optional>
<desc>需返回的字段列表.可选值:TaobaokeReportMember淘宝客报表成员结构体中的所有字段;字段之间用","分隔.</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>499</max_value>
<min_value>1</min_value>
<desc>当前页数.只能获取1-499页数据.</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<desc>每页返回结果数,默认是40条.最大每页100</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_report</name>
<type>TaobaokeReport</type>
<level>Object</level>
<desc>淘宝客报表</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.shops.convert</name>
<desc>淘宝客店铺转换</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>user_id,shop_title,click_url,commission_rate</optional>
<desc>需返回的字段列表.可选值:TaobaokeShop淘宝客商品结构体中的user_id,shop_title,click_url,commission_rate;字段之间用","分隔.</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>推广者的淘宝会员昵称.注：这里指的是淘宝的登录会员名</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>special</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准&lt;br&gt;
&lt;red&gt;注：填写pid只需要填写pid中的数字，例如：pid为mm_1234567_0_0入参的时候填写1234567&lt;/red&gt;</desc>
</param>
<param>
<name>sids</name>
<type>Number</type>
<required>required</required>
<max_list_size>50</max_list_size>
<desc>店铺id串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔店铺id.</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_shops</name>
<type>TaobaokeShop</type>
<level>Object Array</level>
<desc>淘宝客店铺对象列表,不能返回shop_type,seller_credit,auction_coun,
total_auction</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.shops.get</name>
<desc>提供对参加了淘客推广的店铺的搜索</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>前台类目id</desc>
</param>
<param>
<name>end_auctioncount</name>
<type>String</type>
<required>optional</required>
<desc>店铺商品数查询结束值</desc>
</param>
<param>
<name>end_commissionrate</name>
<type>String</type>
<required>optional</required>
<desc>店铺佣金比例查询结束值</desc>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<required>optional</required>
<desc>店铺掌柜信用等级查询结束
店铺的信用等级总共为20级 1-5:1heart-5heart;6-10:1diamond-5diamond;11-15:1crown-5crown;16-20:1goldencrown-5goldencrown</desc>
</param>
<param>
<name>end_totalaction</name>
<type>String</type>
<required>optional</required>
<desc>店铺累计推广数查询结束值</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>user_id,click_url,shop_title,commission_rate,seller_credit,shop_type,auction_count,total_auction</optional>
<desc>需要返回的字段，目前包括如下字段 user_id click_url shop_title commission_rate seller_credit shop_type auction_count total_auction</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>special</required>
<desc>店铺主题关键字查询</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>淘宝用户昵称，注：指的是淘宝的会员登录名.如果昵称错误,那么客户就收不到佣金.每个淘宝昵称都对应于一个pid，在这里输入要结算佣金的淘宝昵称，当推广的商品成功后，佣金会打入此输入的淘宝昵称的账户。具体的信息可以登入阿里妈妈的网站查看</desc>
</param>
<param>
<name>only_mall</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否只显示商城店铺</desc>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<required>optional</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.结果页1~99</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.最大每页40</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>special</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
</param>
<param>
<name>start_auctioncount</name>
<type>String</type>
<required>optional</required>
<desc>店铺宝贝数查询开始值</desc>
</param>
<param>
<name>start_commissionrate</name>
<type>String</type>
<required>optional</required>
<desc>店铺佣金比例查询开始值，注意佣金比例是x10000的整数.50表示0.5%</desc>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<required>optional</required>
<desc>店铺掌柜信用等级起始
店铺的信用等级总共为20级 1-5:1heart-5heart;6-10:1diamond-5diamond;11-15:1crown-5crown;16-20:1goldencrown-5goldencrown</desc>
</param>
<param>
<name>start_totalaction</name>
<type>String</type>
<required>optional</required>
<desc>店铺累计推广量开始值</desc>
</param>
</request>
<response>
<param>
<name>taobaoke_shops</name>
<type>TaobaokeShop</type>
<level>Object Array</level>
<desc>搜索结果列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的店铺总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taobaoke.tool.relation</name>
<desc>判断用户pid是否是appkey关联的注册用户</desc>
<request>
<param>
<name>pubid</name>
<type>Number</type>
<required>required</required>
<desc>用户的pubid 用来判断这个pubid是否是appkey关联的开发者的注册用户</desc>
</param>
</request>
<response>
<param>
<name>tools_user</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回true或false表示是否关联用户</desc>
</param>
</response>
</api>
<api>
<name>taobao.comet.discardinfo.get</name>
<desc>获取一个appkey的哪些用户丢失了消息</desc>
<request>
<param>
<name>end</name>
<type>Date</type>
<required>optional</required>
<desc>指定截止日志，如果不传则为服务端当前时间</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>用户nick</desc>
</param>
<param>
<name>start</name>
<type>Date</type>
<required>required</required>
<desc>指定从那个时间开始找丢弃的消息</desc>
</param>
<param>
<name>types</name>
<type>String</type>
<required>optional</required>
<desc>指定多个消息类型</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>optional</required>
<desc>指定查看那个用户的丢弃消息</desc>
</param>
</request>
<response>
<param>
<name>discard_info_list</name>
<type>DiscardInfo</type>
<level>Object Array</level>
<desc>丢弃消息的列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.increment.customer.permit</name>
<desc>提供app为自己的用户开通增量消息服务功能</desc>
<request>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>表示与topics相对应的消息状态。各个消息主题间用";"分隔，各个状态间用","分隔，消息主题必须和topics一致。如果为all时，表示开通应用订阅的所有的消息。 
如果不填写,会默认开通应用所订阅的所有消息。</desc>
</param>
<param>
<name>topics</name>
<type>String</type>
<required>optional</required>
<desc>应用为用户开通的主动通知的消息主题（或消息类别），该主题必须是应用订阅的主题。如果应用未订阅该主题，则系统会自动过滤掉该主题。各个主题间用";"分隔。 
如果不填写，会默认开通应用所订阅的所有消息。</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<max_list_size>3</max_list_size>
<desc>用户需要开通的功能。值可为get,notify和syn分别表示增量api取消息，主动发送消息和同步数据功能。这三个值可任意无序组合。应用在为用户开通相应功能前需先订阅相应的功能；get和notify在主动通知界面中订阅，syn在mysql数据同步步界面中订阅。 
当重复开通时，只会在已经开通的功能上，开通新的功能，不会覆盖旧的开通。例如：在开通get功能后，再次开通notify功能的结果是开通了get和notify功能；而不会只开通notify功能。 
在开通时，type里面的参数会根据应用订阅的类型进行相应的过虑。如应用只订阅主动通知，则默认值过滤后为get,notify，如果应用只订阅数据同步服务，默认值过滤后为syn。</desc>
</param>
</request>
<response>
<param>
<name>app_customer</name>
<type>AppCustomer</type>
<level>Object</level>
<desc>当订阅成功后，返回的订阅情况。具体内容见AppCustomer数据结构。</desc>
</param>
</response>
</api>
<api>
<name>taobao.increment.customer.stop</name>
<desc>供应用关闭其用户的增量消息服务功能，这样可以节省ISV的流量。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>应用要关闭增量消息服务的用户昵称</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<max_list_size>3</max_list_size>
<desc>应用需要关闭用户的功能。取值可为get,notify和syn分别表示增量api取消息，主动发送消息和同步数据功能。用户关闭相应功能前,需应用已为用户经开通了相应的功能。这三个参数可无序任意组合。在关闭时，type里面的参数会根据应用订阅的类型进行相应的过虑。如应用只订阅主动通知，则默认值过滤后为get,notify，如果应用只订阅数据同步服务，默认值过滤后为syn。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>关闭增量消息或数据同步是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.increment.customers.get</name>
<desc>提供查询应用为自身用户所开通的增量消息服务信息。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>AppCustomer</optional>
<desc>需要返回的字段。可填写的字段参见AppCustomer中的返回字段。如：nick,created,status,type,subscriptions。</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>查询用户的昵称。当为空时通过分页方式查询appkey开通的所有用户,最多填入20个昵称。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>分页查询时，查询的页码。此参数只有nicks为空时起作用。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>0</min_value>
<desc>分布查询时，页的大小。此参数只有当nicks为空时起作用。</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<max_list_size>3</max_list_size>
<desc>查询用户开通的功能。值可为get,notify和syn分别表示增量api取消息，主动发送消息和同步数据功能。这三个值不分次序。在查询时，type里面的参数会根据应用订阅的类型进行相应的过虑。如应用只订阅主动通知，则默认值过滤后为get,notify，如果应用只订阅数据同步服务，默认值过滤后为syn。</desc>
</param>
</request>
<response>
<param>
<name>app_customers</name>
<type>AppCustomer</type>
<level>Object Array</level>
<desc>查询到的用户开通信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询到的开通增量服务的用户数</desc>
</param>
</response>
</api>
<api>
<name>taobao.increment.items.get</name>
<desc>开通主动通知业务的APP可以通过该接口获取商品变更通知信息 
&lt;font color="red"&gt;建议获取增量消息的时间间隔是：半个小时&lt;/font&gt;</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>消息所对应的操作时间的最大值。和start_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了start_modified，默认为与start_modified同一天的23:59:59；否则默认为调用接口当天的23:59:59。（格式：yyyy-MM-dd HH:mm:ss）&lt;br&gt;
&lt;font color="red"&gt;注意：start_modified和end_modified的日期必须在必须在同一天内，比如：start_modified设置2000-01-01 00:00:00，则end_modified必须设置为2000-01-01这个日期&lt;/font&gt;</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>消息所属于的用户的昵称。设置此参数，返回的消息会根据传入nick的进行过滤。自用型AppKey的昵称默认为自己的绑定昵称，此参数无效。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>消息所对应的操作时间的最小值和end_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了end_modified，默认为与 end_modified同一天的00:00:00，否则默认为调用接口当天的00:00:00。（格式：yyyy-MM-dd HH:mm:ss）&lt;br&gt;
&lt;font color="red"&gt;注意：start_modified和end_modified的日期必须在必须在同一天内，比如：start_modified设置2000-01-01 00:00:00，则end_modified必须设置为2000-01-01这个日期&lt;/font&gt;</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>商品操作状态，默认查询所有状态的数据，除了默认值外每次只能查询一种状态。具体类型列表见： 
ItemAdd（新增商品）  
ItemUpshelf（上架商品，自动上架商品不能获取到增量信息）  
ItemDownshelf（下架商品）  
ItemDelete（删除商品）  
ItemUpdate（更新商品）  
ItemRecommendDelete（取消橱窗推荐商品）  
ItemRecommendAdd（橱窗推荐商品）  
ItemZeroStock（商品卖空） 
ItemPunishDelete（小二删除商品） 
ItemPunishDownshelf（小二下架商品） 
ItemPunishCc（小二CC商品） 
ItemSkuZeroStock（商品SKU卖空） 
ItemStockChanged（修改商品库存）</desc>
</param>
</request>
<response>
<param>
<name>notify_items</name>
<type>NotifyItem</type>
<level>Object Array</level>
<desc/>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.increment.refunds.get</name>
<desc>开通主动通知业务的APP可以通过该接口获取用户的退款变更通知信息 
&lt;font color="red"&gt;建议在获取增量消息的时间间隔是：半个小时&lt;/font&gt;</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>消息所对应的操作时间的最大值。和start_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了start_modified，默认为与start_modified同一天的23:59:59；否则默认为调用接口当天的23:59:59。（格式：yyyy-MM-dd HH:mm:ss）&lt;br&gt;
&lt;font color="red"&gt;注意：start_modified和end_modified的日期必须在必须在同一天内，比如：start_modified设置2000-01-01 00:00:00，则end_modified必须设置为2000-01-01这个日期&lt;/font&gt;</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>消息所属于的用户的昵称。设置此参数，返回的消息会根据传入nick的进行过滤。自用型appKey的昵称默认为自己的绑定昵称，此参数无效。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>消息所对应的操作时间的最小值。和end_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了end_modified，默认为与 end_modified同一天的00:00:00，否则默认为调用接口当天的00:00:00。（格式：yyyy-MM-dd HH:mm:ss）&lt;br&gt;
&lt;font color="red"&gt;注意：start_modified和end_modified的日期必须在必须在同一天内，比如：start_modified设置2000-01-01 00:00:00，则end_modified必须设置为2000-01-01这个日期&lt;/font&gt;</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退款操作状态，默认查询所有状态的数据，除了默认值外每次只能查询一种状态。具体字段说明请见 退款消息状态</desc>
</param>
</request>
<response>
<param>
<name>notify_refunds</name>
<type>NotifyRefund</type>
<level>Object Array</level>
<desc>获取的退款通知消息体 ，具体字段见NotifyRefund数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.increment.trades.get</name>
<desc>开通主动通知业务的APP可以通过该接口获取用户的交易和评价变更通知信息 
&lt;font color="red"&gt;建议在获取增量消息的时间间隔是：半个小时&lt;/font&gt;</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>消息所对应的操作时间的最大值。和start_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了start_modified，默认为与start_modified同一天的23:59:59；否则默认为调用接口当天的23:59:59。（格式：yyyy-MM-dd HH:mm:ss）&lt;br&gt;
&lt;font color="red"&gt;注意：start_modified和end_modified的日期必须在必须在同一天内，比如：start_modified设置2000-01-01 00:00:00，则end_modified必须设置为2000-01-01这个日期&lt;/font&gt;</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>消息所属于的用户的昵称。设置此参数，返回的消息会根据传入nick的进行过滤。自用型appKey的昵称默认为自己的绑定昵称，此参数无效。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>200</max_length>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>消息所对应的操作时间的最小值。和end_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了end_modified，默认为与end_modified同一天的00:00:00，否则默认为调用接口当天的00:00:00。（格式：yyyy-MM-dd HH:mm:ss）&lt;br&gt;
&lt;font color="red"&gt;注意：start_modified和end_modified的日期必须在必须在同一天内，比如：start_modified设置2000-01-01 00:00:00，则end_modified必须设置为2000-01-01这个日期&lt;/font&gt;</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易或评价的状态，默认查询所有状态的数据，除了默认值外每次只能查询一种状态。除了交易超时提醒消息没有type分类以外，交易的其他消息都有type分类。 
可选值  
TradeCreate（创建交易）  
TradeModifyFee（修改交易费用）  
TradeCloseAndModifyDetailOrder（关闭或修改子订单）  
TradeClose（关闭交易）  
TradeBuyerPay（买家付款）  
TradeSellerShip（卖家发货）  
TradeDelayConfirmPay（延长收货时间）  
TradePartlyRefund（子订单退款成功）  
TradePartlyConfirmPay（子订单打款成功）  
TradeSuccess（交易成功）  
TradeTimeoutRemind（交易超时提醒）  
TradeRated（交易评价变更）  
TradeMemoModified（交易备注修改）  
TradeLogisticsAddressChanged（修改交易收货地址）  
TradeChanged（修改订单信息（SKU等））</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易所属的类型，默认查询所有类型的数据，除了默认值外每次只能查询一种类型。交易超时提醒类型的消息没有消息类型，固定返回“timeout”。 
可选值： 
ec（直冲）  
guarantee_trade（一口价、拍卖）  
auto_delivery（自动发货）  
cod（货到付款）  
independent_shop_trade（旺店标准版交易）  
independent_simple_trade（旺店入门版交易）  
shopex_trade（ShopEX版)  
netcn_trade（淘宝与万网合作版网）  
travel（旅游产品交易）  
fenxiao（分销平台交易）  
game_equipment（网游虚拟交易）</desc>
</param>
</request>
<response>
<param>
<name>notify_trades</name>
<type>NotifyTrade</type>
<level>Object Array</level>
<desc>获取的交易通知消息体 ，具体字段见NotifyTrade数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.kfc.keyword.search</name>
<desc>对输入的文本信息进行禁忌关键词匹配，返回匹配的结果</desc>
<request>
<param>
<name>apply</name>
<type>String</type>
<required>optional</required>
<desc>应用点，分为一级应用点、二级应用点。其中一级应用点通常是指某一个系统或产品，比如淘宝的商品应用（taobao_auction）；二级应用点，是指一级应用点下的具体的分类，比如商品标题(title)、商品描述(content)。不同的二级应用可以设置不同关键词。 
 
这里的apply参数是由一级应用点与二级应用点合起来的字符（一级应用点+"."+二级应用点），如taobao_auction.title。 
 
 
通常apply参数是不需要传递的。如有特殊需求（比如特殊的过滤需求，需要自己维护一套自己词库），需传递此参数。</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>需要过滤的文本信息</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>发布信息的淘宝会员名，可以不传</desc>
</param>
</request>
<response>
<param>
<name>kfc_search_result</name>
<type>KfcSearchResult</type>
<level>Object</level>
<desc>KFC关键词匹配返回的结果信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.time.get</name>
<desc>获取淘宝系统当前时间</desc>
<response>
<param>
<name>time</name>
<type>Date</type>
<level>Basic</level>
<desc>淘宝系统当前时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.result.get</name>
<desc>使用指南：http://open.taobao.com/doc/detail.htm?id=30 
1.此接口用于获取异步任务处理的结果，传入的task_id必需属于当前的appKey才可以 
2.此接口只返回执行完成的任务结果，未执行完的返回结果里面不包含任务结果，只有任务id，执行状态 
3.执行完成的每个task的子任务结果内容与单个任务的结果结构一致。如：taobao.topats.trades.fullinfo.get返回的子任务结果就会是Trade的结构体。</desc>
<request>
<param>
<name>task_id</name>
<type>Number</type>
<required>required</required>
<desc>任务id号，创建任务时返回的task_id</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>返回任务处理信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.task.delete</name>
<desc>可用于取消已经创建的ATS任务。&lt;/br&gt; 
条件限制：1)一次只可以取消一个任务&lt;/br&gt; 
         2）只能取消自己创建的任务&lt;/br&gt;</desc>
<request>
<param>
<name>task_id</name>
<type>Number</type>
<required>required</required>
<desc>需要取消的任务ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示操作是否成功，是为true，否为false。</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.tasks.get</name>
<desc>用于获取指定时间段内的定时API任务信息。&lt;/br&gt; 
条件：1）必须是本APPKEY创建的任务。&lt;/br&gt; 
     2)起始时间不能早于3天前的当前时刻。&lt;/br&gt; 
     3）结束时间不能晚于一天以后的当前时刻。&lt;/br&gt;</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>要查询的已经创建的定时任务的结束时间(这里的时间是指执行时间)。</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>要查询的已创建过的定时任务的开始时间(这里的时间是指执行时间)。</desc>
</param>
</request>
<response>
<param>
<name>tasks</name>
<type>Task</type>
<level>Object Array</level>
<desc>符合查询条件内的定时任务的结果集</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.inventory.detail.get</name>
<desc>查询库存详情，通过商品ID获取发送请求的卖家的库存详情</desc>
<request>
<param>
<name>inventory_type_list</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>库存类型列表，值包括： 
VENDIBLE--可销售库存 
FREEZE--冻结库存 
ONWAY--在途库存 
DEFECT--残次品库存 
ENGINE_DAMAGE--机损 
BOX_DAMAGE--箱损</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编码</desc>
</param>
</request>
<response>
<param>
<name>inventory_list</name>
<type>WlbInventory</type>
<level>Object Array</level>
<desc>库存详情列表</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.inventory.sync</name>
<desc>将库存同步至IC</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>item_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型.存如下值  
IC_ITEM --表示IC商品;  
IC_SKU --表示IC最小单位商品; 
WLB_ITEM  --表示WLB商品. 
若值不在范围内，则按WLB_ITEM处理</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<desc>库存数量</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.inventorylog.query</name>
<desc>通过商品ID等几个条件来分页查询库存变更记录</desc>
<request>
<param>
<name>gmt_end</name>
<type>Date</type>
<required>optional</required>
<desc>结束修改时间,小于等于该时间</desc>
</param>
<param>
<name>gmt_start</name>
<type>Date</type>
<required>optional</required>
<desc>起始修改时间,大于等于该时间</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品ID</desc>
</param>
<param>
<name>op_type</name>
<type>String</type>
<required>optional</required>
<desc>库存操作作类型(可以为空) 
CHU_KU 1-出库 
RU_KU 2-入库 
FREEZE 3-冻结 
THAW 4-解冻 
CHECK_FREEZE 5-冻结确认 
CHANGE_KU 6-库存类型变更 
若值不在范围内，则按CHU_KU处理</desc>
</param>
<param>
<name>op_user_id</name>
<type>Number</type>
<required>optional</required>
<desc>可指定授权的用户来查询</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<required>optional</required>
<desc>单号</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编码</desc>
</param>
</request>
<response>
<param>
<name>inventory_log_list</name>
<type>WlbItemInventoryLog</type>
<level>Object Array</level>
<desc>库存变更记录列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.add</name>
<desc>添加物流宝商品，支持物流宝子商品和属性添加</desc>
<request>
<param>
<name>color</name>
<type>String</type>
<required>optional</required>
<desc>商品颜色</desc>
</param>
<param>
<name>goods_cat</name>
<type>String</type>
<required>optional</required>
<desc>货类</desc>
</param>
<param>
<name>height</name>
<type>Number</type>
<required>optional</required>
<desc>商品高度，单位毫米</desc>
</param>
<param>
<name>is_dangerous</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否危险品</desc>
</param>
<param>
<name>is_friable</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否易碎品</desc>
</param>
<param>
<name>is_sku</name>
<type>String</type>
<required>required</required>
<desc>是否sku</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>required</required>
<desc>商品编码</desc>
</param>
<param>
<name>length</name>
<type>Number</type>
<required>optional</required>
<desc>商品长度，单位毫米</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>商品名称</desc>
</param>
<param>
<name>package_material</name>
<type>String</type>
<required>optional</required>
<desc>商品包装材料类型</desc>
</param>
<param>
<name>price</name>
<type>Number</type>
<required>optional</required>
<desc>商品价格，单位：分</desc>
</param>
<param>
<name>pricing_cat</name>
<type>String</type>
<required>optional</required>
<desc>计价货类</desc>
</param>
<param>
<name>pro_name_list</name>
<type>Field List</type>
<required>optional</required>
<desc>属性名列表,目前支持的属性： 
毛重:GWeight	 
净重:Nweight 
皮重: Tweight 
自定义属性： 
paramkey1 
paramkey2 
paramkey3 
paramkey4</desc>
</param>
<param>
<name>pro_value_list</name>
<type>Field List</type>
<required>optional</required>
<desc>属性值列表： 
10,8</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>商品备注</desc>
</param>
<param>
<name>support_batch</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否支持批次</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>商品标题</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>NORMAL--普通商品 
COMBINE--组合商品 
DISTRIBUTION--分销</desc>
</param>
<param>
<name>volume</name>
<type>Number</type>
<required>optional</required>
<desc>商品体积，单位立方厘米</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品重量，单位G</desc>
</param>
<param>
<name>width</name>
<type>Number</type>
<required>optional</required>
<desc>商品宽度，单位毫米</desc>
</param>
</request>
<response>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>新增的商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.authorization.add</name>
<desc>添加商品的授权规则：添加规则之后代销商可以增加商品代销关系</desc>
<request>
<param>
<name>auth_type</name>
<type>Number</type>
<required>required</required>
<desc>授权类型：1=全量授权，0=部分授权 
当部分授权时，需要指定授权数量quantity</desc>
</param>
<param>
<name>authorize_end_time</name>
<type>Date</type>
<required>required</required>
<desc>授权结束时间</desc>
</param>
<param>
<name>authorize_start_time</name>
<type>Date</type>
<required>required</required>
<desc>授权开始时间</desc>
</param>
<param>
<name>consign_user_nick</name>
<type>String</type>
<required>required</required>
<desc>被授权人用户id</desc>
</param>
<param>
<name>item_id_list</name>
<type>String</type>
<required>required</required>
<desc>商品id列表，以英文逗号,分隔，最多可放入50个商品ID。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>255</max_length>
<desc>规则名称</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<desc>授权数量</desc>
</param>
<param>
<name>rule_code</name>
<type>String</type>
<required>required</required>
<desc>授权规则：目前只有GRANT_FIX，按照数量授权</desc>
</param>
</request>
<response>
<param>
<name>rule_id_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>授权规则ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.authorization.delete</name>
<desc>删除授权关系.若有建立代销关系，会将其代销关系冻结即将状态置为失效(代销关系)。</desc>
<request>
<param>
<name>authorize_id</name>
<type>Number</type>
<required>required</required>
<desc>授权关系ID</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.authorization.query</name>
<desc>查询授权关系,可由货主或被授权人查询。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>optional</required>
<desc>授权商品ID</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>255</max_length>
<desc>授权名称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
<param>
<name>rule_code</name>
<type>String</type>
<required>optional</required>
<desc>授权编码</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>状态： 只能输入如下值,范围外的默认按VALID处理;不选则查询所有;  
VALID -- 1 有效； INVALIDATION -- 2 失效</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>类型：可由不同角色来查询，默认值OWNER, 
OWNER -- 授权人, 
ON_COMMISSION -- 被授权人</desc>
</param>
</request>
<response>
<param>
<name>authorization_list</name>
<type>WlbAuthorization</type>
<level>Object Array</level>
<desc>授权关系列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.batch.query</name>
<desc>根据用户id，item id list和store code来查询商品库存信息和批次信息</desc>
<request>
<param>
<name>item_ids</name>
<type>String</type>
<required>required</required>
<desc>需要查询的商品ID列表，以字符串表示，ID间以;隔开</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，指定查询页数，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，每页查询数量，默认20，最大值50,大于50时按照50条查询</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编号</desc>
</param>
</request>
<response>
<param>
<name>item_inventory_batch_list</name>
<type>WlbItemBatchInventory</type>
<level>Object Array</level>
<desc>商品库存及批次信息查询结果</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>返回结果记录的数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.combination.create</name>
<desc>创建商品组合关系</desc>
<request>
<param>
<name>dest_item_list</name>
<type>Field List</type>
<required>required</required>
<desc>组合商品的id列表</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要建立组合关系的商品id</desc>
</param>
<param>
<name>proportion_list</name>
<type>Field List</type>
<required>optional</required>
<desc>组成组合商品的比例列表，描述组合商品的组合比例，默认为1,1,1</desc>
</param>
</request>
<response>
<param>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>组合关系创建时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.combination.delete</name>
<desc>删除商品组合关系</desc>
<request>
<param>
<name>dest_item_list</name>
<type>Field List</type>
<required>required</required>
<desc>组合商品的id列表</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>组合关系的商品id</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.combination.get</name>
<desc>根据商品id查询商品组合关系</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要查询的组合商品id</desc>
</param>
</request>
<response>
<param>
<name>item_id_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>组合子商品id列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.consignment.create</name>
<desc>代销商创建商品代销关系：货主创建授权规则，获得授权规则后方可创建商品代销关系。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id</desc>
</param>
<param>
<name>number</name>
<type>Number</type>
<required>required</required>
<desc>代销数量</desc>
</param>
<param>
<name>owner_item_id</name>
<type>Number</type>
<required>required</required>
<desc>货主商品id</desc>
</param>
<param>
<name>owner_user_id</name>
<type>Number</type>
<required>required</required>
<desc>货主id</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<required>required</required>
<desc>通过taobao.wlb.item.authorization.add接口创建后得到的rule_id，规则中设定了代销商可以代销的商品数量</desc>
</param>
</request>
<response>
<param>
<name>consignment_id</name>
<type>Number</type>
<level>Basic</level>
<desc>代销关系唯一标识</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.consignment.delete</name>
<desc>删除商品的代销关系</desc>
<request>
<param>
<name>ic_item_id</name>
<type>Number</type>
<required>required</required>
<desc>代销商前台宝贝ID</desc>
</param>
<param>
<name>owner_item_id</name>
<type>Number</type>
<required>required</required>
<desc>货主的物流宝商品ID</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<required>required</required>
<desc>授权关系id</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.consignment.page.get</name>
<desc>代销商角度分页查询物流宝商品的代销关系</desc>
<request>
<param>
<name>ic_item_id</name>
<type>Number</type>
<required>optional</required>
<desc>代销商宝贝id</desc>
</param>
<param>
<name>owner_item_id</name>
<type>Number</type>
<required>optional</required>
<desc>供应商商品id</desc>
</param>
<param>
<name>owner_user_nick</name>
<type>String</type>
<required>optional</required>
<desc>供应商用户昵称</desc>
</param>
</request>
<response>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>条件查询结果总数</desc>
</param>
<param>
<name>wlb_consign_ments</name>
<type>WlbConsignMent</type>
<level>Object Array</level>
<desc>代销关系列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.delete</name>
<desc>通过ItemId,UserId来删除单个商品</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>商品所有人淘宝nick</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.get</name>
<desc>根据商品ID获取商品信息,除了获取商品信息外还可获取商品属性信息和库存信息。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>WlbItem</type>
<level>Object</level>
<desc>商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.map.get</name>
<desc>根据物流宝商品ID查询商品映射关系</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要查询映射关系的物流宝商品id</desc>
</param>
</request>
<response>
<param>
<name>out_entity_item_list</name>
<type>OutEntityItem</type>
<level>Object Array</level>
<desc>外部商品实体列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.map.get.by.extentity</name>
<desc>根据外部实体类型和实体id查询映射的物流宝商品id</desc>
<request>
<param>
<name>ext_entity_id</name>
<type>Number</type>
<required>required</required>
<desc>外部实体类型对应的商品id</desc>
</param>
<param>
<name>ext_entity_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型： IC_ITEM--ic商品 IC_SKU--ic销售单元</desc>
</param>
</request>
<response>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流宝商品id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.query</name>
<desc>根据状态、卖家、SKU等信息查询商品列表</desc>
<request>
<param>
<name>is_sku</name>
<type>String</type>
<required>optional</required>
<desc>是否是最小库存单元，只有最小库存单元的商品才可以有库存,值只能给"true","false"来表示; 
若值不在范围内，则按true处理</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<max_length>64</max_length>
<desc>商家编码</desc>
</param>
<param>
<name>item_type</name>
<type>String</type>
<required>optional</required>
<desc>ITEM类型(只允许输入以下英文或空) 
NORMAL  0:普通商品;  
COMBINE  1:是否是组合商品  
DISTRIBUTION  2:是否是分销商品(货主是别人) 
若值不在范围内，则按NORMAL处理</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>商品名称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>50</max_value>
<min_value>1</min_value>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>父ID,只有is_sku=1时才能有父ID，商品也可以没有付商品</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>只能输入以下值或空： 
ITEM_STATUS_VALID -- 1 表示 有效； 
ITEM_STATUS_LOCK  -- 2 表示锁住。 
若值不在范围内，按ITEM_STATUS_VALID处理</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>255</max_length>
<desc>商品前台销售名字</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>WlbItem</type>
<level>Object Array</level>
<desc>商品信息列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.synchronize</name>
<desc>同步仓储商品与前台商品，建立仓储商品与前台商品的关系,并更新IC中的信息到仓储商品Item中</desc>
<request>
<param>
<name>ext_entity_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>外部实体ID</desc>
</param>
<param>
<name>ext_entity_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型.存如下值 
IC_ITEM   --表示IC商品 
IC_SKU    --表示IC最小单位商品 
若输入其他值，则按IC_ITEM处理</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>商品ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>商品所有人淘宝nick</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.synchronize.delete</name>
<desc>通过物流宝商品ID和IC商品ID删除映射关系。</desc>
<request>
<param>
<name>ext_entity_id</name>
<type>Number</type>
<required>required</required>
<max_length>64</max_length>
<desc>外部实体ID</desc>
</param>
<param>
<name>ext_entity_type</name>
<type>String</type>
<required>required</required>
<desc>外部实体类型.存如下值 IC_ITEM --表示IC商品; IC_SKU --表示IC最小单位商品;若输入其他值，则按IC_ITEM处理</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>物流宝商品ID</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.item.update</name>
<desc>修改物流宝商品信息</desc>
<request>
<param>
<name>color</name>
<type>String</type>
<required>optional</required>
<desc>商品颜色</desc>
</param>
<param>
<name>delete_property_key_list</name>
<type>Field List</type>
<required>optional</required>
<desc>需要删除的商品属性key列表</desc>
</param>
<param>
<name>goods_cat</name>
<type>String</type>
<required>optional</required>
<desc>商品货类</desc>
</param>
<param>
<name>height</name>
<type>Number</type>
<required>optional</required>
<desc>商品高度，单位厘米</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>要修改的商品id</desc>
</param>
<param>
<name>is_dangerous</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否危险品</desc>
</param>
<param>
<name>is_friable</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否易碎品</desc>
</param>
<param>
<name>length</name>
<type>Number</type>
<required>optional</required>
<desc>商品长度，单位厘米</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>要修改的商品名称</desc>
</param>
<param>
<name>package_material</name>
<type>String</type>
<required>optional</required>
<desc>商品包装材料类型</desc>
</param>
<param>
<name>pricing_cat</name>
<type>String</type>
<required>optional</required>
<desc>商品计价货类</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>要修改的商品备注</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>要修改的商品标题</desc>
</param>
<param>
<name>update_property_key_list</name>
<type>Field List</type>
<required>optional</required>
<desc>需要修改的商品属性值的列表，如果属性不存在，则新增属性</desc>
</param>
<param>
<name>update_property_value_list</name>
<type>Field List</type>
<required>optional</required>
<desc>需要修改的属性值的列表</desc>
</param>
<param>
<name>volume</name>
<type>Number</type>
<required>optional</required>
<desc>商品体积，单位立方厘米</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品重量，单位G</desc>
</param>
<param>
<name>width</name>
<type>Number</type>
<required>optional</required>
<desc>商品宽度，单位厘米</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.notify.message.confirm</name>
<desc>确认物流宝可执行消息</desc>
<request>
<param>
<name>message_id</name>
<type>Number</type>
<required>required</required>
<desc>物流宝通知消息的id，通过taobao.wlb.notify.message.page.get接口得到的WlbMessage数据结构中的id字段</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>物流宝消息确认时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.notify.message.page.get</name>
<desc>物流宝提供的消息通知查询接口，消息内容包括;出入库单不一致消息，取消订单成功消息，盘点单消息</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询条件：记录截至时间</desc>
</param>
<param>
<name>msg_code</name>
<type>String</type>
<required>optional</required>
<desc>通知消息编码： 
STOCK_IN_NOT_CONSISTENT---入库单不一致 
CANCEL_ORDER_SUCCESS---取消订单成功 
INVENTORY_CHECK---盘点 
CANCEL_ORDER_FAILURE---取消订单失败 
ORDER_REJECT--wms拒单 
ORDER_CONFIRMED--订单处理成功</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询的每页页数</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询条件：记录开始时间</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>消息状态： 
不需要确认：NO_NEED_CONFIRM 
已确认：CONFIRMED 
待确认：TO_BE_CONFIRM</desc>
</param>
</request>
<response>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>条件查询结果总数量</desc>
</param>
<param>
<name>wlb_messages</name>
<type>WlbMessage</type>
<level>Object Array</level>
<desc>消息结果列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.cancel</name>
<desc>取消物流宝订单</desc>
<request>
<param>
<name>wlb_order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编号</desc>
</param>
</request>
<response>
<param>
<name>error_code_list</name>
<type>String</type>
<level>Basic</level>
<desc>错误编码列表</desc>
</param>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间，只有在取消成功的情况下，才可以做</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.consign</name>
<desc>如果erp导入淘宝交易订单到物流宝，当物流宝订单已发货的时候，erp需要调用该接口来通知物流订单和淘宝交易订单已发货</desc>
<request>
<param>
<name>wlb_order_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>物流宝订单编号</desc>
</param>
</request>
<response>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.create</name>
<desc>创建物流宝订单，由外部ISV或者ERP，Elink，淘宝交易产生</desc>
<request>
<param>
<name>alipay_no</name>
<type>String</type>
<required>optional</required>
<desc>支付宝交易号</desc>
</param>
<param>
<name>attributes</name>
<type>String</type>
<required>optional</required>
<desc>该字段暂时保留</desc>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<max_length>64</max_length>
<desc>买家呢称</desc>
</param>
<param>
<name>expect_end_time</name>
<type>Date</type>
<required>optional</required>
<desc>期望结束时间，在入库单会使用到</desc>
</param>
<param>
<name>expect_start_time</name>
<type>Date</type>
<required>optional</required>
<desc>计划开始送达时间  在入库单中可能会使用</desc>
</param>
<param>
<name>invoince_info</name>
<type>String</type>
<required>optional</required>
<desc>{"invoince_info": [{"bill_type":"发票类型，必选", "bill_title":"发票抬头，必选", "bill_amount":"发票金额(单位是分)，必选","bill_content":"发票内容，可选"}]}</desc>
</param>
<param>
<name>is_finished</name>
<type>Boolean</type>
<required>required</required>
<desc>该物流宝订单是否已完成，如果完成则设置为true，如果为false，则需要等待继续创建订单商品信息。</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<required>optional</required>
<desc>物流宝订单编号，该接口约定每次最多只能传50条order_item_list，如果一个物流宝订单超过50条商品的时候，需要批量来调用该接口，第一次调用的时候，wlb_order_code为空，如果第一次创建成功，该接口返回wlb_order_code，其后继续再该订单上添加商品条目，需要带上wlb_order_code，out_biz_code，order_item_list,is_finished四个字段。</desc>
</param>
<param>
<name>order_flag</name>
<type>String</type>
<required>optional</required>
<desc>用字符串格式来表示订单标记列表：比如COD^PRESELL^SPLIT^LIMIT 等，中间用“^”来隔开 ---------------------------------------- 订单标记list（所有字母全部大写）： 1: COD –货到付款 2: LIMIT-限时配送 3: PRESELL-预售 5:COMPLAIN-已投诉 7:SPLIT-拆单， 8:EXCHANGE-换货， 9:VISIT-上门 ， 10: MODIFYTRANSPORT-是否可改配送方式， 
: 是否可改配送方式  默认可更改 
11 CONSIGN 物流宝代理发货,自动更改发货状态 
12: SELLER_AFFORD 是否卖家承担运费 默认是，即没 13: SYNC_RETURN_BILL，同时退回发票</desc>
</param>
<param>
<name>order_item_list</name>
<type>String</type>
<required>required</required>
<desc>订单商品列表： {"order_item_list":[{"trade_code":"可选,淘宝交易订单，并且不是赠品，必须要传订单来源编号"," sub_trade_code ":"可选,淘宝子交易号","item_id":"必须,商品Id","item_code":"必须,商家编码","item_name":"可选,物流宝商品名称","item_quantity":"必选,计划数量","item_price":"必选,物品价格,单位为分","owner_user_nick 
":"可选,货主nick 代销模式下会存在","flag":"判断是否为赠品0 不是1是","remarks":"可选,备注","batch_remark":"可选，批次描述信息会把这个信息带给WMS，但不会跟物流宝库存相关联"，"inventory_type":"库存类型1 可销售库存 101 类型用来定义残次品 201 冻结类型库存 301 在途库存","picture_url":"图片Url","distributor_user_nick": "分销商NICK","ext_order_item_code":"可选，外部商品的商家编码"]} ======================================== 如果订单中的商品条目数大于50条的时候，我们会校验，不能创建成功，需要你按照50个一批的数量传，需要分批调用该接口，第二次传的时候，需要带上wlb_order_code和is_finished和order_item_list三个字段是必传的，is_finished为true表示传输完毕，为false表示还没完全传完。</desc>
</param>
<param>
<name>order_sub_type</name>
<type>String</type>
<required>required</required>
<desc>订单子类型： 
（1）OTHER： 其他 
（2）TAOBAO_TRADE： 淘宝交易 
（3）OTHER_TRADE：其他交易 
（4）ALLCOATE： 调拨 
（5）PURCHASE:采购</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>required</required>
<desc>订单类型: 
（1）NORMAL_OUT ：正常出库 
（2）NORMAL_IN：正常入库 
（3）RETURN_IN：退货入库 
（4）EXCHANGE_OUT：换货出库</desc>
</param>
<param>
<name>out_biz_code</name>
<type>String</type>
<required>required</required>
<max_length>128</max_length>
<desc>外部订单业务ID，该编号在isv中是唯一编号， 用来控制并发，去重用</desc>
</param>
<param>
<name>package_count</name>
<type>Number</type>
<required>optional</required>
<desc>包裹件数，入库单和出库单中会用到</desc>
</param>
<param>
<name>payable_amount</name>
<type>Number</type>
<required>optional</required>
<desc>应收金额，cod订单必选</desc>
</param>
<param>
<name>prev_order_code</name>
<type>String</type>
<required>optional</required>
<desc>源订单编号</desc>
</param>
<param>
<name>receiver_info</name>
<type>String</type>
<required>optional</required>
<desc>发收方发货方信息必须传 手机和电话必选其一
收货方信息
邮编^^^省^^^市^^^区^^^具体地址^^^收件方名称^^^手机^^^电话

如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<max_length>4000</max_length>
<desc>备注</desc>
</param>
<param>
<name>schedule_end</name>
<type>String</type>
<required>optional</required>
<desc>投递时间范围要求,格式'15:20'用分号隔开</desc>
</param>
<param>
<name>schedule_start</name>
<type>String</type>
<required>optional</required>
<desc>投递时间范围要求,格式'13:20'用分号隔开</desc>
</param>
<param>
<name>schedule_type</name>
<type>String</type>
<required>optional</required>
<desc>投递时延要求:  
（1）INSTANT_ARRIVED： 当日达  
（2）TOMMORROY_MORNING_ARRIVED：次晨达 
（3）TOMMORROY_ARRIVED：次日达 
（4）工作日：WORK_DAY  
（5）节假日：WEEKED_DAY</desc>
</param>
<param>
<name>sender_info</name>
<type>String</type>
<required>optional</required>
<desc>发货方信息，发收方发货方信息必须传 手机和电话必选其一
邮编^^^省^^^市^^^区^^^具体地址^^^收件方名称^^^手机^^^电话
如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>service_fee</name>
<type>Number</type>
<required>optional</required>
<desc>cod服务费，只有cod订单的时候，才需要这个字段</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>仓库编码</desc>
</param>
<param>
<name>tms_info</name>
<type>String</type>
<required>optional</required>
<desc>出库单中可能会用到 
运输公司名称^^^运输公司联系人^^^运输公司运单号^^^运输公司电话^^^运输公司联系人身份证号 
 
======================================== 
如果某一个字段的数据为空时，必须传NA</desc>
</param>
<param>
<name>tms_order_code</name>
<type>String</type>
<required>optional</required>
<desc>运单编号，退货单时可能会使用</desc>
</param>
<param>
<name>tms_service_code</name>
<type>String</type>
<required>optional</required>
<max_length>64</max_length>
<desc>物流公司编码</desc>
</param>
<param>
<name>total_amount</name>
<type>Number</type>
<required>optional</required>
<desc>总金额</desc>
</param>
</request>
<response>
<param>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流宝订单创建成功后，返回物流宝的订单编号；如果订单创建失败，该字段为空。</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.page.get</name>
<desc>分页查询物流宝订单</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询截止时间</desc>
</param>
<param>
<name>order_code</name>
<type>String</type>
<required>optional</required>
<desc>物流订单编号</desc>
</param>
<param>
<name>order_status</name>
<type>Number</type>
<required>optional</required>
<desc>订单状态</desc>
</param>
<param>
<name>order_sub_type</name>
<type>String</type>
<required>optional</required>
<desc>订单子类型：  
（1）OTHER： 其他  
（2）TAOBAO_TRADE： 淘宝交易  
（3）OTHER_TRADE：其他交易 
（4）ALLCOATE： 调拨 
（5）CHECK:  盘点单 
（6）PURCHASE: 采购单</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>optional</required>
<desc>订单类型:  
（1）NORMAL_OUT ：正常出库  
（2）NORMAL_IN：正常入库  
（3）RETURN_IN：退货入库  
（4）EXCHANGE_OUT：换货出库</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页的第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页多少条</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询开始时间</desc>
</param>
</request>
<response>
<param>
<name>order_list</name>
<type>WlbOrder</type>
<level>Object Array</level>
<desc>分页查询返回结果</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.schedule.rule.add</name>
<desc>为订单的自动流转设置订单调度规则。规则设定之后，可以根据发货地区，精确路由订单至指定仓库处理。</desc>
<request>
<param>
<name>backup_store_id</name>
<type>Number</type>
<required>optional</required>
<desc>备用发货仓库服务id（通过taobao.wlb.subscription.query接口获得service_id）</desc>
</param>
<param>
<name>default_store_id</name>
<type>Number</type>
<required>required</required>
<desc>发货仓库服务id（通过taobao.wlb.subscription.query接口获得service_id）</desc>
</param>
<param>
<name>option</name>
<type>Field List</type>
<required>optional</required>
<desc>发货规则的额外规则设置： 
REMARK_STOP--有订单留言不自动下发 
COD_STOP--货到付款订单不自动下发 
CHECK_WAREHOUSE_DELIVER--检查仓库的配送范围</desc>
</param>
<param>
<name>prov_area_ids</name>
<type>String</type>
<required>required</required>
<desc>国家地区标准编码列表</desc>
</param>
</request>
<response>
<param>
<name>schedule_rule_id</name>
<type>Number</type>
<level>Basic</level>
<desc>新增成功的订单调度规则id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.order.schedule.rule.update</name>
<desc>修改物流宝订单调度规则</desc>
<request>
<param>
<name>backup_store_id</name>
<type>Number</type>
<required>optional</required>
<desc>备用发货仓库id</desc>
</param>
<param>
<name>default_store_id</name>
<type>Number</type>
<required>optional</required>
<desc>默认发货仓库id</desc>
</param>
<param>
<name>option</name>
<type>Field List</type>
<required>optional</required>
<desc>订单调度规则的额外规则设置： REMARK_STOP--有订单留言不自动下发 COD_STOP--货到付款订单不自动下发 CHECK_WAREHOUSE_DELIVER--检查仓库的配送范围</desc>
</param>
<param>
<name>prov_area_ids</name>
<type>String</type>
<required>optional</required>
<desc>国家地区标准编码列表</desc>
</param>
<param>
<name>schedule_rule_id</name>
<type>Number</type>
<required>required</required>
<desc>要修改的订单调度规则明细id</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderitem.page.get</name>
<desc>分页查询物流宝订单商品详情</desc>
<request>
<param>
<name>order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编码</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，指定查询页数，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页查询参数，每页查询数量，默认20，最大值50,大于50时按照50条查询</desc>
</param>
</request>
<response>
<param>
<name>order_item_list</name>
<type>WlbOrderItem</type>
<level>Object Array</level>
<desc>物流宝订单商品列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderschedulerule.delete</name>
<desc>删除单个订单调度规则</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>订单调度规则ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>商品userNick</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderschedulerule.query</name>
<desc>查询某个卖家的所有订单调度规则，提供分页查询。</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
</request>
<response>
<param>
<name>order_schedule_rule_list</name>
<type>WlbOrderScheduleRule</type>
<level>Object Array</level>
<desc>订单调度规则列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.orderstatus.get</name>
<desc>根据物流宝订单号查询物流宝订单至目前为止的流转状态列表</desc>
<request>
<param>
<name>order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编码</desc>
</param>
</request>
<response>
<param>
<name>wlb_order_status</name>
<type>WlbProcessStatus</type>
<level>Object Array</level>
<desc>订单流转信息状态列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.out.inventory.change.notify</name>
<desc>拥有自有仓的企业物流用户通过该接口把自有仓的库存通知到物流宝，由物流宝维护该库存，控制前台显示库存的准确性。</desc>
<request>
<param>
<name>change_count</name>
<type>Number</type>
<required>required</required>
<desc>库存变化数量</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>物流宝商品id或前台宝贝id（由type类型决定）</desc>
</param>
<param>
<name>op_type</name>
<type>String</type>
<required>required</required>
<desc>OUT--出库 
IN--入库</desc>
</param>
<param>
<name>order_source_code</name>
<type>String</type>
<required>optional</required>
<desc>订单号，如果source为TAOBAO_TRADE,order_source_code必须为淘宝交易号</desc>
</param>
<param>
<name>out_biz_code</name>
<type>String</type>
<required>required</required>
<desc>库存变化唯一标识，用于去重，一个外部唯一编码唯一标识一次库存变化。</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<required>required</required>
<desc>本次库存变化后库存余额</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>（1）OTHER： 其他  
（2）TAOBAO_TRADE： 淘宝交易  
（3）OTHER_TRADE：其他交易  
（4）ALLCOATE： 调拨  
（5）CHECK:盘点 
（6）PURCHASE:采购</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>目前非必须，系统会选择默认值</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>WLB_ITEM--物流宝商品 
IC_ITEM--淘宝商品 
IC_SKU--淘宝sku</desc>
</param>
</request>
<response>
<param>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>库存变化通知成功时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.replenish.statistics</name>
<desc>查询BI的统计的补货统计数据</desc>
<request>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>商品编码</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>商品名称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页参数，默认第一页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>50</max_value>
<desc>分页每页页数，默认20，最大50</desc>
</param>
<param>
<name>store_code</name>
<type>String</type>
<required>optional</required>
<desc>仓库编码</desc>
</param>
</request>
<response>
<param>
<name>replenish_list</name>
<type>WlbReplenish</type>
<level>Object Array</level>
<desc>补货统计列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>查询记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.subscription.query</name>
<desc>查询商家定购的所有服务,可通过入参状态来筛选</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>状态  
AUDITING 1-待审核;  
CANCEL 2-撤销 ; 
CHECKED 3-审核通过 ; 
FAILED 4-审核未通过 ; 
SYNCHRONIZING 5-同步中; 
只允许输入上面指定的值，且可以为空，为空时查询所有状态。若输错了，则按AUDITING处理。</desc>
</param>
</request>
<response>
<param>
<name>seller_subscription_list</name>
<type>WlbSellerSubscription</type>
<level>Object Array</level>
<desc>卖家定购的服务列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.tmsorder.query</name>
<desc>通过物流订单编号分页查询物流信息</desc>
<request>
<param>
<name>order_code</name>
<type>String</type>
<required>required</required>
<max_length>64</max_length>
<desc>物流订单编号</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录</desc>
</param>
</request>
<response>
<param>
<name>tms_order_list</name>
<type>WlbTmsOrder</type>
<level>Object Array</level>
<desc>物流订单运单信息列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.tradeorder.get</name>
<desc>根据交易类型和交易id查询物流宝订单详情</desc>
<request>
<param>
<name>trade_id</name>
<type>String</type>
<required>required</required>
<desc>指定交易类型的交易号</desc>
</param>
<param>
<name>trade_type</name>
<type>String</type>
<required>required</required>
<desc>交易类型: 
TAOBAO--淘宝交易 
PAIPAI--拍拍交易 
YOUA--有啊交易</desc>
</param>
</request>
<response>
<param>
<name>wlb_order_list</name>
<type>WlbOrder</type>
<level>Object Array</level>
<desc>物流宝订单列表信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.wlb.wlborder.get</name>
<desc>根据物流宝订单编号查询物流宝订单概要信息</desc>
<request>
<param>
<name>wlb_order_code</name>
<type>String</type>
<required>required</required>
<desc>物流宝订单编码</desc>
</param>
</request>
<response>
<param>
<name>wlb_order</name>
<type>WlbOrder</type>
<level>Object</level>
<desc>物流宝订单详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.marketing.promotion.kfc</name>
<desc>活动名称与描述违禁词检查</desc>
<request>
<param>
<name>promotion_desc</name>
<type>String</type>
<required>required</required>
<desc>活动描述</desc>
</param>
<param>
<name>promotion_title</name>
<type>String</type>
<required>required</required>
<desc>活动名称</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.marketing.promotions.get</name>
<desc>根据商品ID查询卖家使用该第三方工具对商品设置的所有优惠策略</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Promotion</optional>
<desc>需返回的优惠策略结构字段列表。可选值为Promotion中所有字段，如：promotion_id, promotion_title, item_id, status, tag_id等等</desc>
</param>
<param>
<name>num_iid</name>
<type>String</type>
<required>required</required>
<desc>商品数字ID。根据该ID查询商品下通过第三方工具设置的所有优惠策略</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>优惠策略状态。可选值：ACTIVE(有效)，UNACTIVE(无效)，若不传或者传入其他值，则默认查询全部</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>optional</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>promotions</name>
<type>Promotion</type>
<level>Object Array</level>
<desc>商品对应的所有优惠列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.marketing.tags.get</name>
<desc>查询人群标签，返回卖家创建的全部人群标签（有效的）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>UserTag</optional>
<desc>需要的返回字段，可选值为UserTag中所有字段</desc>
</param>
</request>
<response>
<param>
<name>user_tags</name>
<type>UserTag</type>
<level>Object Array</level>
<desc>标签列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.activity.get</name>
<desc>查询某个卖家的店铺优惠券领取活动 
返回，优惠券领取活动ID，优惠券ID，总领用量，每人限领量，已领取数量 
领取活动状态，优惠券领取链接 
最多50个优惠券</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>optional</required>
<desc>活动的id</desc>
</param>
</request>
<response>
<param>
<name>activitys</name>
<type>Activity</type>
<level>Object Array</level>
<desc>活动列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupon.buyer.search</name>
<desc>通过接口获得买家当前所有优惠券信息</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>查询有效期晚于查询日期的所有优惠券</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>20</max_value>
<min_value>10</min_value>
<desc>每页条数</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>optional</required>
<desc>店铺的名称，就是卖家的昵称</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>required</required>
<desc>unused：未使用，using：使用中,used,已经使用，overdue：已经过期，transfered：已经转发</desc>
</param>
</request>
<response>
<param>
<name>buyer_coupon_details</name>
<type>BuyerCouponDetail</type>
<level>Object Array</level>
<desc>返回的优惠券信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询结果是总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupondetail.get</name>
<desc>通过接口可以查询某个店铺优惠券的买家详细信息返回的信息，买家昵称， 使用渠道，使用状态，总数量</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>coupon_id</name>
<type>Number</type>
<required>required</required>
<desc>优惠券的id</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>查询的页号，结果集是分页返回的，每页20条</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>20</max_value>
<desc>每页行数</desc>
</param>
<param>
<name>state</name>
<type>String</type>
<required>optional</required>
<desc>优惠券使用情况unused：代表未使用using：代表使用中used：代表已使用。必须是unused，using，used</desc>
</param>
</request>
<response>
<param>
<name>coupon_details</name>
<type>CouponDetail</type>
<level>Object Array</level>
<desc>优惠券详细信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询数量总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupons.get</name>
<desc>查询卖家已经创建的优惠券，接口返回信息：优惠券ID，面值，创建时间，有效期，使用条件，使用渠道，创建渠道，优惠券总数量</desc>
<request>
<param>
<name>coupon_id</name>
<type>Number</type>
<required>optional</required>
<desc>优惠券的id，唯一标识这个优惠券</desc>
</param>
<param>
<name>denominations</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>3</min_value>
<desc>优惠券的面额，必须是3，5，10，20，50,100</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>优惠券的截止日期</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>查询的页号，结果集是分页返回的，每页20条</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>20</max_length>
<desc>每页条数</desc>
</param>
</request>
<response>
<param>
<name>coupons</name>
<type>Coupon</type>
<level>Object Array</level>
<desc>优惠券列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询的总数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.limitdiscount.detail.get</name>
<desc>限时打折详情查询。查询出指定限时打折的对应商品记录信息。</desc>
<request>
<param>
<name>limit_discount_id</name>
<type>Number</type>
<required>required</required>
<desc>限时打折ID。这个针对查询唯一限时打折情况。</desc>
</param>
</request>
<response>
<param>
<name>item_discount_detail_list</name>
<type>LimitDiscountDetail</type>
<level>Object Array</level>
<desc>限时打折对应的商品详情列表。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.limitdiscount.get</name>
<desc>分页查询某个卖家的限时打折信息。每页20条数据，按照结束时间降序排列。也可指定某一个限时打折id查询唯一的限时打折信息。</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>限时打折结束时间。输入的时间会被截取，年月日有效，时分秒忽略。</desc>
</param>
<param>
<name>limit_discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>限时打折ID。这个针对查询唯一限时打折情况。若此字段不为空，则说明操作为单条限时打折记录查询，其他字段忽略。若想分页按条件查询，这个字段置为空。</desc>
</param>
<param>
<name>page_number</name>
<type>Number</type>
<required>optional</required>
<desc>分页页号。默认1。当页数大于最大页数时，结果为最大页数的数据。</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>限时打折开始时间。输入的时间会被截取，年月日有效，时分秒忽略。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>限时打折活动状态。ALL:全部状态;OVER:已结束;DOING:进行中;PROPARE:未开始(只支持大写)。当limit_discount_id为空时，为空时，默认为全部的状态。</desc>
</param>
</request>
<response>
<param>
<name>limit_discount_list</name>
<type>LimitDiscount</type>
<level>Object Array</level>
<desc>限时打折列表。</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>满足该查询条件的限时打折总数量。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.meal.get</name>
<desc>搭配套餐查询。每个卖家最多创建50个搭配套餐，所以查询不会分页，会将所有的满足状态的搭配套餐全部查出。该接口不会校验商品的下架或库存为0，查询结果的状态表明搭配套餐在数据库中的状态，商品的状态请isv自己验证。在卖家后台页面点击查看会触发数据库状态的修改。 
</desc>
<request>
<param>
<name>meal_id</name>
<type>Number</type>
<required>optional</required>
<desc>搭配套餐id</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。默认时两种情况都会查询。</desc>
</param>
</request>
<response>
<param>
<name>meal_list</name>
<type>Meal</type>
<level>Object Array</level>
<desc>搭配套餐列表。</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activities.get</name>
<desc>查询活动列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页的页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>50</max_value>
<min_value>1</min_value>
<desc>每页的最大条数</desc>
</param>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具id</desc>
</param>
</request>
<response>
<param>
<name>contents</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销活动内容，可以通过ump sdk来进行处理</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activities.list.get</name>
<desc>按照营销活动id的列表ids，查询对应的营销活动列表。</desc>
<request>
<param>
<name>ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>40</max_list_size>
<desc>营销活动id列表。</desc>
</param>
</request>
<response>
<param>
<name>activities</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销活动列表！</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.add</name>
<desc>新增优惠活动。设置优惠活动的基本信息，比如活动时间，活动针对的对象（可以是满足某些条件的买家）</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>活动内容，通过ump sdk里面的MarkeitngTool来生成</desc>
</param>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具id</desc>
</param>
</request>
<response>
<param>
<name>act_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.delete</name>
<desc>删除营销活动。对应的活动详情等将会被全部删除。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.get</name>
<desc>查询营销活动</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
</request>
<response>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>营销活动的内容，可以通过ump sdk中的marketingTool来完成对该内容的处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.activity.update</name>
<desc>修改营销活动</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>营销活动内容，json格式，通过ump sdk 的marketingTool来生成</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.channel.get</name>
<desc>功能：获取渠道信息。 
说明： 
1、给出channel_keys时，返回所查询的渠道信息； 
2、channel_keys为空时，返回所有已维护的渠道信息。</desc>
<request>
<param>
<name>channel_keys</name>
<type>String</type>
<required>optional</required>
<desc>渠道代码以逗号(半角)隔开，若channel_keys为空，则返回所有已维护的渠道信息。</desc>
</param>
</request>
<response>
<param>
<name>channels</name>
<type>ChannelInfo</type>
<level>Object Array</level>
<desc>渠道信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.channel.remove</name>
<desc>功能：删除渠道信息。 
说明： 
1、referers不为空，则从当前渠道中按照给定的referers删除对应的referer；若所有referer都被清空，渠道信息也将被删除。 
2、referers为空时，删除渠道信息及所有关联的referer。</desc>
<request>
<param>
<name>channel_key</name>
<type>String</type>
<required>required</required>
<desc>标示某个渠道的代码（由新增渠道时添加）。</desc>
</param>
<param>
<name>referers</name>
<type>String</type>
<required>optional</required>
<desc>当前渠道中，需要删除的referer地址。 
referers为空，删除当前渠道信息，同时清空当前渠道已关联的所有referer。</desc>
</param>
</request>
<response>
<param>
<name>effect_referer_number</name>
<type>Number</type>
<level>Basic</level>
<desc>本次操作所影响到的referer个数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.add</name>
<desc>增加活动详情。活动详情里面包括活动的范围（店铺，商品），活动的参数（比如具体的折扣），参与类型（全部，部分，部分不参加）等信息。当参与类型为部分或部分不参加的时候需要和taobao.ump.range.add来配合使用。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>增加工具详情</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>活动详情内容，json格式，可以通过ump sdk中的MarketingTool来进行处理</desc>
</param>
</request>
<response>
<param>
<name>detail_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动详情的id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.delete</name>
<desc>删除活动详情</desc>
<request>
<param>
<name>detail_id</name>
<type>Number</type>
<required>required</required>
<desc>活动详情id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.get</name>
<desc>查询活动详情</desc>
<request>
<param>
<name>detail_id</name>
<type>Number</type>
<required>required</required>
<desc>活动详情的id</desc>
</param>
</request>
<response>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>活动详情信息，可以通过ump sdk中的MarketingTool来进行处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.list.add</name>
<desc>批量添加营销活动。替代单条添加营销详情的的API。此接口适用针对某个营销活动的多档设置，会按顺序插入detail。若在整个事务过程中出现断点，会将已插入完成的detail_id返回，注意记录这些id，并将其删除，会对交易过程中的优惠产生影响。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>营销活动id。</desc>
</param>
<param>
<name>details</name>
<type>String</type>
<required>required</required>
<desc>营销详情的列表。此列表由detail的json字符串组成。最多插入为10个。</desc>
</param>
</request>
<response>
<param>
<name>detail_id_list</name>
<type>Number</type>
<level>Basic Array</level>
<desc>返回对应的营销详情的id列表！若有某一条插入失败，会将插入成功的detail_id放到errorMessage里面返回，此时errorMessage里面会包含格式为(id1,id2,id3)的插入成功id列表。这些ids会对交易产生影响，通过截取此信息，将对应detail删除！</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.detail.update</name>
<desc>更新活动详情</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>活动详情内容，可以通过ump sdk中的MarketingTool来生成这个内容</desc>
</param>
<param>
<name>detail_id</name>
<type>Number</type>
<required>required</required>
<desc>活动详情id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.details.get</name>
<desc>分页查询优惠详情列表</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>营销活动id</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页的页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>50</max_value>
<min_value>1</min_value>
<desc>每页的最大条数</desc>
</param>
</request>
<response>
<param>
<name>contents</name>
<type>String</type>
<level>Basic Array</level>
<desc>活动详情的信息</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbb.getbycode</name>
<desc>根据营销积木块代码获取积木块。接口返回该代码最新版本的积木块。如果要查询某个非最新版本的积木块，可以使用积木块id查询接口。</desc>
<request>
<param>
<name>code</name>
<type>String</type>
<required>required</required>
<desc>营销积木块code</desc>
</param>
</request>
<response>
<param>
<name>mbb</name>
<type>String</type>
<level>Basic</level>
<desc>营销积木块的内容，通过ump sdk来进行处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbb.getbyid</name>
<desc>根据积木块id获取营销积木块。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>积木块的id</desc>
</param>
</request>
<response>
<param>
<name>mbb</name>
<type>String</type>
<level>Basic</level>
<desc>营销积木块定义信息，可以通过ump sdk里面的MBB.fromJson来处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbbs.get</name>
<desc>获取营销积木块列表，可以根据类型获取，也可以将该字段设为空，获取所有的</desc>
<request>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>积木块类型。如果该字段为空表示查出所有类型的 
现在有且仅有如下几种：resource,condition,action,target</desc>
</param>
</request>
<response>
<param>
<name>mbbs</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销积木块内容列表，内容为json格式的，可以通过ump sdk里面的MBB.fromJson来处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.mbbs.list.get</name>
<desc>通过营销积木id列表来获取营销积木块列表。</desc>
<request>
<param>
<name>ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>20</max_list_size>
<desc>营销积木块id组成的字符串。</desc>
</param>
</request>
<response>
<param>
<name>mbbs</name>
<type>String</type>
<level>Basic Array</level>
<desc>营销积木块内容列表，内容为json格式的，可以通过ump sdk里面的MBB.fromJson来处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.range.add</name>
<desc>指定某项活动中，某个商家的某些类型物品（指定商品，指定类目或者别的）参加或者不参加活动。当活动详情的参与类型为部分或者部分不参加的时候，需要指定具体哪部分参加或者不参加，使用本接口完成操作。比如部分商品满就送，这里的range用来指定具体哪些商品参加满就送活动。</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>id列表，当范围类型为商品时，该id为商品id；当范围类型为类目时，该id为类目id.多个id用逗号隔开，一次不超过50个</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<desc>范围的类型，比如是全店，商品，类目 
见：MarketingConstants.PARTICIPATE_TYPE_*</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.range.delete</name>
<desc>去指先前指定在某项活动中，某些类型的物品参加或者不参加活动的设置</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>id列表，当范围类型为商品时，该id为商品id；当范围类型为类目时，该id为类目id</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<desc>范围的类型，比如是全店，商品，类目见：MarketingConstants.PARTICIPATE_TYPE_*</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.range.get</name>
<desc>查询某个卖家所有参加或者不参加某项活动的物品</desc>
<request>
<param>
<name>act_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id</desc>
</param>
</request>
<response>
<param>
<name>ranges</name>
<type>Range</type>
<level>Object Array</level>
<desc>营销范围类列表！</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.add</name>
<desc>新增优惠工具。通过ump sdk来完成将积木块拼装成为工具的操作，再使用本接口上传优惠工具。</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>工具内容，由sdk里面的MarketingTool生成的json字符串</desc>
</param>
</request>
<response>
<param>
<name>tool_id</name>
<type>Number</type>
<level>Basic</level>
<desc>工具id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.delete</name>
<desc>删除营销工具。当工具正在被使用的时候，是不能被删除的。</desc>
<request>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>营销工具id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.get</name>
<desc>根据工具id获取一个工具对象</desc>
<request>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具的id</desc>
</param>
</request>
<response>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>工具信息内容，格式为json，可以通过提供给的sdk里面的MarketingBuilder来处理这个内容</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tool.update</name>
<desc>修改工具</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>工具的内容，由sdk的marketingBuilder生成</desc>
</param>
<param>
<name>tool_id</name>
<type>Number</type>
<required>required</required>
<desc>工具id</desc>
</param>
</request>
<response>
<param>
<name>tool_id</name>
<type>Number</type>
<level>Basic</level>
<desc>更新后生成的新的工具id</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.tools.get</name>
<desc>查询工具列表</desc>
<request>
<param>
<name>tool_code</name>
<type>String</type>
<required>optional</required>
<desc>工具编码</desc>
</param>
</request>
<response>
<param>
<name>tools</name>
<type>String</type>
<level>Basic Array</level>
<desc>工具列表，单个内容为json格式，需要通过ump的sdk提供的MarketingBuilder来进行处理</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.album.get</name>
<desc>根据商品ID获取有声读物专辑信息</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>有声读物商品ID</desc>
</param>
</request>
<response>
<param>
<name>audioreader_album</name>
<type>TaohuaAudioReaderAlbum</type>
<level>Object</level>
<desc>有声读物专辑</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.myalbums.get</name>
<desc>根据用户ID获取其购买的有声书库专辑列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>当前页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页个数</desc>
</param>
</request>
<response>
<param>
<name>my_audioreader_albums</name>
<type>TaohuaAudioReaderMyAlbum</type>
<level>Object Array</level>
<desc>我的有声书库专辑列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>我的有声书库专辑数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.mytracks.get</name>
<desc>根据用户ID、专辑ID和购买专辑的序列ID获取我的有声书库单曲列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>当前页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页个数</desc>
</param>
<param>
<name>serial_id</name>
<type>Number</type>
<required>required</required>
<desc>购买专辑的序列ID</desc>
</param>
</request>
<response>
<param>
<name>my_audioreader_tracks</name>
<type>TaohuaAudioReaderTrack</type>
<level>Object Array</level>
<desc>我的有声书库单曲列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>我的有声书库单曲数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.recommend.get</name>
<desc>获取花匠推荐的有声读物专辑列表，分为最近更新和热门两种</desc>
<request>
<param>
<name>item_type</name>
<type>String</type>
<required>required</required>
<desc>推荐专辑的类型，有两个可选项，recent:最近更新，hot:热门</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>当前页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页个数</desc>
</param>
</request>
<response>
<param>
<name>audioreader_summaries</name>
<type>TaohuaAudioReaderAlbumSummary</type>
<level>Object Array</level>
<desc>有声读物专辑摘要列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的专辑总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.search</name>
<desc>根据条件搜索有声读物专辑</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<desc>类目id</desc>
</param>
<param>
<name>free</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否免费，如果为true则表示只搜索免费的商品</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>optional</required>
<desc>查询关键字,超过60个字符则自动截断为60个字符. 允许为空</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>当前页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页个数</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>排序值: 1. 评分排序：ratescoredesc, 2. 价格升序：priceasc, 3. 价格降序：pricedesc, 4. 最新发布：shelvesdate, 5. 最多浏览：viewcount, 6. 销量升序：saleasc, 7. 销量降序：saledesc, 8. 最受欢迎：favoritedesc, 9. 默认排序：default</desc>
</param>
</request>
<response>
<param>
<name>audioreader_search_results</name>
<type>TaohuaAudioReaderAlbumSummary</type>
<level>Object Array</level>
<desc>有声读物专辑摘要列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索返回的专辑总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.track.auditionurl.get</name>
<desc>获取有声读物单曲试听地址</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>单曲商品ID</desc>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>有声读物单曲试听地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.track.downloadurl.get</name>
<desc>获取有声读物单曲下载地址</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>单曲商品ID</desc>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>有声读物单曲下载地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.audioreader.tracks.get</name>
<desc>根据有声读物专辑商品ID获取单曲信息</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>有声读物专辑ID</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>当前页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页个数</desc>
</param>
</request>
<response>
<param>
<name>audioreader_tracks</name>
<type>TaohuaAudioReaderTrack</type>
<level>Object Array</level>
<desc>有声读物单曲列表</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>专辑内的单曲总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.boughtitem.is</name>
<desc>判断用户是否购买过该商品</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>is_bought</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回结果，true代表该商品已经被购买过，false代表该商品还没有被购买过</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.childcates.get</name>
<desc>通过类目ID获取它的类目列表</desc>
<request>
<param>
<name>cate_id</name>
<type>Number</type>
<required>optional</required>
<desc>通过类目ID获取它的子类目列表</desc>
</param>
</request>
<response>
<param>
<name>taohua_categories</name>
<type>TaohuaCategory</type>
<level>Object Array</level>
<desc>淘花类目数据结构</desc>
</param>
<param>
<name>total_cates</name>
<type>Number</type>
<level>Basic</level>
<desc>总类目数</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.directory.get</name>
<desc>根据文档商品的ID获取文档目录</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>文档商品ID</desc>
</param>
</request>
<response>
<param>
<name>tree_vo</name>
<type>TaohuaRootDirectory</type>
<level>Object</level>
<desc>淘花文档目录</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.item.like</name>
<desc>用户调本接口后，对应的商品喜欢值加1</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>like_result</name>
<type>String</type>
<level>Basic</level>
<desc>成功返回success</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.itemcomment.add</name>
<desc>对指定商品发表评论</desc>
<request>
<param>
<name>comment</name>
<type>String</type>
<required>required</required>
<max_length>4000</max_length>
<desc>对商品的评论内容</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>add_comment_result</name>
<type>String</type>
<level>Basic</level>
<desc>发表评论成功标志</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.itemcomments.get</name>
<desc>获取淘花指定商品的评论列表</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>指定商品的ID</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。 
取值范围：大于零的整数 
默认值：1 即返回第一页数据</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数 
取值范围：大于零的整数  
默认值：10 即每页返回10条数据</desc>
</param>
</request>
<response>
<param>
<name>taohua_comments_result</name>
<type>TaohuaItemCommentResult</type>
<level>Object</level>
<desc>淘花商品评论</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.itemdetail.get</name>
<desc>商品详情接口</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>taohua_item_detail</name>
<type>TaohuaItem</type>
<level>Object</level>
<desc>淘花商品数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.itempayurl.get</name>
<desc>获取商品支付链接API</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>支付URL</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.itemresurl.get</name>
<desc>获取商品资源下载链接。 
URL调用示例： 
http://gw.api.taobao.com/router/rest?timestamp=1982-07-27 06:06:06&amp;method=taobao.taohua.itemresurl.get&amp;app_key=2005&amp;session=XXXXX&amp;sign=ERITJKEIJKJHKKKKKKKHJEREEEEEEEEEEE&amp;item_id=3365&amp;position=3652</desc>
<request>
<param>
<name>file_type</name>
<type>String</type>
<required>required</required>
<desc>商品资源的下载文件类型，可选值：1、pdf，2、epub，3、src。 
dpf代表下载pdf类型的文件，epub代表下载epub类型的文件，src代表下载源文件</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<max_length>22</max_length>
<desc>商品ID</desc>
</param>
<param>
<name>position</name>
<type>String</type>
<required>optional</required>
<desc>因为下载地址涉及到断点续传的功能，所以需要客户端高速服务器端，应该从哪个byte开始返回文件流，那么这个字段作用就是用于告诉服务端从指定位置读取文件流</desc>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>下载链接地址.</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.items.search</name>
<desc>商品搜索列表接口</desc>
<request>
<param>
<name>begin_size</name>
<type>String</type>
<required>optional</required>
<desc>文件最小size,单位byte。</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<desc>类目id</desc>
</param>
<param>
<name>end_size</name>
<type>String</type>
<required>optional</required>
<desc>文件最大size,单位byte。</desc>
</param>
<param>
<name>file_type</name>
<type>String</type>
<required>optional</required>
<desc>按照文件类型来搜索</desc>
</param>
<param>
<name>free</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否免费，如果为true则表示只搜索免费的商品。</desc>
</param>
<param>
<name>keywords</name>
<type>String</type>
<required>optional</required>
<desc>查询关键字,超过60好字符则自动截断为60个字符.  默认允许为null</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页搜索商品信息，page_no代表的是第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>30</max_value>
<min_value>5</min_value>
<desc>分页搜索商品信息，page_size代表：每页显示多少条数据。  目前最少5条，最多30条数据。</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>排序值: 
 
1. 评分排序：ratescoredesc, 
2. 价格升序: priceasc, 
3. 价格降序: pricedesc, 
4. 时间排序: shelvesdate, 
5. 浏览排序：viewcount, 
6. 销量升序：saleasc, 
7. 默认排序：default,</desc>
</param>
</request>
<response>
<param>
<name>search_items_result</name>
<type>TaohuaSearchItems</type>
<level>Object</level>
<desc>商品搜索列表数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.latestupdateinfo.get</name>
<desc>获取最新更新信息</desc>
<response>
<param>
<name>taohua_update_info</name>
<type>TaohuaUpdateInfo</type>
<level>Object</level>
<desc>更新信息版本号</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.orders.get</name>
<desc>查询买家订单列表</desc>
<request>
<param>
<name>end_date</name>
<type>String</type>
<required>optional</required>
<desc>默认为当前时间， 日期格式精确到天数</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页获取订单列表信息，page_no代表的是第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>30</max_value>
<min_value>5</min_value>
<desc>分页获取订单列表信息，page_size代表每页显示多少条。  注意：每页显示条数。最小5条，最多30条，凡是超出范围的条数，都会被默认为10条。</desc>
</param>
<param>
<name>start_date</name>
<type>String</type>
<required>optional</required>
<desc>系统默认为：当前时间-90天。  日期精确到日</desc>
</param>
<param>
<name>trade_status</name>
<type>String</type>
<required>optional</required>
<desc>查询的交易状态： 
1.	全部 all 
2.	等待买家付款 wait_pay 
3.	交易成功 trade_suc 
4.	交易关闭 trade_close</desc>
</param>
</request>
<response>
<param>
<name>taohua_order_result</name>
<type>TaohuaOrders</type>
<level>Object</level>
<desc>淘花订单列表数据结构对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.previewurl.get</name>
<desc>获取商品预览链接</desc>
<request>
<param>
<name>file_type</name>
<type>String</type>
<required>required</required>
<desc>用来区分要预览的文档类型,目前支持两种 
pre_epub 预览epub文档 
pre_pdf  预览pdf文档</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>position</name>
<type>String</type>
<required>required</required>
<desc>文件位置</desc>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>预览链接</desc>
</param>
</response>
</api>
<api>
<name>taobao.taohua.staffrecitems.get</name>
<desc>获取小二推荐的商品</desc>
<request>
<param>
<name>item_type</name>
<type>String</type>
<required>required</required>
<desc>推荐的商品类型: 
1. free:获取推荐的免费商品 
2. charges:获取推荐的收费商品</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页数，大于0的整数，默认值1，代表第一页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页显示最大条数，要求：大于0的整数。默认为5，代表每页显示5条</desc>
</param>
</request>
<response>
<param>
<name>taohua_items</name>
<type>TaohuaItem</type>
<level>Object Array</level>
<desc>淘花商品数据结构列表</desc>
</param>
<param>
<name>total_items</name>
<type>Number</type>
<level>Basic</level>
<desc>总商品数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.add</name>
<desc>此接口用于新增一个酒店，酒店的发布者是当前会话的用户。 
该接口发出的是一个酒店申请，需要淘宝小二审核。</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>required</required>
<max_length>120</max_length>
<desc>酒店地址。长度不能超过120</desc>
</param>
<param>
<name>city</name>
<type>Number</type>
<required>required</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时默认为0</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>required</required>
<desc>domestic为true时，固定China； 
domestic为false时，必须传定义的海外国家编码值。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>decorate_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>装修年份。长度不能超过4。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>50000</max_length>
<desc>酒店介绍。不超过25000个汉字</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>required</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>level</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>酒店级别。可选值：A,B,C,D,E,F。代表客栈公寓、经济连锁、二星级/以下、三星级/舒适、四星级/高档、五星级/豪华</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>酒店名称。不能超过60</desc>
</param>
<param>
<name>opening_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>开业年份。长度不能超过4。</desc>
</param>
<param>
<name>orientation</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>酒店定位。可选值：T,B。代表旅游度假、商务出行</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>required</required>
<max_length>512000</max_length>
<desc>酒店图片。最大长度:500K。支持的文件类型：gif,jpg,png</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>required</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时默认为0</desc>
</param>
<param>
<name>rooms</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>房间数。长度不能超过4。</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>交通距离与设施服务。JSON格式。cityCenterDistance、railwayDistance、airportDistance分别代表距离市中心、距离火车站、距离机场公里数，为不超过3位正整数，默认-1代表无数据。 
其他key值true代表有此服务，false代表没有。 
parking：停车场，airportShuttle：机场接送，rentCar：租车，meetingRoom：会议室，businessCenter：商务中心，swimmingPool：游泳池，fitnessClub：健身中心，laundry：洗衣服务，morningCall：叫早服务，bankCard：接受银行卡，creditCard：接受信用卡，chineseRestaurant：中餐厅，westernRestaurant：西餐厅，cafe：咖啡厅，bar：酒吧，ktv：KTV。</desc>
</param>
<param>
<name>site_param</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>接入卖家数据主键</desc>
</param>
<param>
<name>storeys</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>楼层数。长度不能超过4。</desc>
</param>
<param>
<name>tel</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>酒店电话。格式：国家代码（最长6位）#区号（最长4位）#电话（最长20位）。国家代码提示：中国大陆0086、香港00852、澳门00853、台湾00886</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.get</name>
<desc>此接口用于查询一个酒店，根据传入的酒店hid查询酒店信息。</desc>
<request>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>要查询的酒店id。必须为数字</desc>
</param>
<param>
<name>need_room_type</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该酒店的房型列表。可选值：true，false。</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.image.upload</name>
<desc>酒店图片上传</desc>
<request>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<max_length>20</max_length>
<desc>酒店id</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>required</required>
<max_length>512000</max_length>
<desc>上传的图片</desc>
</param>
</request>
<response>
<param>
<name>hotel_image</name>
<type>HotelImage</type>
<level>Object</level>
<desc>酒店图片</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.name.get</name>
<desc>此接口用于查询一个酒店，根据传入的酒店名称/别名查询酒店信息。</desc>
<request>
<param>
<name>city</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>domestic为true时，固定China； 
domestic为false时，必须传定义的海外国家编码值，是必填项。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>required</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>酒店全部名称/别名。不能超过60字节</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.order.booking.feedback</name>
<desc>下单结果回传</desc>
<request>
<param>
<name>failed_reason</name>
<type>String</type>
<required>optional</required>
<desc>失败原因,当result为failed时,此项为必填，最长200个字符</desc>
</param>
<param>
<name>message_id</name>
<type>String</type>
<required>required</required>
<desc>指令消息中的messageid,最长128字符</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>酒店订单id</desc>
</param>
<param>
<name>out_oid</name>
<type>String</type>
<required>required</required>
<desc>合作方订单号,最长250个字符</desc>
</param>
<param>
<name>refund_code</name>
<type>String</type>
<required>optional</required>
<desc>在合作方退订时可能要用到的标识码，最长250个字符</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>预订结果  
S:成功 
F:失败</desc>
</param>
<param>
<name>session_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>指令消息中的session_id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.order.get</name>
<desc>此接口用于查询一个酒店订单，根据传入的订单号查询订单信息。</desc>
<request>
<param>
<name>need_guest</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该订单的入住人列表。可选值：true，false。</desc>
</param>
<param>
<name>need_message</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否显示买家留言，可选值true、false</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>special</required>
<desc>酒店订单oid，必须为数字。oid，tid必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为oid，tid。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>special</required>
<desc>淘宝订单tid，必须为数字。oid，tid必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为oid，tid。</desc>
</param>
</request>
<response>
<param>
<name>hotel_order</name>
<type>HotelOrder</type>
<level>Object</level>
<desc>订单结构，是否返回入住人列表根据参数决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.order.pay.feedback</name>
<desc>支付确认结果回传</desc>
<request>
<param>
<name>failed_reason</name>
<type>String</type>
<required>optional</required>
<desc>失败原因,当result为failed时,此项为必填，最长200个字符</desc>
</param>
<param>
<name>message_id</name>
<type>String</type>
<required>required</required>
<desc>指令消息中的messageid,最长128字符</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>酒店订单id</desc>
</param>
<param>
<name>out_oid</name>
<type>String</type>
<required>required</required>
<desc>合作方订单号,最长250个字符</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>预订结果  
S:成功 
F:失败</desc>
</param>
<param>
<name>session_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>指令消息中的session_id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.order.refund.feedback</name>
<desc>退订处理结果回传</desc>
<request>
<param>
<name>failed_reason</name>
<type>String</type>
<required>optional</required>
<desc>失败原因,当result为F时,此项为必填,最长200个字符</desc>
</param>
<param>
<name>message_id</name>
<type>String</type>
<required>required</required>
<desc>指令消息中的messageid,最长128字符</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>合作方订单号,最长250个字符</desc>
</param>
<param>
<name>out_oid</name>
<type>String</type>
<required>required</required>
<desc>合作方订单号,最长250个字符</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>预订结果  
S:成功 
F:失败</desc>
</param>
<param>
<name>session_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>指令消息中的session_id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.orders.search</name>
<desc>此接口用于查询多个酒店订单，根据传入的查询条件查询订单信息。</desc>
<request>
<param>
<name>checkin_date_end</name>
<type>Date</type>
<required>optional</required>
<desc>入住时间查询结束时间，格式为：yyyy-MM-dd。不能早于checkin_date_start，间隔不能大于30</desc>
</param>
<param>
<name>checkin_date_start</name>
<type>Date</type>
<required>optional</required>
<desc>入住时间查询起始时间，格式为：yyyy-MM-dd</desc>
</param>
<param>
<name>checkout_date_end</name>
<type>Date</type>
<required>optional</required>
<desc>离店时间查询结束时间，格式为：yyyy-MM-dd。不能早于checkout_date_start，间隔不能大于30</desc>
</param>
<param>
<name>checkout_date_start</name>
<type>Date</type>
<required>optional</required>
<desc>离店时间查询起始时间，格式为：yyyy-MM-dd</desc>
</param>
<param>
<name>created_end</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间查询结束时间，格式为：yyyy-MM-dd。不能早于created_start，间隔不能大于30</desc>
</param>
<param>
<name>created_start</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间查询起始时间，格式为：yyyy-MM-dd</desc>
</param>
<param>
<name>gids</name>
<type>String</type>
<required>optional</required>
<desc>商品gid列表，多个gid用英文逗号隔开，一次不超过5个</desc>
</param>
<param>
<name>hids</name>
<type>String</type>
<required>optional</required>
<desc>酒店hid列表，多个hid用英文逗号隔开，一次不超过5个</desc>
</param>
<param>
<name>need_guest</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该订单的入住人列表。可选值：true，false。</desc>
</param>
<param>
<name>need_message</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否显示买家留言，可选值true、false</desc>
</param>
<param>
<name>oids</name>
<type>String</type>
<required>optional</required>
<desc>酒店订单oids列表，多个oid用英文逗号隔开，一次不超过20个。oids，tids，hids，rids，gids，（checkin_date_start，checkin_date_end），（checkout_date_start，checkout_date_end），（created_start，created_end）必须传入一项，括号表示需同时存在才做为查询条件。 
oids，tids，hids，rids，gids同时出现时，优先级按此顺序由高到低只取一项。其他同时出现时，并列使用。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。页面大小为20</desc>
</param>
<param>
<name>rids</name>
<type>String</type>
<required>optional</required>
<desc>房型rid列表，多个rid用英文逗号隔开，一次不超过5个</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>订单状态。A：等待买家付款。B：买家已付款待卖家发货。C：卖家已发货待买家确认。D：交易成功。E：交易关闭</desc>
</param>
<param>
<name>tids</name>
<type>String</type>
<required>optional</required>
<desc>淘宝订单tid列表，多个tid用英文逗号隔开，一次不超过20个。</desc>
</param>
</request>
<response>
<param>
<name>hotel_orders</name>
<type>HotelOrder</type>
<level>Object Array</level>
<desc>多个订单结构，是否返回入住人列表根据参数决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.add</name>
<desc>此接口用于发布一个集市酒店商品，商品的发布者是当前会话的用户。如果该酒店、该房型、该用户所对应的商品在淘宝集市酒店系统中已经存在，则会返回错误提示。</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>面积。可选值：A,B,C,D。分别代表： 
A：15平米以下，B：16－30平米，C：31－50平米，D：50平米以上</desc>
</param>
<param>
<name>bbn</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>宽带服务。A,B,C,D。分别代表： 
A：无宽带，B：免费宽带，C：收费宽带，D：部分收费宽带</desc>
</param>
<param>
<name>bed_type</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>床型。可选值：A,B,C,D,E,F,G,H,I。分别代表：A：单人床，B：大床，C：双床，D：双床/大床，E：子母床，F：上下床，G：圆形床，H：多床，I：其他床型</desc>
</param>
<param>
<name>breakfast</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>早餐。A,B,C,D,E。分别代表： 
A：无早，B：单早，C：双早，D：三早，E：多早</desc>
</param>
<param>
<name>deposit</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>订金。0～99999900的正整数。在payment_type为订金时必须输入，存储的单位是分。不能带角分。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>50000</max_length>
<desc>商品描述。不能超过25000个汉字（50000个字符）。</desc>
</param>
<param>
<name>fee</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>手续费。0～99999900的正整数。在payment_type为手续费或手续费/间夜时必须输入，存储的单位是分。不能带角分。</desc>
</param>
<param>
<name>guide</name>
<type>String</type>
<required>required</required>
<max_length>8000</max_length>
<desc>购买须知。不能超过4000个汉字（8000个字符）。</desc>
</param>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>酒店id。必须为数字。</desc>
</param>
<param>
<name>payment_type</name>
<type>String</type>
<required>required</required>
<max_length>1</max_length>
<desc>支付类型。可选值：A,B,C,D。分别代表： 
A：全额支付，B：手续费，C：订金，D：手续费/间夜</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>酒店商品图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。发布的时候只能发布一张图片。如需再发图片，需要调用商品图片上传接口，1个商品最多5张图片。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>rid</name>
<type>Number</type>
<required>required</required>
<desc>房型id。必须为数字。</desc>
</param>
<param>
<name>room_quotas</name>
<type>String</type>
<required>required</required>
<desc>房态信息。可以传今天开始90天内的房态信息。日期必须连续。JSON格式传递。 
date：代表房态日期，格式为YYYY-MM-DD， 
price：代表当天房价，0～99999999，存储的单位是分， 
num：代表当天可售间数，0～999。 
如： 
[{"date":2011-01-28,"price":10000, "num":10},{"date":2011-01-29,"price":12000,"num":10}]</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>设施服务。JSON格式。 
value值true有此服务，false没有。 
bar：吧台，catv：有线电视，ddd：国内长途电话，idd：国际长途电话，toilet：独立卫生间，pubtoliet：公共卫生间。 
如： 
{"bar":false,"catv":false,"ddd":false,"idd":false,"pubtoilet":false,"toilet":false}</desc>
</param>
<param>
<name>site_param</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>接入卖家数据主键</desc>
</param>
<param>
<name>size</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>床宽。可选值：A,B,C,D,E,F,G,H。分别代表：A：1米及以下，B：1.1米，C：1.2米，D：1.35米，E：1.5米，F：1.8米，G：2米，H：2.2米及以上</desc>
</param>
<param>
<name>storey</name>
<type>String</type>
<required>optional</required>
<max_length>8</max_length>
<desc>楼层。长度不超过8</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>酒店商品名称。不能超过60字节</desc>
</param>
</request>
<response>
<param>
<name>room</name>
<type>Room</type>
<level>Object</level>
<desc>商品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.get</name>
<desc>此接口用于查询一个商品，根据传入的gid查询商品信息。卖家只能查询自己的商品。</desc>
<request>
<param>
<name>gid</name>
<type>Number</type>
<required>special</required>
<desc>酒店房间商品gid。必须为数字。gid和item_id至少要传一个。</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>special</required>
<desc>酒店房间商品item_id。必须为数字。item_id和gid至少要传一个。</desc>
</param>
<param>
<name>need_hotel</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的酒店信息。可选值：true，false。</desc>
</param>
<param>
<name>need_room_desc</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的宝贝描述。可选值：true，false。</desc>
</param>
<param>
<name>need_room_quotas</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房态列表。可选值：true，false。</desc>
</param>
<param>
<name>need_room_type</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房型信息。可选值：true，false。</desc>
</param>
</request>
<response>
<param>
<name>room</name>
<type>Room</type>
<level>Object</level>
<desc>商品结构。是否返回酒店信息、房型信息、房态列表、宝贝描述根据参数决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.img.delete</name>
<desc>此接口用于为商品删除商品图片。</desc>
<request>
<param>
<name>gid</name>
<type>Number</type>
<required>required</required>
<desc>酒店房间商品gid。必须为数字。</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<desc>图片序号，可选值：1，2，3，4，5。 
如果原图片个数小于等于1，则报错，不能删除图片。 
如果原图片个数小于待删除的图片序号，则报错，图片序号错误。</desc>
</param>
</request>
<response>
<param>
<name>room_image</name>
<type>RoomImage</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.img.upload</name>
<desc>此接口用于为商品上传商品图片。</desc>
<request>
<param>
<name>gid</name>
<type>Number</type>
<required>required</required>
<desc>酒店房间商品gid。必须为数字。</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>required</required>
<max_length>512000</max_length>
<desc>酒店商品图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。 
如果原图片少于5张，若没传序号或序号大于原图片个数，则在原图片最后添加，否则按序号插入到原图片中去，自动后移。 
如果原图片大于5张，若没传序号，则替换最后一张图片，否则在序号位置插入，图片向后移，最后一张被删除。</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<max_length>1</max_length>
<desc>图片序号，可选值：1，2，3，4，5</desc>
</param>
</request>
<response>
<param>
<name>room_image</name>
<type>RoomImage</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.quotas.query.feedback</name>
<desc>接入方房态查询结果返回</desc>
<request>
<param>
<name>avaliable_room_count</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>选中日期范围内的最大可用房量</desc>
</param>
<param>
<name>checkin_date</name>
<type>Date</type>
<required>required</required>
<desc>入住酒店的日期</desc>
</param>
<param>
<name>checkout_date</name>
<type>Date</type>
<required>required</required>
<desc>离开酒店的日期</desc>
</param>
<param>
<name>failed_reason</name>
<type>String</type>
<required>optional</required>
<desc>失败原因,当result为F时,此项为必填,最长200个字符</desc>
</param>
<param>
<name>message_id</name>
<type>String</type>
<required>required</required>
<desc>指令消息中的messageid,最长128字符</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>预订结果  
S:成功 
F:失败</desc>
</param>
<param>
<name>room_quotas</name>
<type>String</type>
<required>optional</required>
<desc>从入住时期到离店日期的每日一间房价与预定房量,JSON格式传递。 date：代表房态日期，格式为YYYY-MM-DD， price：代表当天房价，0～99999900，存储的单位是分，货币单位为人民币，num：代表当天剩余房量，0～999，所有日期的预订间数应该一致。 如： [{"date":2011-01-28,"price":10000, "num":10},{"date":2011-01-29,"price":12000,"num":10}],最长1500个字符</desc>
</param>
<param>
<name>total_room_price</name>
<type>Number</type>
<required>required</required>
<max_value>99999999</max_value>
<min_value>0</min_value>
<desc>订单总价。0～99999999的正整数。货币单位为人民币。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>接口调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.room.update</name>
<desc>此接口用于更新一个集市酒店商品，根据传入的gid更新商品信息，该商品必须为对应的发布者才能执行更新操作。如果对应的商品在淘宝集市酒店系统中不存在，则会返回错误提示。</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>面积。可选值：A,B,C,D。分别代表： 
A：15平米以下，B：16－30平米，C：31－50平米，D：50平米以上</desc>
</param>
<param>
<name>bbn</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>宽带服务。A,B,C,D。分别代表： 
A：无宽带，B：免费宽带，C：收费宽带，D：部分收费宽带</desc>
</param>
<param>
<name>bed_type</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>床型。可选值：A,B,C,D,E,F,G,H,I。分别代表：A：单人床，B：大床，C：双床，D：双床/大床，E：子母床，F：上下床，G：圆形床，H：多床，I：其他床型</desc>
</param>
<param>
<name>breakfast</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>早餐。A,B,C,D,E。分别代表： 
A：无早，B：单早，C：双早，D：三早，E：多早</desc>
</param>
<param>
<name>deposit</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>订金。0～99999900的正整数。在payment_type为订金时必须输入，存储的单位是分。不能带角分。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>50000</max_length>
<desc>商品描述。不能超过25000个汉字（50000个字符）。</desc>
</param>
<param>
<name>fee</name>
<type>Number</type>
<required>optional</required>
<max_value>99999900</max_value>
<min_value>0</min_value>
<desc>手续费。0～99999900的正整数。在payment_type为手续费或手续费/间夜时必须输入，存储的单位是分。不能带角分。</desc>
</param>
<param>
<name>gid</name>
<type>Number</type>
<required>required</required>
<desc>酒店房间商品gid。必须为数字。</desc>
</param>
<param>
<name>guide</name>
<type>String</type>
<required>optional</required>
<max_length>8000</max_length>
<desc>购买须知。不能超过4000个汉字（8000个字符）。</desc>
</param>
<param>
<name>payment_type</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>支付类型。可选值：A,B,C,D。分别代表： 
A：全额支付，B：手续费，C：订金，D：手续费/间夜</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>酒店商品图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。更新的时候只能更新一张图片，此图片覆盖原有所有图片。如果不传则使用原有所有图片。 
如需再发图片，需要调用商品图片上传接口，1个商品最多5张图片。</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>room_quotas</name>
<type>String</type>
<required>optional</required>
<desc>房态信息。可以传今天开始90天内的房态信息。日期必须连续。JSON格式传递。 
date：代表房态日期，格式为YYYY-MM-DD， 
price：代表当天房价，0～99999999，存储的单位是分, 
num：代表当天可售间数，0～999。 
如： 
[{"date":2011-01-28,"price":10000, "num":10},{"date":2011-01-29,"price":12000,"num":10}]</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>设施服务。JSON格式。 
value值true有此服务，false没有。 
bar：吧台，catv：有线电视，ddd：国内长途电话，idd：国际长途电话，toilet：独立卫生间，pubtoliet：公共卫生间。 
如： 
{"bar":false,"catv":false,"ddd":false,"idd":false,"pubtoilet":false,"toilet":false}</desc>
</param>
<param>
<name>size</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>床宽。可选值：A,B,C,D,E,F,G,H。分别代表：A：1米及以下，B：1.1米，C：1.2米，D：1.35米，E：1.5米，F：1.8米，G：2米，H：2.2米及以上</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<max_length>1</max_length>
<desc>状态。可选值1，2，3。1：上架。2：下架。3：删除。传入相应状态代表去执行相应的操作。</desc>
</param>
<param>
<name>storey</name>
<type>String</type>
<required>optional</required>
<max_length>8</max_length>
<desc>楼层。长度不超过8</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>酒店商品名称。不能超过60字节</desc>
</param>
</request>
<response>
<param>
<name>room</name>
<type>Room</type>
<level>Object</level>
<desc>商品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.rooms.search</name>
<desc>此接口用于查询多个酒店商品，根据传入的参数查询商品信息。卖家只能查询自己的商品。</desc>
<request>
<param>
<name>gids</name>
<type>String</type>
<required>special</required>
<desc>酒店房间商品gid列表，多个gid用英文逗号隔开，一次不超过20个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。</desc>
</param>
<param>
<name>hids</name>
<type>String</type>
<required>special</required>
<desc>酒店hid列表，多个hid用英文逗号隔开，一次不超过5个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。</desc>
</param>
<param>
<name>item_ids</name>
<type>String</type>
<required>special</required>
<desc>酒店房间商品item_id列表，多个item_id用英文逗号隔开，一次不超过20个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。</desc>
</param>
<param>
<name>need_hotel</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的酒店信息。可选值：true，false。</desc>
</param>
<param>
<name>need_room_desc</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的宝贝描述。可选值：true，false。</desc>
</param>
<param>
<name>need_room_quotas</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房态列表。可选值：true，false。</desc>
</param>
<param>
<name>need_room_type</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该商品的房型信息。可选值：true，false。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。页面大小为20</desc>
</param>
<param>
<name>rids</name>
<type>String</type>
<required>special</required>
<desc>房型rid列表，多个rid用英文逗号隔开，一次不超过20个。gids，item_ids , hids，rids四项必须传一项，同时传递的情况下，作为查询条件的优先级由高到低依次为gids，item_ids , hids，rids。</desc>
</param>
</request>
<response>
<param>
<name>rooms</name>
<type>Room</type>
<level>Object Array</level>
<desc>多个商品结构。是否返回酒店信息、房型信息、房态列表、宝贝描述根据参数决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.rooms.update</name>
<desc>此接口用于更新多个集市酒店商品房态信息，根据传入的gids更新商品信息，该商品必须为对应的发布者才能执行更新操作。如果对应的商品在淘宝集市酒店系统中不存在，则会返回错误提示。是全量更新，非增量，会把之前的房态进行覆盖。</desc>
<request>
<param>
<name>gid_room_quota_map</name>
<type>String</type>
<required>required</required>
<desc>多商品房态信息。json encode。每个商品房态参考单商品更新中的room_quota字段。反序列化后入：array(( 'gid'=&gt;1, 'roomQuota'=&gt;array(('date'=&gt;'2011-01-29', 'price'=&gt;100, 'num'=&gt;1),('date'=&gt;'2011-01-30', 'price'=&gt;100, 'num'=&gt;1)),( 'gid'=&gt;2, 'roomQuota'=&gt;array(('date'=&gt;'2011-01-29', 'price'=&gt;100, 'num'=&gt;1),('date'=&gt;'2011-01-30', 'price'=&gt;100, 'num'=&gt;1)))</desc>
</param>
</request>
<response>
<param>
<name>gids</name>
<type>String</type>
<level>Basic Array</level>
<desc>成功的gid list</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.sold.hotels.increment.get</name>
<desc>1. 此接口用于查询该会话用户作为酒店发布者发布的酒店被审核通过的增量酒店信息。 
2. 只能查询时间跨度为一天的增量酒店记录：start_modified：2011-7-1 16:00:00 end_modified： 2011-7-2 15:59:59（注意不能写成16:00:00）  
3. 返回数据结果为发布酒店时间的倒序</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改结束时间，必须大于修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>页面大小，取值范围1-100，默认大小20</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否使用has_next的分页方式，如果指定true，则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的字段，效率比总记录数高</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>hotels</name>
<type>Hotel</type>
<level>Object Array</level>
<desc>多个酒店结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.sold.orders.increment.get</name>
<desc>1. 搜索当前会话用户作为卖家已卖出的增量交易数据  
2. 只能查询时间跨度为一天的增量交易记录：start_modified：2011-7-1 16:00:00 end_modified： 2011-7-2 15:59:59（注意不能写成16:00:00）  
3. 返回数据结果为创建订单时间的倒序</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改结束时间，必须大于修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss。</desc>
</param>
<param>
<name>need_guest</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要返回该订单的入住人列表。可选值：true，false。</desc>
</param>
<param>
<name>need_message</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否返回买家留言，可选值true、false</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>页面大小，取值范围1-100，默认大小20。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。可选值：A：等待买家付款。B：买家已付款待卖家发货。C：卖家已发货待买家确认。D：交易成功。E：交易关闭</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否使用has_next的分页方式，如果指定true，则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的字段，效率比总记录数高</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>hotel_orders</name>
<type>HotelOrder</type>
<level>Object Array</level>
<desc>多个订单结构，是否返回入住人列表根据参数决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.sold.types.increment.get</name>
<desc>1. 此接口用于查询该会话用户作为房型发布者发布的房型被审核通过的增量房型信息。 
2. 只能查询时间跨度为一天的增量酒店记录：start_modified：2011-7-1 16:00:00 end_modified： 2011-7-2 15:59:59（注意不能写成16:00:00）  
3. 返回数据结果为发布房型时间的倒序</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改结束时间，必须大于修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>页面大小，取值范围1-100，默认大小20。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间（修改时间跨度不能大于1天）。格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否使用has_next的分页方式，如果指定true，则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的字段，效率比总记录数高</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>room_types</name>
<type>RoomType</type>
<level>Object Array</level>
<desc>多个房型结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.type.add</name>
<desc>此接口用于发布一个房型，房型的发布者是当前会话的用户。如果该房型在淘宝集市酒店下已经存在，则会返回错误提示。 
该接口发布的是一个新增房型申请，需要淘宝小二审核</desc>
<request>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>酒店id。必须为数字</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>30</max_length>
<desc>房型名称。长度不能超过30</desc>
</param>
<param>
<name>site_param</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>接入卖家数据主键</desc>
</param>
</request>
<response>
<param>
<name>room_type</name>
<type>RoomType</type>
<level>Object</level>
<desc>房型结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.type.name.get</name>
<desc>此接口用于查询一个房型，根据传入的酒店hid，房型名称/别名查询房型信息。</desc>
<request>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>要查询的酒店id。必须为数字</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>房型全部名称/别名。不能超过60字节</desc>
</param>
</request>
<response>
<param>
<name>room_type</name>
<type>RoomType</type>
<level>Object</level>
<desc>房型结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotel.update</name>
<desc>此接口用于更新一个酒店的信息，根据用户传入的hid更新酒店数据。如果该酒店在淘宝集市酒店不存在，则会返回错误提示。 
该接口发出的是一个更新酒店信息的申请，需要淘宝小二审核。</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>optional</required>
<max_length>120</max_length>
<desc>酒店地址。长度不能超过120</desc>
</param>
<param>
<name>city</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时默认为0</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>domestic为true时，固定China； 
domestic为false时，必须传定义的酒店。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>decorate_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>装修时间。长度不能超过4。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>50000</max_length>
<desc>酒店介绍。不超过25000个汉字</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>hid</name>
<type>Number</type>
<required>required</required>
<desc>酒店id。必须为数字。</desc>
</param>
<param>
<name>level</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>酒店级别。可选值：A,B,C,D,E,F。代表客栈公寓、经济连锁、二星级/以下、三星级/舒适、四星级/高档、五星级/豪华</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>酒店名称。不能超过60字节</desc>
</param>
<param>
<name>opening_time</name>
<type>String</type>
<required>optional</required>
<max_length>4</max_length>
<desc>开业时间。长度不能超过4。</desc>
</param>
<param>
<name>orientation</name>
<type>String</type>
<required>optional</required>
<max_length>1</max_length>
<desc>酒店定位。可选值：T,B。代表旅游度假、商务出行</desc>
</param>
<param>
<name>pic</name>
<type>byte[]</type>
<required>optional</required>
<max_length>512000</max_length>
<desc>酒店图片。类型:JPG,GIF;最大长度:500K。支持的文件类型：gif,jpg,jpeg,png。 
图片没有传，则代表不更新图片，使用原来的图片</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html，domestic为false时默认为0</desc>
</param>
<param>
<name>rooms</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>房间数。长度不能超过4。</desc>
</param>
<param>
<name>service</name>
<type>String</type>
<required>optional</required>
<desc>交通距离与设施服务。JSON格式。cityCenterDistance、railwayDistance、airportDistance分别代表距离市中心、距离火车站、距离机场公里数，为不超过3位正整数，默认-1代表无数据。 
其他key值true代表有此服务，false代表没有。 
parking：停车场，airportShuttle：机场接送，rentCar：租车，meetingRoom：会议室，businessCenter：商务中心，swimmingPool：游泳池，fitnessClub：健身中心，laundry：洗衣服务，morningCall：叫早服务，bankCard：接受银行卡，creditCard：接受信用卡，chineseRestaurant：中餐厅，westernRestaurant：西餐厅，cafe：咖啡厅，bar：酒吧，ktv：KTV。 
如： 
{"airportShuttle":true,"parking":false,"fitnessClub":false,"chineseRestaurant":false,"rentCar":false,"laundry":false,"bankCard":false,"cityCenterDistance":-1,"creditCard":false,"westernRestaurant":false,"ktv":false,"railwayDistance":-1,"swimmingPool":false,"cafe":false,"businessCenter":false,"morningCall":false,"bar":false,"meetingRoom":false,"airportDistance":-1}</desc>
</param>
<param>
<name>storeys</name>
<type>Number</type>
<required>optional</required>
<max_length>4</max_length>
<max_value>9999</max_value>
<min_value>0</min_value>
<desc>楼层数。长度不能超过4。</desc>
</param>
<param>
<name>tel</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>酒店电话。格式：国家代码（最长6位）#区号（最长4位）#电话（最长20位）。国家代码提示：中国大陆0086、香港00852、澳门00853、台湾00886</desc>
</param>
</request>
<response>
<param>
<name>hotel</name>
<type>Hotel</type>
<level>Object</level>
<desc>酒店结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.hotels.search</name>
<desc>此接口用于查询多个酒店，根据传入的参数查询酒店信息。</desc>
<request>
<param>
<name>city</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>城市编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>domestic为true时，固定China； 
domestic为false时，必须传定义的海外国家编码值，是必填项。参见：http://kezhan.trip.taobao.com/countrys.html</desc>
</param>
<param>
<name>district</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>区域（县级市）编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0</desc>
</param>
<param>
<name>domestic</name>
<type>Boolean</type>
<required>required</required>
<desc>是否国内酒店。可选值：true，false</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>酒店名称。不能超过60字节</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>分页页码。取值范围，大于零的整数，默认值1，即返回第一页的数据。页面大小为20</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_length>6</max_length>
<desc>省份编码。参见：http://kezhan.trip.taobao.com/area.html。 
domestic为true时，province,city,district不能同时为空或为0</desc>
</param>
</request>
<response>
<param>
<name>hotels</name>
<type>Hotel</type>
<level>Object Array</level>
<desc>多个酒店结构&lt;br&gt;&lt;/br&gt;&lt;font color = red&gt;不返回房型信息，需要查看房型信息，请调用taobao.hotel.get&lt;/font&gt;</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.catitemids.get</name>
<desc>根据类目获取商品列表</desc>
<request>
<param>
<name>child_categoryid</name>
<type>Number</type>
<required>optional</required>
<desc>商品子类目ID。男装:100001,女装:100002。</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>查询本地生活团商品时需要用city进行过滤，如果city是all的话，则查询所有城市的本地生活团商品。如果为空，则查询普通商品</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页获取商品信息页序号，代表第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每次获取商品列表的数量</desc>
</param>
<param>
<name>parent_categoryid</name>
<type>Number</type>
<required>required</required>
<desc>商品父类目ID。服装:100000,保险:1000000。</desc>
</param>
<param>
<name>platform_id</name>
<type>Number</type>
<required>optional</required>
<desc>平台ID。搜狗:1008,聚划算:1001,商城:1002,无线WAP:1007,支付宝:1003,淘宝天下:1004,嗨淘:1006</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>optional</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
</request>
<response>
<param>
<name>item_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>返回的商品ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.cities.get</name>
<desc>获取今日有生活服务商品的城市列表</desc>
<response>
<param>
<name>cities</name>
<type>String</type>
<level>Basic Array</level>
<desc>返回城市名称列表类似 "上海","成都"</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.cityitems.get</name>
<desc>根据城市，获取对应的生活服务团商品接口</desc>
<request>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>需要获取生活服务商品的城市名称（中文）</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>ItemData</optional>
<default></default>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用","分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页获取商品信息页序号，代表第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每次获取商品列表的数量</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>ItemData</type>
<level>Object Array</level>
<desc>聚划算商品对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.itemids.get</name>
<desc>根据终端类型和平台ID，分页获取聚划算商品id列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>分页获取商品信息页序号，代表第几页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每次获取商品列表的数量</desc>
</param>
<param>
<name>platform_id</name>
<type>Number</type>
<required>optional</required>
<desc>平台ID。搜狗:1008,聚划算:1001,商城:1002,无线WAP:1007,支付宝:1003,淘宝天下:1004,嗨淘:1006</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>optional</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
</request>
<response>
<param>
<name>item_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>返回的商品ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.items.get</name>
<desc>根据商品id列表获取商品列表，目前一次最多返回6条。传入的参数id列表超过6条也只返回前6条的商品</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>ItemData</optional>
<default></default>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用","分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>ids</name>
<type>Field List</type>
<required>required</required>
<desc>商品ID列表。id列表超过6条也只返回前6条的商品</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>ItemData</type>
<level>Object Array</level>
<desc>聚划算商品对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.ju.todayitems.get</name>
<desc>根据终端类型，随机分配一个聚划算今天的商品列表</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<optional>ItemData</optional>
<default></default>
<desc>代表需要返回的商品对象字段。可选值：ItemData商品结构体中所有字段均可返回；多个字段用","分隔。如果fields为空，或者不传该参数，就默认获得所有的字段</desc>
</param>
<param>
<name>terminal_type</name>
<type>String</type>
<required>required</required>
<desc>IPHONE,WAP,ANDROID,SINA,163 各种终端类型</desc>
</param>
<param>
<name>uuid</name>
<type>String</type>
<required>required</required>
<desc>终端的唯一标识，web可以用cookie，手机使用手机号码等，确保唯一性即可，用于分配商品组</desc>
</param>
</request>
<response>
<param>
<name>item_list</name>
<type>ItemData</type>
<level>Object Array</level>
<desc>聚划算商品对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grade.get</name>
<desc>卖家查询等级规则，包括普通会员、高级会员、VIP会员、至尊VIP会员四个等级的信息</desc>
<response>
<param>
<name>grade_promotions</name>
<type>GradePromotion</type>
<level>Object Array</level>
<desc>等级信息集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.add</name>
<desc>卖家创建一个新的分组，接口返回一个创建成功的分组的id</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<max_length>15</max_length>
<desc>分组名称，每个卖家最多可以拥有100个分组</desc>
</param>
</request>
<response>
<param>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>新增分组的id</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>添加分组是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.append</name>
<desc>将某分组下的所有会员添加到另一个分组,注：1.该操作为异步任务，建议先调用taobao.crm.grouptask.check 确保涉及分组上没有任务；2.若分组下某会员分组数超最大限额，则该会员不会被添加到新分组，同时不影响其余会员添加分组，接口调用依然返回成功。</desc>
<request>
<param>
<name>from_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>添加的来源分组</desc>
</param>
<param>
<name>to_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>添加的目标分组</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务请求成功，添加任务是否完成通过taobao.crm.grouptask.check检测</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.delete</name>
<desc>将该分组下的所有会员移除出该组，同时删除该分组。注：删除分组为异步任务，必须先调用taobao.crm.grouptask.check 确保涉及属性上没有任务。</desc>
<request>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>要删除的分组id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务请求成功，是否执行完毕需要通过taobao.crm.grouptask.check检测</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.move</name>
<desc>将一个分组下的所有会员移动到另一个分组，会员从原分组中删除 
注：移动属性为异步任务建议先调用taobao.crm.grouptask.check 确保涉及属性上没有任务。</desc>
<request>
<param>
<name>from_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>需要移动的分组</desc>
</param>
<param>
<name>to_group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>目的分组</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务请求成功，是否执行完毕需要通过taobao.crm.grouptask.check检测</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.group.update</name>
<desc>修改一个已经存在的分组，接口返回分组的修改是否成功</desc>
<request>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<max_length>19</max_length>
<min_value>1</min_value>
<desc>分组的id</desc>
</param>
<param>
<name>new_group_name</name>
<type>String</type>
<required>required</required>
<max_length>15</max_length>
<desc>新的分组名，分组名称不能包含|或者：</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>分组修改是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.groups.get</name>
<desc>查询卖家的分组，返回查询到的分组列表，分页返回分组</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_length>3</max_length>
<max_value>1000000</max_value>
<min_value>1</min_value>
<desc>显示第几页的分组，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页码为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>3</max_length>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示的记录数，其最大值不能超过100条，最小值为1，默认20条</desc>
</param>
</request>
<response>
<param>
<name>groups</name>
<type>Group</type>
<level>Object Array</level>
<desc>查询到的当前卖家的当前页的会员</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.grouptask.check</name>
<desc>检查一个分组上是否有异步任务,异步任务包括1.将一个分组下的所有用户添加到另外一个分组2.将一个分组下的所有用户移动到另外一个分组3.删除某个分组 
若分组上有任务则该属性不能被操作。</desc>
<request>
<param>
<name>group_id</name>
<type>Number</type>
<required>required</required>
<desc>分组id</desc>
</param>
</request>
<response>
<param>
<name>is_finished</name>
<type>Boolean</type>
<level>Basic</level>
<desc>异步任务是否完成，true表示完成</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.memberinfo.update</name>
<desc>编辑会员的基本资料，接口返回会员信息修改是否成功</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>买家昵称</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>城市</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，1：普通客户，2：高级会员，3：高级会员 ，4：至尊vip 
 
只有正常会员才给予升级，对于status 为delete或者blacklist的会员 升级无效</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>optional</required>
<max_value>36</max_value>
<min_value>1</min_value>
<desc>北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区=26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35，约定36为清除Province设置</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>用于描述会员的状态，normal表示正常，blacklist表示黑名单，delete表示删除会员(只有潜在未交易成功的会员才能删除)</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>会员信息修改是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.get</name>
<desc>查询卖家的会员，进行基本的查询，返回符合条件的会员列表</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>买家的昵称</desc>
</param>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_value>1000000</max_value>
<min_value>1</min_value>
<desc>显示第几页的会员，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页数为1</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，0：返回所有会员1：普通客户，2：高级会员，3：VIP会员， 4：至尊VIP会员 
(如果要查交易关闭的会员  请选择taobao.crm.members.search接口的 relation_source=2)</desc>
</param>
<param>
<name>max_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最迟上次交易时间</desc>
</param>
<param>
<name>max_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易额，单位为元</desc>
</param>
<param>
<name>max_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易量</desc>
</param>
<param>
<name>min_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最早上次交易时间</desc>
</param>
<param>
<name>min_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易额,单位为元</desc>
</param>
<param>
<name>min_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易量</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>表示每页显示的会员数量,page_size的最大值不能超过100条,最小值不能低于1，</desc>
</param>
</request>
<response>
<param>
<name>members</name>
<type>BasicMember</type>
<level>Object Array</level>
<desc>根据一定条件查询到卖家的会员</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.group.batchadd</name>
<desc>为一批会员添加分组，接口返回添加是否成功,如至少有一个会员的分组添加成功，接口就返回成功，否则返回失败，如果当前会员已经拥有当前分组，则直接跳过</desc>
<request>
<param>
<name>buyer_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>会员的id（一次最多传入10个）</desc>
</param>
<param>
<name>group_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>分组id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>添加操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.groups.batchdelete</name>
<desc>批量删除多个会员的公共分组，接口返回删除是否成功，该接口只删除多个会员的公共分组，不是公共分组的，不进行删除。如果入参只输入一个会员，则表示删除该会员的某些分组。</desc>
<request>
<param>
<name>buyer_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>买家的Id集合</desc>
</param>
<param>
<name>group_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>会员需要删除的分组</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>删除是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.increment.get</name>
<desc>增量获取会员列表，接口返回符合查询条件的所有会员。任何状态更改都会返回</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_value>1000000</max_value>
<min_value>1</min_value>
<desc>显示第几页的会员，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页数为1</desc>
</param>
<param>
<name>end_modify</name>
<type>Date</type>
<required>optional</required>
<desc>对应买家 最后一次 确认收货或者关闭交易的时间，如果不填写此字段，默认为当前时间</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，1：普通客户，2：高级会员，3：VIP会员， 4：至尊VIP会员</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示的会员数，page_size的值不能超过100，最小值要大于1</desc>
</param>
<param>
<name>start_modify</name>
<type>Date</type>
<required>optional</required>
<desc>对应买家 最后一次 确认收货或者关闭交易的时间</desc>
</param>
</request>
<response>
<param>
<name>members</name>
<type>BasicMember</type>
<level>Object Array</level>
<desc>返回当前页的会员列表</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录的总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.members.search</name>
<desc>会员列表的高级查询，接口返回符合条件的会员列表.&lt;br&gt; 
注：建议获取09年以后的数据，09年之前的数据不是很完整</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>买家昵称</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<desc>城市</desc>
</param>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_value>1000000</max_value>
<min_value>1</min_value>
<desc>显示第几页的会员，如果输入的页码大于总共的页码数，例如总共10页，但是current_page的值为11，则返回空白页，最小页数为1</desc>
</param>
<param>
<name>grade</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，1：普通客户，2：高级会员，3：VIP会员, 4：至尊VIP会员           
注：grade=0通过relation_source=2查询</desc>
</param>
<param>
<name>group_id</name>
<type>Number</type>
<required>optional</required>
<max_length>19</max_length>
<desc>分组id</desc>
</param>
<param>
<name>max_avg_price</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大平均客单价，单位为元</desc>
</param>
<param>
<name>max_close_trade_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易关闭笔数</desc>
</param>
<param>
<name>max_item_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易宝贝件数</desc>
</param>
<param>
<name>max_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最迟上次交易时间</desc>
</param>
<param>
<name>max_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易额，单位为元</desc>
</param>
<param>
<name>max_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最大交易量</desc>
</param>
<param>
<name>min_avg_price</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最少平均客单价，单位为元</desc>
</param>
<param>
<name>min_close_trade_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易关闭的笔数</desc>
</param>
<param>
<name>min_item_num</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易宝贝件数</desc>
</param>
<param>
<name>min_last_trade_time</name>
<type>Date</type>
<required>optional</required>
<desc>最早上次交易时间</desc>
</param>
<param>
<name>min_trade_amount</name>
<type>Price</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易额，单位为元</desc>
</param>
<param>
<name>min_trade_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>最小交易量</desc>
</param>
<param>
<name>order</name>
<type>String</type>
<required>optional</required>
<desc>指定按哪个字段排序，目前可排序的字段为：relation，trade_count，trade_amount，avg_price，lastest_time</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示的会员数量，page_size的最大值不能超过100，最小值不能小于1</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>optional</required>
<max_value>35</max_value>
<min_value>1</min_value>
<desc>北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35</desc>
</param>
<param>
<name>relation_source</name>
<type>Number</type>
<required>optional</required>
<max_length>32</max_length>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>关系来源，1交易成功，2未成交(grade=0)</desc>
</param>
<param>
<name>sort</name>
<type>String</type>
<required>optional</required>
<desc>用于描述是按升序还是降序排列结果</desc>
</param>
</request>
<response>
<param>
<name>members</name>
<type>CrmMember</type>
<level>Object Array</level>
<desc>根据一定条件查询的卖家会员</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录的总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.rule.add</name>
<desc>添加分组规则，规则可用于筛选一定条件的会员。过滤条件可以选择客户来源、会员级别 、交易笔数、交易额、上次交易时间、平均客单价、宝贝件数、省份、关闭交易数等，新建规则时必须至少选择一个以上筛选条件。如果输入的规则的筛选条件不正确则不会进行处理，可以将某些分组挂在这个规则下，对被挂在该规则下的分组，系统对现有满足规则的客户都划分到这个分组（异步任务）。每个规则可以应用到多个分组，一个用户的规则上限为5个。</desc>
<request>
<param>
<name>grade</name>
<type>Number</type>
<required>special</required>
<max_value>4</max_value>
<min_value>1</min_value>
<desc>会员等级，可选值为：1,2,3,4</desc>
</param>
<param>
<name>group_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>10</max_list_size>
<desc>规则应用分组集合，若分组上有任务，则该分组不能挂到该规则下</desc>
</param>
<param>
<name>max_avg_price</name>
<type>Price</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最大平均客单价，单位为元</desc>
</param>
<param>
<name>max_close_trade_num</name>
<type>Number</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最大交易关闭数</desc>
</param>
<param>
<name>max_item_num</name>
<type>Number</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最大宝贝件数</desc>
</param>
<param>
<name>max_last_trade_time</name>
<type>Date</type>
<required>special</required>
<desc>最迟交易时间</desc>
</param>
<param>
<name>max_trade_amount</name>
<type>Price</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最大交易金额，单位为元</desc>
</param>
<param>
<name>max_trade_count</name>
<type>Number</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最大交易数</desc>
</param>
<param>
<name>min_avg_price</name>
<type>Price</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最小平均客单价，单位元</desc>
</param>
<param>
<name>min_close_trade_num</name>
<type>Number</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最少交易关闭数</desc>
</param>
<param>
<name>min_item_num</name>
<type>Number</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最少宝贝件数</desc>
</param>
<param>
<name>min_last_trade_time</name>
<type>Date</type>
<required>special</required>
<desc>最早交易日期 
必须为早于今天的某个时间，例如今天是2011-11-11，那么必须填写2011-11-10或者早于此日期的时间</desc>
</param>
<param>
<name>min_trade_amount</name>
<type>Price</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最小交易金额,单位元。</desc>
</param>
<param>
<name>min_trade_count</name>
<type>Number</type>
<required>special</required>
<max_length>7</max_length>
<min_value>0</min_value>
<desc>最小交易次数</desc>
</param>
<param>
<name>province</name>
<type>Number</type>
<required>special</required>
<max_value>35</max_value>
<min_value>1</min_value>
<desc>北京=1,天津=2,河北省=3,山西省=4,内蒙古自治区=5,辽宁省=6,吉林省=7,黑龙江省=8,上海=9,江苏省=10,浙江省=11,安徽省=12,福建省=13,江西省=14,山东省=15,河南省=16,湖北省=17,湖南省=18, 广东省=19,广西壮族自治区=20,海南省=21,重庆=22,四川省=23,贵州省=24,云南省=25,西藏自治区26,陕西省=27,甘肃省=28,青海省=29,宁夏回族自治区=30,新疆维吾尔自治区=31,台湾省=32,香港特别行政区=33,澳门特别行政区=34,海外=35</desc>
</param>
<param>
<name>relation_source</name>
<type>Number</type>
<required>special</required>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>客户关系来源,可选值为:1,2</desc>
</param>
<param>
<name>rule_name</name>
<type>String</type>
<required>required</required>
<max_length>15</max_length>
<desc>规则名称</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回规则添加是否成功</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<level>Basic</level>
<desc>新增的规则ID</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.rule.delete</name>
<desc>分组规则删除</desc>
<request>
<param>
<name>rule_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>规则id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>删除是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.rule.group.set</name>
<desc>将规则应用或取消应用到分组上，add_groups和delete_groups，两个参数最少填写一个。</desc>
<request>
<param>
<name>add_groups</name>
<type>Number</type>
<required>special</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>需要添加到规则的分组</desc>
</param>
<param>
<name>delete_groups</name>
<type>Number</type>
<required>special</required>
<max_list_size>10</max_list_size>
<min_value>1</min_value>
<desc>需要删除的分组</desc>
</param>
<param>
<name>rule_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>规则id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.rules.get</name>
<desc>获取现有的规则列表</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<max_value>1000000</max_value>
<min_value>1</min_value>
<desc>当前显示第几页，如果current_page超过页码范围或者小于页码范围，将直接返回空白页</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>一页返回的记录的个数</desc>
</param>
</request>
<response>
<param>
<name>rule_list</name>
<type>RuleData</type>
<level>Object Array</level>
<desc>规则列表</desc>
</param>
<param>
<name>total_result</name>
<type>Number</type>
<level>Basic</level>
<desc>记录的总条数</desc>
</param>
</response>
</api>
<api>
<name>taobao.crm.shopvip.cancel</name>
<desc>此接口用于取消VIP优惠</desc>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.huabao.channel.get</name>
<desc>更新频道Id取频道详情</desc>
<request>
<param>
<name>channel_id</name>
<type>Number</type>
<required>required</required>
<desc>频道Id</desc>
</param>
</request>
<response>
<param>
<name>channel</name>
<type>PosterChannel</type>
<level>Object</level>
<desc>频道信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.huabao.channels.get</name>
<desc>取画报所有频道</desc>
<response>
<param>
<name>channels</name>
<type>PosterChannel</type>
<level>Object Array</level>
<desc>类目信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.huabao.poster.get</name>
<desc>根据画报Id取画报详情</desc>
<request>
<param>
<name>poster_id</name>
<type>Number</type>
<required>required</required>
<desc>画报的Id值</desc>
</param>
</request>
<response>
<param>
<name>pics</name>
<type>PosterPicture</type>
<level>Object Array</level>
<desc>画报图片</desc>
</param>
<param>
<name>poster</name>
<type>Poster</type>
<level>Object</level>
<desc>画报信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.huabao.poster.goodsinfo.get</name>
<desc>根据画报ID获得与其相关的商品信息</desc>
<request>
<param>
<name>poster_id</name>
<type>Number</type>
<required>required</required>
<desc>画报的ID</desc>
</param>
</request>
<response>
<param>
<name>goodsinfolist</name>
<type>PosterGoodsInfo</type>
<level>Object Array</level>
<desc>和画报相关的商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.huabao.posters.get</name>
<desc>取指定频道Id的画报列表，可以支持分页</desc>
<request>
<param>
<name>channel_id</name>
<type>Number</type>
<required>required</required>
<desc>频道的Id值</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>当前页，默认为1（当输入为负，零，或者超出页数范围时，取默认值）</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>10</min_value>
<desc>查询返回的记录数</desc>
</param>
</request>
<response>
<param>
<name>posters</name>
<type>Poster</type>
<level>Object Array</level>
<desc>画报信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.huabao.specialposters.get</name>
<desc>取指定频道Id的指定条数推荐画报</desc>
<request>
<param>
<name>channel_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>15</max_list_size>
<desc>频道Id</desc>
</param>
<param>
<name>number</name>
<type>Number</type>
<required>optional</required>
<desc>返回的记录数，默认10条，最多20条，如果请求超过20或者小于等于10，则按10条返回 type为NEW时该参数无效,返回为指定频道的最新的一条记录</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>类型可选：HOT(热门），RECOMMEND（推荐），NEW（最新）</desc>
</param>
</request>
<response>
<param>
<name>posters</name>
<type>Poster</type>
<level>Object Array</level>
<desc>画报信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.add</name>
<desc>同一卖家最多添加500个图片分类，图片分类名称长度最大为20个字符</desc>
<request>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类的父分类,一级分类的parent_id为0,二级分类的则为其父分类的picture_category_id</desc>
</param>
<param>
<name>picture_category_name</name>
<type>String</type>
<required>required</required>
<desc>图片分类名称，最大长度20字符，中英文都算一字符，不能为空</desc>
</param>
</request>
<response>
<param>
<name>picture_category</name>
<type>PictureCategory</type>
<level>Object</level>
<desc>图片分类信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.get</name>
<desc>获取图片分类信息</desc>
<request>
<param>
<name>modified_time</name>
<type>Date</type>
<required>optional</required>
<desc>图片分类的修改时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片分类。</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>取二级分类时设置为对应父分类id 
取一级分类时父分类id设为0 
取全部分类的时候不设或设为-1</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类ID</desc>
</param>
<param>
<name>picture_category_name</name>
<type>String</type>
<required>optional</required>
<desc>图片分类名，不支持模糊查询</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>分类类型,fixed代表店铺装修分类类别，auction代表宝贝分类类别，user-define代表用户自定义分类类别</desc>
</param>
</request>
<response>
<param>
<name>picture_categories</name>
<type>PictureCategory</type>
<level>Object Array</level>
<desc>图片分类</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.update</name>
<desc>更新图片分类的名字，或者更新图片分类的父分类（即分类移动）。只能移动2级分类到非2级分类，默认分类和1级分类不可移动。</desc>
<request>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>要更新的图片分类的id</desc>
</param>
<param>
<name>category_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>图片分类的新名字，最大长度20字符，不能为空</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类的新父分类id</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新图片分类是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.delete</name>
<desc>删除图片空间图片</desc>
<request>
<param>
<name>picture_ids</name>
<type>String</type>
<required>required</required>
<desc>图片ID字符串,可以一个也可以一组,用英文逗号间隔,如450,120,155</desc>
</param>
</request>
<response>
<param>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.get</name>
<desc>获取图片信息</desc>
<request>
<param>
<name>deleted</name>
<type>String</type>
<required>optional</required>
<desc>是否删除,unfroze代表没有删除</desc>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>modified_time</name>
<type>Date</type>
<required>optional</required>
<desc>图片被修改的时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片。</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>图片查询结果排序,time:desc按上传时间从晚到早(默认), time:asc按上传时间从早到晚,sizes:desc按图片从大到小，sizes:asc按图片从小到大,默认time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推,默认值为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值40</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类ID</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片ID</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传开始时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>图片标题,最大长度50字符,中英文都算一字符</desc>
</param>
</request>
<response>
<param>
<name>pictures</name>
<type>Picture</type>
<level>Object Array</level>
<desc>图片信息列表</desc>
</param>
<param>
<name>totalResults</name>
<type>Number</type>
<level>Basic</level>
<desc>总的结果数</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.isreferenced.get</name>
<desc>查询图片是否被引用，被引用返回true，未被引用返回false</desc>
<request>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>图片id</desc>
</param>
</request>
<response>
<param>
<name>is_referenced</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片是否被引用</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.referenced.get</name>
<desc>查询图片被引用的详情，包括引用者，引用者名字，引用者地址</desc>
<request>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>图片id</desc>
</param>
</request>
<response>
<param>
<name>references</name>
<type>ReferenceDetail</type>
<level>Object Array</level>
<desc>引用详情列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.replace</name>
<desc>替换一张图片，只替换图片数据，图片名称，图片分类等保持不变。</desc>
<request>
<param>
<name>image_data</name>
<type>byte[]</type>
<required>required</required>
<desc>图片二进制文件流,不能为空,允许png、jpg、gif图片格式</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>要替换的图片的id，必须大于0</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片替换是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.update</name>
<desc>修改指定图片的图片名</desc>
<request>
<param>
<name>new_name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>新的图片名，最大长度50字符，不能为空</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>要更改名字的图片的id</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.upload</name>
<desc>上传单张图片</desc>
<request>
<param>
<name>image_input_title</name>
<type>String</type>
<required>required</required>
<desc>包括后缀名的图片标题,不能为空，如Bule.jpg,有些卖家希望图片上传后取图片文件的默认名</desc>
</param>
<param>
<name>img</name>
<type>byte[]</type>
<required>required</required>
<desc>图片二进制文件流,不能为空,允许png、jpg、gif图片格式</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>required</required>
<desc>图片分类ID，设置具体某个分类ID或设置0上传到默认分类，只能传入一个分类</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>图片标题,如果为空,传的图片标题就取去掉后缀名的image_input_title,超过50字符长度会截取50字符,重名会在标题末尾加"(1)";标题末尾已经有"(数字)"了，则数字加1</desc>
</param>
</request>
<response>
<param>
<name>picture</name>
<type>Picture</type>
<level>Object</level>
<desc>当前上传的一张图片信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.userinfo.get</name>
<desc>查询用户的图片空间使用信息，包括：订购量，已使用容量，免费容量，总的可使用容量，订购有效期，剩余容量</desc>
<response>
<param>
<name>user_info</name>
<type>UserInfo</type>
<level>Object</level>
<desc>用户使用图片空间的信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.role.add</name>
<desc>给指定的卖家创建新的子账号角色&lt;br/&gt; 
如果需要授权的权限点有下级权限点或上级权限点，把该权限点的父权限点和该权限点的所有子权限都一并做赋权操作，并递归处理&lt;br/&gt;例如：权限点列表如下&lt;br/&gt; 
code=sell 宝贝管理&lt;br/&gt; 
---------|code=sm 店铺管理&lt;br/&gt; 
---------|---------|code=sm-design 如店铺装修&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-visit内店装修入口&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-publish内店装修发布&lt;br/&gt; 
---------|---------|code=phone 手机淘宝店铺&lt;br/&gt; 
调用改接口给code=sm-design店铺装修赋权时，同时会将下列权限点都赋予默认角色&lt;br/&gt; 
code=sell 宝贝管理&lt;br/&gt; 
---------|code=sm 店铺管理&lt;br/&gt; 
---------|---------|code=sm-design 如店铺装修&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-visit内店装修入口&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-publish内店装修发布&lt;br/&gt;</desc>
<request>
<param>
<name>description</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>角色描述</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>角色名</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>500</max_length>
<desc>表示卖家昵称</desc>
</param>
<param>
<name>permission_codes</name>
<type>String</type>
<required>optional</required>
<max_list_size>2000</max_list_size>
<desc>需要授权的权限点permission_code列表,以","分割.其code值可以通过调用taobao.sellercenter.user.permissions.get返回，其中permission.is_authorize=1的权限点可以通过本接口授权给对应角色。</desc>
</param>
</request>
<response>
<param>
<name>role</name>
<type>Role</type>
<level>Object</level>
<desc>子账号角色</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.role.info.get</name>
<desc>获取指定角色的信息。只能查询属于自己的角色信息 (主账号或者某个主账号的子账号登陆，只能查询属于该主账号的角色信息)</desc>
<request>
<param>
<name>role_id</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<desc>角色id</desc>
</param>
</request>
<response>
<param>
<name>role</name>
<type>Role</type>
<level>Object</level>
<desc>角色具体信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.rolemembers.get</name>
<desc>获取指定卖家的角色下属员工列表，只能获取属于登陆者自己的信息。</desc>
<request>
<param>
<name>role_id</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<desc>角色id</desc>
</param>
</request>
<response>
<param>
<name>subusers</name>
<type>SubUserInfo</type>
<level>Object Array</level>
<desc>子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.roles.get</name>
<desc>获取指定卖家的角色列表，只能获取属于登陆者自己的信息。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>500</max_length>
<desc>卖家昵称(只允许查询自己的信息：当前登陆者)</desc>
</param>
</request>
<response>
<param>
<name>roles</name>
<type>Role</type>
<level>Object Array</level>
<desc>卖家子账号角色列表。&lt;br/&gt;返回对象为 role数据对象中的role_id，role_name，description，seller_id，create_time，modified_time。不包含permissions(权限点)</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.subuser.permissions.roles.get</name>
<desc>查询指定的子账号的被直接赋予的权限信息和角色信息。&lt;br/&gt;返回对象中包括直接赋予子账号的权限点信息、被赋予的角色以及角色的对应权限点信息。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>子账号昵称(子账号标识)</desc>
</param>
</request>
<response>
<param>
<name>subuser_permission</name>
<type>SubUserPermission</type>
<level>Object</level>
<desc>子账号被所拥有的权限</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.subusers.get</name>
<desc>根据主账号nick查询该账号下所有的子账号列表，只能查询属于自己的账号信息 (主账号以及所属子账号)</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>表示卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>subusers</name>
<type>SubUserInfo</type>
<level>Object Array</level>
<desc>子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.user.permissions.get</name>
<desc>获取指定用户的权限集合，并不组装成树。如果是主账号，返回所有的权限列表；如果是子账号，返回所有已授权的权限。只能查询属于自己的账号信息 (如果是主账号，则是主账号以及所属子账号，如果是子账号则是对应主账号以及所属子账号)</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户标识</desc>
</param>
</request>
<response>
<param>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>权限列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.order.search</name>
<desc>用于ISV查询自己名下的应用及收费项目的订单记录（已付款订单）。 
目前所有应用调用此接口的频率限制为200次/分钟，即每分钟内，所有应用调用此接口的次数加起来最多为200次。 
建议用于查询前一日的历史记录。</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</param>
<param>
<name>biz_order_id</name>
<type>Number</type>
<required>optional</required>
<desc>订单号</desc>
</param>
<param>
<name>biz_type</name>
<type>Number</type>
<required>optional</required>
<desc>订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到） 空=全部</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间（订购时间）结束值</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>淘宝会员名</desc>
</param>
<param>
<name>order_id</name>
<type>Number</type>
<required>optional</required>
<desc>子订单号</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>一页包含的记录数</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间（订购时间）起始值（当start_created和end_created都不填写时，默认返回最近90天的数据）</desc>
</param>
</request>
<response>
<param>
<name>article_biz_orders</name>
<type>ArticleBizOrder</type>
<level>Object Array</level>
<desc>商品订单对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.subsc.search</name>
<desc>用于ISV查询自己名下的应用及收费项目的订购记录</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</param>
<param>
<name>autosub</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否自动续费，true=自动续费 false=非自动续费 空=全部</desc>
</param>
<param>
<name>end_deadline</name>
<type>Date</type>
<required>optional</required>
<desc>到期时间结束值</desc>
</param>
<param>
<name>expire_notice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否到期提醒，true=到期提醒 false=非到期提醒 空=全部</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>淘宝会员名</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>一页包含的记录数</desc>
</param>
<param>
<name>start_deadline</name>
<type>Date</type>
<required>optional</required>
<desc>到期时间起始值（当start_deadline和end_deadline都不填写时，默认返回最近90天的数据）</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>订购记录状态，1=有效 2=过期 空=全部</desc>
</param>
</request>
<response>
<param>
<name>article_subs</name>
<type>ArticleSub</type>
<level>Object Array</level>
<desc>订购关系对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.subscribe.get</name>
<desc>用于ISV根据登录进来的淘宝会员名查询该为该会员开通哪些收费项目，ISV只能查询自己名下的应用及收费项目的订购情况</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>淘宝会员名</desc>
</param>
</request>
<response>
<param>
<name>article_user_subscribes</name>
<type>ArticleUserSubscribe</type>
<level>Object Array</level>
<desc>用户订购信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.get</name>
<desc>获取单笔退款详情</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>refund_id, alipay_no, tid, oid, buyer_nick, seller_nick, total_fee, status, created, refund_fee, good_status, has_good_return, payment, reason, desc, num_iid, title, price, num, good_return_time, company_name, sid, address, shipping_type, refund_remind_timeout</optional>
<desc>需要返回的字段。目前支持有：refund_id, alipay_no, tid, oid, buyer_nick, seller_nick, total_fee, status, created, refund_fee, good_status, has_good_return, payment, reason, desc, num_iid, title, price, num, good_return_time, company_name, sid, address, shipping_type, refund_remind_timeout</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>1</min_value>
<desc>退款单号</desc>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<desc>搜索到的交易信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.message.add</name>
<desc>创建退款留言/凭证</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>留言内容。最大长度: 400个字节</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>图片（凭证）。类型: JPG,GIF,PNG;最大为: 500K</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款编号。</desc>
</param>
</request>
<response>
<param>
<name>refund_message</name>
<type>RefundMessage</type>
<level>Object</level>
<desc>退款信息。包含id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.messages.get</name>
<desc>单笔退款详情</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>RefundMessage</optional>
<desc>需返回的字段列表。可选值：RefundMessage结构体中的所有字段，以半角逗号(,)分隔。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单号</desc>
</param>
</request>
<response>
<param>
<name>refund_messages</name>
<type>RefundMessage</type>
<level>Object Array</level>
<desc>搜索到的留言凭证信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的留言凭证总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.refuse</name>
<desc>卖家拒绝单笔退款交易，要求如下： 
1. 传入的refund_id和相应的tid, oid必须匹配 
2. 如果一笔订单只有一笔子订单，则tid必须与oid相同 
3. 只有卖家才能执行拒绝退款操作 
4. 以下三种情况不能退款：卖家未发货；7天无理由退换货；网游订单</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>退款记录对应的交易子订单号</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单号</desc>
</param>
<param>
<name>refuse_message</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>拒绝退款时的说明信息，长度2-200</desc>
</param>
<param>
<name>refuse_proof</name>
<type>byte[]</type>
<required>optional</required>
<max_length>130000</max_length>
<desc>拒绝退款时的退款凭证，一般是卖家拒绝退款时使用的发货凭证，最大长度130000字节，支持的图片格式：GIF, JPG, PNG</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>退款记录对应的交易订单号</desc>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<desc>拒绝退款成功后，会返回Refund数据结构中的refund_id, status, modified字段</desc>
</param>
</response>
</api>
<api>
<name>taobao.refunds.apply.get</name>
<desc>查询买家申请的退款列表，且查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee</optional>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。传入值为 1 代表第一页，传入值为 2 代表第二页，依此类推。默认返回的数据是从第一页开始</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>optional</required>
<desc>卖家昵称</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</param>
</request>
<response>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.refunds.receive.get</name>
<desc>查询卖家收到的退款列表，查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>查询修改时间结束。格式: yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee, oid, good_status, company_name, sid, payment, reason, desc, has_good_return, modified, order_status</optional>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee, oid, good_status, company_name, sid, payment, reason, desc, has_good_return, modified, order_status</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>查询修改时间开始。格式: yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</param>
</request>
<response>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.jianghu.fan.check</name>
<desc>判断是否是粉丝</desc>
<request>
<param>
<name>follower_id</name>
<type>Number</type>
<required>required</required>
<desc>粉丝的id</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>required</required>
<desc>达人的id值</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Check</type>
<level>Object</level>
<desc>true or false</desc>
</param>
</response>
</api>
<api>
<name>taobao.jianghu.fan.follow</name>
<desc>用户对一个掌柜进行关注. 
关注操作失败返回对应的错误码. 
已经关注的过再调用时，返回错误信息，提示已经关注过。</desc>
<request>
<param>
<name>shop_owner_id</name>
<type>Number</type>
<required>required</required>
<desc>掌柜的id，被关注者的id</desc>
</param>
</request>
<response>
<param>
<name>follow_result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true 成功。false 失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.categoryrecommend.items.get</name>
<desc>根据类目信息推荐相关联的宝贝集</desc>
<request>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>传入叶子类目ID</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议获取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：类目下热门商品推荐。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回关联的商品集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemrecommend.items.get</name>
<desc>根据推荐类型获取推荐的关联关系商品</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求返回宝贝的个数，建议取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外的参数信息</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>查询类型标识符，可传入1-3，1：同类商品推荐，2：异类商品推荐， 3：同店商品推荐。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>values</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回的推荐商品列表结果集</desc>
</param>
</response>
</api>
<api>
<name>taobao.shoprecommend.items.get</name>
<desc>根据店铺信息推荐相关联的宝贝集</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议获取10个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：店内热门商品推荐。其他值当非法值处理</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>传入卖家ID</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回与店铺关联的宝贝集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.shoprecommend.shops.get</name>
<desc>根据店铺信息推荐相关联的店铺集</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议获取16个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：关联店铺推荐。其他值当非法值处理</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>传入卖家ID</desc>
</param>
</request>
<response>
<param>
<name>favorite_shops</name>
<type>FavoriteShop</type>
<level>Object Array</level>
<desc>返回与店铺关联的店铺集</desc>
</param>
</response>
</api>
<api>
<name>taobao.userrecommend.items.get</name>
<desc>根据用户信息推荐相关联的宝贝集。仅支持widget入口调用，需要同时校验淘宝cookie登陆情况，以及cookie和session授权的一致性。调用入口为/widget/rest。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret)。timestamp为60分钟内有效 
此API为组件API，调用方式需要参照：http://open.taobao.com/doc/detail.htm?id=988，以JS-SDK调用</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：用户购买意图。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回用户相关的关联宝贝集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.appapirule.check</name>
<desc>app指定api名称获取此api的http调用方法、app是否有请求权限、是否需要授权等信息。仅支持widget入口调用。调用入口为/widget。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret,secret)。timestamp为60分钟内有效</desc>
<request>
<param>
<name>api_name</name>
<type>String</type>
<required>required</required>
<desc>要判断权限的api名称，如果指定的api不存在，报错invalid method</desc>
</param>
</request>
<response>
<param>
<name>call_permission</name>
<type>String</type>
<level>Basic</level>
<desc>当前app是否可以调用次api。可以返回true，不可用返回false。</desc>
</param>
<param>
<name>http_method</name>
<type>String</type>
<level>Basic</level>
<desc>此api请求的http类型：get或post</desc>
</param>
<param>
<name>need_auth</name>
<type>String</type>
<level>Basic</level>
<desc>此api是否需要用户授权。true表示必需授权，false表示可选授权或无需授权</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.cartcount.get</name>
<desc>获取当前授权用户通过当前app加入购物车的商品记录条数。session必传且用户当前浏览器必需已经在淘宝登陆，具体判断方法可以调用taobao.widget.loginstatus.get进行判断。仅支持widget入口调用。调用入口为/widget。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret, secret)。timestamp为60分钟内有效</desc>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>当前用户通过当前app加入购物车的商品记录条数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.cartitem.add</name>
<desc>当前授权用户通过当前app将指定商品加入购物车。session必传且用户当前浏览器必需已经在淘宝登陆，具体判断方法可以调用taobao.widget.loginstatus.get进行判断。具体的购物车相关业务逻辑详见taobao.cart.item.add接口的逻辑约束。仅支持widget入口调用。调用入口为/widget。签名方法为服务端签名，用户可以通过taobao.widget.itempanel.get获得相关链接内容，不支持isv自己签名请求。timestamp为60分钟内有效</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要购买的商品的数字id，同Item的num_iid字段</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<max_value>999999</max_value>
<min_value>1</min_value>
<desc>需要购买的数量，至少购买1件</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>要购买的sku的id，如果是无sku的商品此字段不传，如果是有sku的商品必需指定sku_id。同sku的sku_id字段</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否添加成功。同一个商品同一个sku添加多次购买记录不增加，单挑的购买数量增加</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.cartitem.delete</name>
<desc>当前授权用户删除通过当前app加入购物车的商品记录。session必传且用户当前浏览器必需已经在淘宝登陆，具体判断方法可以调用taobao.widget.loginstatus.get进行判断。具体的购物车相关业务逻辑详见taobao.cart.item.delete接口的逻辑约束。仅支持widget入口调用。调用入口为/widget。签名方法为服务端签名，用户可以通过taobao.widget.cartpanel.get获得相关删除链接内容，不支持isv自己签名请求。timestamp为60分钟内有效</desc>
<request>
<param>
<name>cart_id</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>要删除的购物车记录id号</desc>
</param>
</request>
<response>
<param>
<name>cart_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被成功删除的购物车id号</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>删除是否成功，true表示成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.cartpanel.get</name>
<desc>获取当前授权用户通过当前app加入购物车的商品记录。session必传且用户当前浏览器必需已经在淘宝登陆，具体判断方法可以调用taobao.widget.loginstatus.get进行判断。仅支持widget入口调用。调用入口为/widget。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret, secret)。timestamp为60分钟内有效</desc>
<response>
<param>
<name>cart_info</name>
<type>WidgetCartInfo</type>
<level>Object Array</level>
<desc>当前用户通过当前app加入购物车的商品记录列表。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>当前用户通过当前app加入购物车的商品记录条数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.itempanel.get</name>
<desc>根据商品id获取sku选择面板需要的信息。session必传且用户当前浏览器必需已经在淘宝登陆，具体判断方法可以调用taobao.widget.loginstatus.get进行判断。会根据session生成购买链接。仅支持widget入口调用。调用入口为/widget。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret, secret)。timestamp为60分钟内有效</desc>
<request>
<param>
<name>fields</name>
<type>String</type>
<required>optional</required>
<optional>WidgetItem</optional>
<default></default>
<desc>参数fields为选填参数，表示需要返回哪些字段，默认为空：表示所有字段都返回。指定item_id返回item_id; 指定title返回title; 指定click_url返回click_url(如果此商品有淘宝客会默认返回转换过的淘宝客连接，绑定用户为appkey对应的用户); 指定price返回price(商品价格，如果有多个sku返回的是sku的价格区间); 指定quantify返回quantity(商品总数); 指定pic_url返回pic_url(商品主图地址); 指定item_pics返回item_pics(商品图片列表); 指定skus返回skus和sku_props组合; 指定shop_promotion_data返回shop_promotion_data(商品所属的店铺优惠信息); 指定item_promotion_data返回item_promotion_data(商品的优惠信息); 指定seller_nick返回seller_nick(卖家昵称); 指定is_mall返回is_mall(是否商城商品，true表示是商城商品);add_url不可选一定会返回</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>要查询的商品的数字id，等同于Item的num_iid</desc>
</param>
</request>
<response>
<param>
<name>add_url</name>
<type>String</type>
<level>Basic</level>
<desc>服务端签名后的添加链接，isv在使用的时候前面加上“http://gw.api.taobao.com/widget?”后面加上用户选择的sku_id和购买的quantity即可生成完整的购买链接。</desc>
</param>
<param>
<name>item</name>
<type>WidgetItem</type>
<level>Object</level>
<desc>取得的商品相关信息，如果不指定fields返回所有字段，如果指定了fields但是都是无效字段，返回的item结构体中字段为空</desc>
</param>
</response>
</api>
<api>
<name>taobao.widget.loginstatus.get</name>
<desc>获取当前浏览器用户在淘宝登陆状态。如果传了session并且此用户已在淘宝登陆，返回nick和userId。仅支持widget入口调用。调用入口为/widget。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret, secret)。timestamp为60分钟内有效</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>指定判断当前浏览器登陆用户是否此昵称用户，并且返回是否登陆。如果用户不一致返回未登陆，如果用户一致且已登录返回已登陆</desc>
</param>
</request>
<response>
<param>
<name>is_login</name>
<type>Boolean</type>
<level>Basic</level>
<desc>当前浏览器用户是否已登陆。如果指定了nick，但是nick与浏览器用户不一致返回false。如果未指定nick，以浏览器用户登陆状态为准。如果指定了nick且与浏览器用户一致，以浏览器用户登陆状态为准</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝用户的昵称，传了session且已登陆才返回</desc>
</param>
<param>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝用户的数字id，传了session且已登录才返回。</desc>
</param>
</response>
</api>
<api>
<name>alipay.topats.user.accountreport.get</name>
<desc>查询用户支付宝账务明细</desc>
<request>
<param>
<name>charset</name>
<type>String</type>
<required>optional</required>
<desc>返回下载结果文件的数据格式，只支持utf-8和gbk编码，默认是utf-8</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>对账单结束时间。end_time - start_time &lt;= 1个自然月</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<optional>Task</optional>
<desc>需要返回的字段列表。create_time:创建时间,type：账务类型,business_type:子业务类型,balance:当时支付宝账户余额,in_amount:收入金额,out_amount:支出金额,alipay_order_no:支付宝订单号,merchant_order_no:商户订单号,self_user_id:自己的支付宝ID,opt_user_id:对方的支付宝ID,memo:账号备注</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>对账单开始时间</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>账务类型。多个类型是，用逗号分隔，不传则查询所有类型的。PAYMENT:在线支付，TRANSFER:转账，DEPOSIT:充值，WITHDRAW:提现，CHARGE:收费，PREAUTH:预授权，OTHER：其它。</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.account.freeze.get</name>
<desc>查询支付宝账户冻结类型的冻结金额。</desc>
<request>
<param>
<name>freeze_type</name>
<type>String</type>
<required>optional</required>
<desc>冻结类型，多个用,分隔。不传返回所有类型的冻结金额。 
DEPOSIT_FREEZE,充值冻结 
WITHDRAW_FREEZE,提现冻结 
PAYMENT_FREEZE,支付冻结 
BAIL_FREEZE,保证金冻结 
CHARGE_FREEZE,收费冻结 
PRE_DEPOSIT_FREEZE,预存款冻结 
LOAN_FREEZE,贷款冻结 
OTHER_FREEZE,其它</desc>
</param>
</request>
<response>
<param>
<name>freeze_items</name>
<type>AccountFreeze</type>
<level>Object Array</level>
<desc>冻结金额列表</desc>
</param>
<param>
<name>total_results</name>
<type>String</type>
<level>Basic</level>
<desc>冻结总条数</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.account.get</name>
<desc>查询支付宝账户余额</desc>
<response>
<param>
<name>alipay_account</name>
<type>AlipayAccount</type>
<level>Object</level>
<desc>支付宝用户账户信息</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.contract.get</name>
<desc>获取支付宝用户订购信息。在不确认用户对应用是否订购的时候，可以调用此API查询。</desc>
<response>
<param>
<name>alipay_contract</name>
<type>AlipayContract</type>
<level>Object</level>
<desc>支付宝用户订购信息</desc>
</param>
</response>
</api>
<api>
<name>alipay.user.trade.search</name>
<desc>查询支付宝账户消费明细</desc>
<request>
<param>
<name>alipay_order_no</name>
<type>String</type>
<required>optional</required>
<desc>支付宝订单号，为空查询所有记录</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间。与开始时间间隔在七天之内</desc>
</param>
<param>
<name>merchant_order_no</name>
<type>String</type>
<required>optional</required>
<desc>商户订单号，为空查询所有记录</desc>
</param>
<param>
<name>order_from</name>
<type>String</type>
<required>optional</required>
<desc>订单来源，为空查询所有来源。淘宝(TAOBAO)，支付宝(ALIPAY)，其它(OTHER)</desc>
</param>
<param>
<name>order_status</name>
<type>String</type>
<required>optional</required>
<desc>订单状态，为空查询所有状态订单</desc>
</param>
<param>
<name>order_type</name>
<type>String</type>
<required>optional</required>
<desc>订单类型，为空查询所有类型订单。</desc>
</param>
<param>
<name>page_no</name>
<type>String</type>
<required>required</required>
<desc>页码。取值范围:大于零的整数; 默认值1</desc>
</param>
<param>
<name>page_size</name>
<type>String</type>
<required>required</required>
<desc>每页获取条数。最大值500。</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，时间必须是今天范围之内。格式为yyyy-MM-dd HH:mm:ss，精确到秒</desc>
</param>
</request>
<response>
<param>
<name>total_pages</name>
<type>String</type>
<level>Basic</level>
<desc>总页数</desc>
</param>
<param>
<name>total_results</name>
<type>String</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
<param>
<name>trade_records</name>
<type>TradeRecord</type>
<level>Object Array</level>
<desc>交易记录列表</desc>
</param>
</response>
</api>
</apis>
</metadata>
